{"version":3,"file":"static/js/ItemsMovieSets.3eef1acb.chunk.js","mappings":"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","sources":["hooks/useCopyToClipboardFunction.ts","components/Items/ItemsMoviesTable.tsx","pages/Items/ItemsMovieSets.tsx","../node_modules/copy-to-clipboard/index.js","../node_modules/react-use/esm/useSetState.js","../node_modules/react-use/esm/useCopyToClipboard.js","../node_modules/react-use/esm/useMountedState.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { Flex, Space, Table, Typography } from 'antd';\nimport { Item } from 'components/Sprites';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { orderBy } from 'lodash';\nimport { DailyMovieSet } from 'types';\nimport { removeDuplicates } from 'utils';\n\nimport type { TableProps } from 'antd';\nfunction orderSets(givenSets: DailyMovieSet[]) {\n  return orderBy(givenSets, [\n    (s) => removeDuplicates(s.itemsIds).filter(Boolean).length > 0,\n    (s) => s.title,\n  ]).map((s) => ({\n    ...s,\n    itemsIds: orderBy(s.itemsIds, (id) => Number(id)),\n  }));\n}\n\nexport function ItemsMoviesTable({ data }: UseResourceFirebaseDataReturnType<DailyMovieSet>) {\n  const sets = data ? orderSets(Object.values(data)) : [];\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  const columns: TableProps<DailyMovieSet>['columns'] = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      key: 'title',\n      render: (title) => <span>{title}</span>,\n    },\n    {\n      title: 'Year',\n      dataIndex: 'year',\n      key: 'year',\n      render: (year) => <span>{year}</span>,\n    },\n    {\n      title: 'Items',\n      dataIndex: 'itemsIds',\n      key: 'itemsIds',\n      render: (itemsIds: string[], record) => (\n        <Flex gap={6} wrap=\"wrap\" key={`items-${record.title}`}>\n          {itemsIds.map((itemId) => (\n            <Flex key={`${record.title}-${itemId}`} gap={2} vertical>\n              <Item id={itemId} width={60} />\n              <Flex justify=\"center\">\n                <Typography.Text onClick={() => copyToClipboard(itemId)}>{itemId}</Typography.Text>\n              </Flex>\n            </Flex>\n          ))}\n        </Flex>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'itemsIds',\n      key: 'count',\n      render: (itemsIds: string[]) => removeDuplicates(itemsIds).filter(Boolean).length,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\">\n      <Table columns={columns} dataSource={sets} />\n    </Space>\n  );\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsMoviesTable } from 'components/Items/ItemsMoviesTable';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyMovieSet } from 'types';\n\nexport function ItemsMovieSets() {\n  const moviesData = useResourceFirebaseData<DailyMovieSet>({\n    tdrResourceName: 'daily-movie-sets',\n    firebaseDataCollectionName: 'movieSets',\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Movie Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <>-</>\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={moviesData.isLoading}\n            error={moviesData.error}\n            hasResponseData={!isEmpty(moviesData.data)}\n          >\n            <ItemsMoviesTable {...moviesData} />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsMovieSets;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n","import writeText from 'copy-to-clipboard';\nimport { useCallback } from 'react';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\nvar useCopyToClipboard = function () {\n    var isMounted = useMountedState();\n    var _a = useSetState({\n        value: undefined,\n        error: undefined,\n        noUserInteraction: true,\n    }), state = _a[0], setState = _a[1];\n    var copyToClipboard = useCallback(function (value) {\n        if (!isMounted()) {\n            return;\n        }\n        var noUserInteraction;\n        var normalizedValue;\n        try {\n            // only strings and numbers casted to strings can be copied to clipboard\n            if (typeof value !== 'string' && typeof value !== 'number') {\n                var error = new Error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            // empty strings are also considered invalid\n            else if (value === '') {\n                var error = new Error(\"Cannot copy empty string to clipboard.\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            normalizedValue = value.toString();\n            noUserInteraction = writeText(normalizedValue);\n            setState({\n                value: normalizedValue,\n                error: undefined,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n        catch (error) {\n            setState({\n                value: normalizedValue,\n                error: error,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n    }, []);\n    return [state, copyToClipboard];\n};\nexport default useCopyToClipboard;\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["useCopyToClipboardFunction","state","copyToClipboard","useCopyToClipboard","message","App","useEffect","value","length","info","truncate","omission","success","ItemsMoviesTable","data","sets","givenSets","Object","values","orderBy","s","removeDuplicates","itemsIds","filter","Boolean","title","map","id","Number","columns","dataIndex","key","render","year","record","gap","wrap","itemId","vertical","width","justify","onClick","direction","dataSource","ItemsMovieSets","moviesData","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","subtitle","hasSider","PageSider","className","DataLoadingWrapper","isLoading","error","hasResponseData","isEmpty","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","reselectPrevious","range","selection","mark","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","initialState","_a","useState","set","useCallback","patch","prevState","assign","Function","isMounted","mountedRef","useRef","get","current","useMountedState","useSetState","undefined","noUserInteraction","setState","normalizedValue","toString","writeText","MutationObserver","Subscribable","constructor","client","super","this","setOptions","bindMethods","mutate","bind","reset","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","observer","mutationKey","hashKey","status","onUnsubscribe","hasListeners","removeObserver","onMutationUpdate","action","getCurrentResult","variables","build","addObserver","execute","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","context","onSuccess","onSettled","onError","listeners","forEach","listener","useMutation","queryClient","useQueryClient","React","result","onStoreChange","subscribe","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync","r","t","f","n","Array","isArray","o","arguments"],"sourceRoot":""}