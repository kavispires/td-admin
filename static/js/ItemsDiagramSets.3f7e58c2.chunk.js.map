{"version":3,"file":"static/js/ItemsDiagramSets.3f7e58c2.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/ResponseState.tsx","components/Common/SaveButton.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/Daily/utils/utils.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useUpdateFirebaseDoc.tsx","components/Items/Diagram/ItemsDiagramFilters.tsx","components/Items/Diagram/utils.ts","components/Items/Diagram/EditThingModal.tsx","components/Items/Diagram/AddNewThingFlow.tsx","components/Daily/utils/games/daily-teoria-de-conjuntos.ts","components/Items/Diagram/Thing.tsx","components/Items/Diagram/DiagramGameSample.tsx","components/Items/Diagram/RulesByThing.tsx","components/Items/Diagram/ThingsByRule.tsx","components/Items/Diagram/ItemUpdateGuard.tsx","components/Items/Diagram/GameSimulator.tsx","components/Items/Diagram/ItemsDiagramSetsContent.tsx","pages/Items/ItemsDiagramSets.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]);\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Checkbox, Form, InputNumber, Segmented, Select, Switch, Tooltip } from 'antd';\nimport { SegmentedValue } from 'antd/es/segmented';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport function FilterSwitch({ label, value, onChange, className, disabled }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" disabled={disabled} />\n    </Form.Item>\n  );\n}\n\nexport function FilterCheckBox({ label, value, onChange, disabled, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Checkbox checked={value} onChange={(e) => onChange(e.target.checked)} disabled={disabled} />\n    </Form.Item>\n  );\n}\n\ntype FilterSegmentsProps = {\n  label: ReactNode;\n  value?: string;\n  onChange: (mode: SegmentedValue) => void;\n  options: { value: string; title: string; icon: ReactNode }[];\n};\n\nexport function FilterSegments({ value, label, onChange, options }: FilterSegmentsProps) {\n  return (\n    <Form.Item label={label}>\n      <Segmented\n        block\n        value={value}\n        onChange={onChange}\n        options={options.map((option) => ({\n          label: <Tooltip title={option.title}>{option.icon}</Tooltip>,\n          value: option.value,\n        }))}\n      />\n    </Form.Item>\n  );\n}\n","import { sample } from 'lodash';\nimport moment from 'moment';\n\n/**\n * Returns the current date in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The current date in 'YYYY-MM-DD' format.\n */\nexport function getToday(): string {\n  return moment().format('YYYY-MM-DD');\n}\n\n/**\n * Returns the date of yesterday in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The date of yesterday in 'YYYY-MM-DD' format.\n */\nexport function getYesterday(): string {\n  return moment().subtract(1, 'days').format('YYYY-MM-DD');\n}\n\n/**\n * Calculates the next day based on the given date string.\n *\n * @param dateString - The date string in the format 'YYYY-MM-DD'.\n * @returns The next day in the format 'YYYY-MM-DD'.\n */\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n\n/**\n * Checks if a given date is a Saturday.\n *\n * @param {string} dateString - The date in 'YYYY-MM-DD' format.\n * @returns {boolean} True if the date is a Saturday, false otherwise.\n */\nexport function checkSaturday(dateString: string): boolean {\n  const date = moment(dateString, 'YYYY-MM-DD');\n  return date.day() === 6; // 6 represents Saturday in moment.js\n}\n\nconst THRESHOLD = 500;\nexport function getWordsWithUniqueLetters(words: string[]): string[] {\n  const selectedWords: string[] = [];\n  const usedLetters: BooleanDictionary = {};\n  let tries = 0;\n\n  while (selectedWords.length < 4 && tries < THRESHOLD) {\n    const word = sample(words) ?? '';\n    const splitWord = word.split('');\n    const isGood = splitWord.every((letter) => !usedLetters[letter]);\n    if (isGood) {\n      selectedWords.push(word);\n      splitWord.forEach((letter) => {\n        usedLetters[letter] = true;\n      });\n    } else {\n      tries++;\n    }\n  }\n  if (tries > THRESHOLD || selectedWords.length < 4) {\n    console.count('Could not find 4 words with unique letters');\n    while (selectedWords.length < 4) {\n      const word = sample(words) ?? '';\n      if (!selectedWords.includes(word)) {\n        selectedWords.push(word);\n      }\n    }\n  }\n\n  if (selectedWords.length < 4) {\n    console.error('Could not find 4 words with unique letters', selectedWords);\n  }\n\n  return selectedWords;\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { ClusterOutlined, TableOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterSegments } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { cloneDeep } from 'lodash';\nimport { DailyDiagramItem } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nexport function ItemsDiagramFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n  entriesToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const { addParams, queryParams } = useQueryParams();\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(entriesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"daily-diagram-items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'rule'}\n        onChange={(mode) => addParams({ display: mode, page: 1 }, { page: 1 })}\n        options={[\n          {\n            title: 'By Rule',\n            icon: <ClusterOutlined />,\n            value: 'rule',\n          },\n          {\n            title: 'By Thing',\n            icon: <TableOutlined />,\n            value: 'thing',\n          },\n        ]}\n      />\n\n      <Divider />\n\n      <Button size=\"small\" block onClick={() => addParams({ display: 'simulator' })}>\n        Simulator\n      </Button>\n\n      <Typography.Paragraph type=\"secondary\" className=\"my-6\">\n        v2.0.1\n      </Typography.Paragraph>\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(diagramItems: Dictionary<DailyDiagramItem>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(diagramItems);\n  // Object.values(copy).forEach((item) => {\n  //   item.syllables = (item.syllables ?? '').replace(/·/g, SYLLABLE_SEPARATOR);\n  // });\n  // console.log(copy);\n\n  return sortJsonKeys(copy);\n}\n","import { memoize } from 'lodash';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { stringRemoveAccents } from 'utils';\n\nexport const SYLLABLE_SEPARATOR = '|';\nexport const LETTERS = 'abcdefghijklmnopqrstuvwxyz';\nexport const CONSONANTS = 'bcdfghjklmnpqrstvwxyz';\nexport const VOWELS = 'aeiou';\nexport const ACCENTS = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n\nconst cleanupWord = memoize((word: string) => {\n  return stringRemoveAccents(word).toLowerCase();\n});\n\nconst countLetters = (word: string) => {\n  return cleanupWord(word).length;\n};\n\nconst countVowels = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => VOWELS.includes(letter)).length;\n};\n\nconst countConsonants = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => CONSONANTS.includes(letter)).length;\n};\n\nconst countAccents = (word: string) => {\n  return word\n    .toLowerCase()\n    .split('')\n    .filter((letter) => ACCENTS.test(letter)).length;\n};\n\nconst countWords = (text: string) => {\n  return text.split(' ').length;\n};\n\nexport const verifiers: Record<string, (word: string) => boolean> = {\n  // The first two letters are in alphabetical order\n  'ddr-7-pt': (word: string) => {\n    return LETTERS.indexOf(cleanupWord(word)[0]) < LETTERS.indexOf(cleanupWord(word)[1]);\n  },\n  // has 4 or less letters\n  'ddr-8-pt': (word: string) => countLetters(word) <= 4,\n  // Has exactly 5 letters\n  'ddr-9-pt': (word: string) => countLetters(word) === 5,\n  // Has 6 letters\n  'ddr-10-pt': (word: string) => countLetters(word) === 6,\n  // Has between 7\n  'ddr-11-pt': (word: string) => countLetters(word) === 7,\n  // Has more than 8 letters\n  'ddr-12-pt': (word: string) => countLetters(word) > 7,\n  // Has more than 1 word\n  'ddr-13-pt': (word: string) => countWords(word) > 1,\n  // Has two or more different vowels\n  'ddr-14-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size >= 2;\n  },\n  // Has 4 or less unique letters\n  'ddr-15-pt': (word: string) => new Set(cleanupWord(word).split('')).size <= 4,\n  // Has more consonants than vowels\n  'ddr-16-pt': (word: string) => countConsonants(word) > countVowels(word),\n  // Has more vowels than consonants\n  'ddr-17-pt': (word: string) => countVowels(word) > countConsonants(word),\n  // The first letter is repeated at least once\n  'ddr-18-pt': (word: string) => {\n    const firstLetter = cleanupWord(word)[0];\n    return cleanupWord(word).slice(1).includes(firstLetter);\n  },\n  // has repeated letters\n  'ddr-19-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) =>\n        cleanupWord(word)\n          .slice(index + 1)\n          .includes(letter)\n      );\n  },\n  // has repeated vowels\n  'ddr-20-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          VOWELS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has repeated consonants\n  'ddr-21-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          CONSONANTS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has consecutive vowels\n  'ddr-22-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => VOWELS.includes(letter) && VOWELS.includes(word[index + 1]));\n  },\n  // starts with letters from A to M\n  'ddr-23-pt': (word: string) => 'abcdefghijklm'.includes(cleanupWord(word)[0]),\n  // starts with letters from N to Z\n  'ddr-24-pt': (word: string) => 'nopqrstuvwxyz'.includes(cleanupWord(word)[0]),\n  // starts with a vowel\n  'ddr-25-pt': (word: string) => VOWELS.includes(cleanupWord(word)[0]),\n  // starts with a consonant\n  'ddr-26-pt': (word: string) => CONSONANTS.includes(cleanupWord(word)[0]),\n  // Double consecutive consonants\n  'ddr-27-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => CONSONANTS.includes(letter) && word[index + 1] === letter);\n  },\n  // Has an A\n  'ddr-28-pt': (word: string) => cleanupWord(word).includes('a'),\n  // Has an E\n  'ddr-29-pt': (word: string) => cleanupWord(word).includes('e'),\n  // Has an U\n  'ddr-30-pt': (word: string) => cleanupWord(word).includes('u'),\n  // Has a Q or J\n  'ddr-31-pt': (word: string) => cleanupWord(word).includes('q') || cleanupWord(word).includes('j'),\n  // Has a C or Ç\n  'ddr-32-pt': (word: string) => cleanupWord(word).includes('c') || cleanupWord(word).includes('ç'),\n  // Has an M or N followed by a consonant\n  'ddr-33-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (['m', 'n'].includes(letter) && CONSONANTS.includes(word[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has an H\n  'ddr-34-pt': (word: string) => cleanupWord(word).includes('h'),\n  // Has H preceded by a consonant\n  'ddr-35-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (letter === 'h' && CONSONANTS.includes(word[index - 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has K, W or Y\n  'ddr-36-pt': (word: string) =>\n    cleanupWord(word).includes('k') || cleanupWord(word).includes('w') || cleanupWord(word).includes('y'),\n  // Has an accent\n  'ddr-37-pt': (word: string) => countAccents(word) > 0,\n  // Ends with a vowel\n  'ddr-38-pt': (word: string) => {\n    return VOWELS.includes(cleanupWord(word).slice(-1));\n  },\n  // Ends with a consonant\n  'ddr-39-pt': (word: string) => CONSONANTS.includes(cleanupWord(word).slice(-1)),\n  // Ends with an S\n  'ddr-40-pt': (word: string) => cleanupWord(word).slice(-1) === 's',\n  // Has an I\n  'ddr-47-pt': (word: string) => cleanupWord(word).includes('i'),\n  // Has an O\n  'ddr-48-pt': (word: string) => cleanupWord(word).includes('o'),\n};\n\nexport const syllableDependencyVerifier: Record<string, (syllables: string) => boolean> = {\n  // Has 2 syllables\n  'ddr-3-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 2,\n  // Has 3 syllables\n  'ddr-4-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 3,\n  // Has 4 syllables\n  'ddr-22-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 4,\n  // Has two consecutive vowels on the same syllable\n  'ddr-41-pt': (syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable) => {\n      return syllable.split('').some((letter, index) => {\n        if (VOWELS.includes(letter) && VOWELS.includes(syllable[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n    });\n  },\n  // Has two consecutive vowels on different syllables\n  'ddr-42-pt': (syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable, index) => {\n      if (index === 0) {\n        return false;\n      }\n      return syllable[0] === syllables.split(SYLLABLE_SEPARATOR)[index - 1].slice(-1);\n    });\n  },\n  // Single syllable word\n  'ddr-46-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 1,\n};\n\nexport const stressSyllableDependencyVerifier: Record<\n  string,\n  (syllables: string, stress: number) => boolean\n> = {\n  // The stress syllable is on the last syllable (oxitona)\n  'ddr-43-pt': (_syllables: string, stress: number) => {\n    return stress === 0;\n  },\n  // The stress syllable is on the second to last syllable (paroxitona)\n  'ddr-44-pt': (_syllables: string, stress: number) => {\n    return stress === 1;\n  },\n  // The stress syllable is on the third to last syllable (proparoxitona)\n  'ddr-45-pt': (_syllables: string, stress: number) => {\n    return stress === 2;\n  },\n};\n\nexport const getLatestRuleUpdate = (rules: Dictionary<DailyDiagramRule>) => {\n  return Object.values(rules).reduce((acc, rule) => {\n    return Math.max(acc, rule.updatedAt);\n  }, 0);\n};\n\nexport const getIsThingOutdated = (thing: DailyDiagramItem, latestRuleUpdate: number) => {\n  return latestRuleUpdate > thing.updatedAt;\n};\n\nconst checkIsVowel = (char: string) => VOWELS.includes(stringRemoveAccents(char));\nconst checkIsConsonant = (char: string) => CONSONANTS.includes(stringRemoveAccents(char));\nconst LMNRS = ['s', 'r', 'l', 'm', 'n'];\nconst DOUBLE_LETTERS = [\n  'rr',\n  'ss',\n  'st',\n  'sc',\n  'lm',\n  'ld',\n  'mp',\n  'mb',\n  'rn',\n  'rm',\n  'rt',\n  'rd',\n  'lt',\n  'ld',\n  'nt',\n  'nd',\n  'sp',\n  'ls',\n];\n/**\n * Guesses the separation of syllables in a given word.\n * @param word - The word for which to guess the syllables separation.\n * @returns The guessed syllables separation as a string.\n */\nexport const guessSyllablesSeparation = (word: string): string => {\n  let syllables: string[] = [];\n  let currentSyllable = '';\n\n  const stringWithoutAccents = stringRemoveAccents(word);\n\n  for (let i = 0; i < word.length; i++) {\n    const char = stringWithoutAccents[i];\n    // Space makes a syllable\n    if (char === ' ') {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n      continue;\n    }\n\n    // Hyphen makes a syllable\n    if (char === '-') {\n      syllables.push(currentSyllable + '-');\n      currentSyllable = '';\n      continue;\n    }\n\n    if (checkIsVowel(char) && i < stringWithoutAccents.length - 2) {\n      const nextChar = stringWithoutAccents[i + 1];\n      const nextNextChar = stringWithoutAccents[i + 2];\n      // If the next character is a consonant and the next next character is a consonant, the first pair is a syllable\n      if (LMNRS.includes(nextChar) && checkIsConsonant(nextNextChar)) {\n        currentSyllable += word[i] + word[i + 1];\n        i++; // Skip the next character\n        continue;\n      }\n    }\n\n    // Handle \"c\" followed by \"h\", \"r\", or \"l\"\n    if (\n      char === 'c' &&\n      i < stringWithoutAccents.length - 2 &&\n      ['h', 'r', 'l'].includes(stringWithoutAccents[i + 1]) &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle \"l\" or \"n\" followed by \"h\"\n    if (\n      ['l', 'n'].includes(char) &&\n      i < stringWithoutAccents.length - 2 &&\n      stringWithoutAccents[i + 1] === 'h' &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle consonant followed by vowel followed by consonant cluster\n    if (\n      checkIsConsonant(char) &&\n      i < stringWithoutAccents.length - 3 &&\n      checkIsVowel(stringWithoutAccents[i + 1]) &&\n      LMNRS.includes(stringWithoutAccents[i + 2]) &&\n      checkIsConsonant(stringWithoutAccents[i + 3])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    currentSyllable += word[i];\n\n    if (\n      checkIsVowel(char) &&\n      i < stringWithoutAccents.length - 1 &&\n      !checkIsVowel(stringWithoutAccents[i + 1]) &&\n      !['l', 'r', 'n'].includes(stringWithoutAccents[i + 1])\n    ) {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n    }\n  }\n\n  if (currentSyllable !== '') {\n    syllables.push(currentSyllable);\n  }\n\n  // As a final effort, if there are syllables with \"rr\" or \"ss\", split them but keep the characters. e.g. carro -> car:ro\n  syllables = syllables.map((syllable) => {\n    for (const doubleLetter of DOUBLE_LETTERS) {\n      if (syllable.includes(doubleLetter)) {\n        return syllable.split(doubleLetter).join(`${doubleLetter[0]}${SYLLABLE_SEPARATOR}${doubleLetter[1]}`);\n      }\n    }\n    return syllable;\n  });\n\n  return syllables.filter(Boolean).join(SYLLABLE_SEPARATOR);\n};\n\n/**\n * Separates the syllables of a given word.\n * @param word - The word to separate syllables from.\n * @returns The word with syllables separated by '|'.\n */\nexport function separateSyllables(word: string): string {\n  const syllablePattern =\n    /([^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*[aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]{1,3}[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*)(?=[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]|$)/gi;\n\n  const proposed = word.replace(syllablePattern, '$1|').slice(0, -1);\n\n  return proposed.replace(/\\s/g, '');\n}\n","import { Affix, Button, Flex, Form, Input, Modal, Radio, Switch } from 'antd';\nimport clsx from 'clsx';\nimport { Item } from 'components/Sprites';\nimport { orderBy } from 'lodash';\nimport { useEffect, useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\n\nimport {\n  separateSyllables,\n  stressSyllableDependencyVerifier,\n  SYLLABLE_SEPARATOR,\n  syllableDependencyVerifier,\n  verifiers,\n} from './utils';\n\nexport type ThingFormValues = Record<string, boolean | string | number>;\n\ntype EditThingModalProps = {\n  isModalOpen: boolean;\n  onSaveThing: (item: DailyDiagramItem) => void;\n  onCancel: () => void;\n  thing: DailyDiagramItem;\n  rules: Dictionary<DailyDiagramRule>;\n  width?: number;\n  itemAliases?: string[];\n  subtitle?: string;\n  okButtonText?: string;\n  onGiveAnotherThing?: () => void;\n};\n\nexport function EditThingModal({\n  isModalOpen,\n  onSaveThing,\n  onCancel,\n  thing,\n  rules,\n  width,\n  itemAliases,\n  subtitle,\n  okButtonText,\n  onGiveAnotherThing,\n}: EditThingModalProps) {\n  // Sort rules properly by type\n  const orderedRules = useMemo(() => {\n    return orderBy(Object.values(rules), [\n      // Not auto\n      (r) => {\n        const index = ['manual', 'dependency', 'auto'].indexOf(r.method);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by type\n      (r) => {\n        const index = ['grammar', 'comparison', 'order', 'count', 'contains', 'ends'].indexOf(r.type);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by partial title\n      (r) => r.title.slice(0, 7),\n      // Sort by id\n      (r) => Number(r.id.split('-')[1]),\n    ]);\n  }, [rules]);\n\n  // Build initial values\n  const [form] = Form.useForm();\n  const values = Form.useWatch([], form);\n  const hasUndefinedValues = !values || Object.values(values ?? {}).some((value) => value === undefined);\n\n  // Automation: If name is changed, recalculates all rules\n  const nameWatch = Form.useWatch('name', form);\n  useEffect(() => {\n    // If initial state where name is still undefined, ignore\n    if (!nameWatch) return;\n\n    if (thing.name && thing.syllables && nameWatch === thing.name) return;\n\n    // If name changes, recalculate all rules\n    const fields: Record<string, boolean | string | number | undefined> = {\n      syllables: separateSyllables(nameWatch),\n      stressedSyllable: thing.stressedSyllable ?? nameWatch.includes(' ') ? -1 : 0,\n    };\n    Object.keys(rules).forEach((ruleId) => {\n      if (verifiers[ruleId]) {\n        fields[ruleId] = verifiers[ruleId](nameWatch);\n      } else {\n        fields[ruleId] = thing.rules.length > 0 ? thing.rules.includes(ruleId) : undefined;\n      }\n    });\n    form.setFieldsValue(fields);\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Syllables\n  const syllables = Form.useWatch('syllables', form);\n  useEffect(() => {\n    if (syllables) {\n      const syllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (syllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = syllableDependencyVerifier[ruleId](syllables);\n        }\n        return acc;\n      }, {});\n      form.setFieldsValue({\n        ...syllableRulesUpdate,\n        stressedSyllable:\n          syllables === thing.syllables\n            ? thing.stressedSyllable\n            : thing.stressedSyllable ?? nameWatch.includes(' ')\n              ? -1\n              : undefined,\n      });\n    }\n  }, [syllables]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Stressed syllable\n  const stressedSyllable = Form.useWatch('stressedSyllable', form);\n  useEffect(() => {\n    if (stressedSyllable !== undefined) {\n      const stressSyllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (stressSyllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = stressSyllableDependencyVerifier[ruleId](syllables, stressedSyllable);\n        }\n        return acc;\n      }, {});\n\n      form.setFieldsValue({\n        ...stressSyllableRulesUpdate,\n      });\n    }\n  }, [stressedSyllable]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Male vs Female nouns\n  const rule1 = form.getFieldValue('ddr-1-pt');\n  useEffect(() => {\n    if (rule1 === true) {\n      form.setFieldsValue({ 'ddr-2-pt': false });\n    }\n  }, [rule1]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule2 = form.getFieldValue('ddr-2-pt');\n  useEffect(() => {\n    if (rule2 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n    }\n  }, [rule2]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: syllable count\n  const rule3 = form.getFieldValue('ddr-3-pt');\n  useEffect(() => {\n    if (rule3 === true) {\n      form.setFieldsValue({ 'ddr-4-pt': false });\n    }\n  }, [rule3]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule4 = form.getFieldValue('ddr-4-pt');\n  useEffect(() => {\n    if (rule4 === true) {\n      form.setFieldsValue({ 'ddr-3-pt': false });\n    }\n  }, [rule4]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: has hyphen\n  useEffect(() => {\n    const hasHyphen = nameWatch?.includes('-');\n    if (hasHyphen) {\n      form.setFieldsValue({ 'ddr-5-pt': true });\n    }\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFinish = (values: any) => {\n    const preparedThing = serializeThing(values);\n    onSaveThing(preparedThing);\n  };\n\n  const splitSyllables: string[] = useMemo(() => (syllables ?? '').split(SYLLABLE_SEPARATOR), [syllables]);\n\n  return (\n    <Modal\n      width={width}\n      title={\n        <>\n          Edit {thing.name} {subtitle && <small>{subtitle}</small>}\n        </>\n      }\n      open={isModalOpen}\n      onOk={form.submit}\n      onCancel={onCancel}\n      maskClosable={false}\n      okButtonProps={{ disabled: hasUndefinedValues, htmlType: 'submit', size: 'large' }}\n      okText={okButtonText ?? 'Add Item'}\n    >\n      <Form\n        form={form}\n        name={`new-item-${thing.itemId}`}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        initialValues={deserializeThing(thing, rules)}\n        layout=\"vertical\"\n        size=\"small\"\n        labelWrap\n      >\n        <div className=\"diagram-container\">\n          <div>\n            <Item id={thing.itemId} width={50} />\n          </div>\n\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"itemId\" label=\"Item\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Form.Item name=\"syllables\" label=\"Syllables\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"stressedSyllable\" label=\"Stressed Syllable\">\n            <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n              {splitSyllables.map((syllable, index) => (\n                <Radio key={index} value={splitSyllables.length - index - 1}>\n                  {syllable}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item name=\"updatedAt\" label=\"Updated At\">\n            <Input value={new Date(thing.updatedAt).toLocaleString()} readOnly />\n          </Form.Item>\n\n          {(itemAliases || onGiveAnotherThing) && (\n            <div>\n              {itemAliases && <span>Options: {itemAliases?.join(', ')}</span>}\n              {onGiveAnotherThing && (\n                <Button size=\"small\" onClick={onGiveAnotherThing} type=\"dashed\" className=\"mt-2\">\n                  Give me another thing\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div>\n            <Affix offsetTop={50}>\n              <Flex justify=\"center\" align=\"center\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={hasUndefinedValues}>\n                  {okButtonText ?? 'Add Item'}\n                </Button>\n              </Flex>\n            </Affix>\n          </div>\n        </div>\n        <div className=\"diagram-container\">\n          {orderedRules.map((rule) => {\n            if (rule.method === 'auto' && verifiers[rule.id]) {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            if (rule.method === 'dependency') {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item\n                key={rule.id}\n                name={rule.id}\n                label={rule.title}\n                className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n              >\n                <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n                  <Radio value={true}>✅</Radio>\n                  <Radio value={false}>❌</Radio>\n                </Radio.Group>\n              </Form.Item>\n            );\n          })}\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n\nconst deserializeThing = (\n  thing: DailyDiagramItem,\n  rules: Dictionary<DailyDiagramRule>\n): Record<string, boolean | string | number> => {\n  let wasAnyRuleUpdated = false;\n  return {\n    name: thing.name,\n    itemId: thing.itemId,\n    syllables: thing.syllables ?? separateSyllables(thing.name),\n    stressedSyllable: thing.stressedSyllable ?? 0,\n\n    ...Object.keys(rules).reduce((acc: Record<string, boolean | undefined>, ruleId) => {\n      // Only re-verify if rule is older than the last update\n      if (thing.updatedAt < rules[ruleId].updatedAt) {\n        if (verifiers[ruleId]) {\n          const reVerify = verifiers[ruleId](thing.name);\n          if (reVerify && thing.rules.includes(ruleId)) {\n            wasAnyRuleUpdated = true;\n          }\n          acc[ruleId] = reVerify;\n        } else {\n          acc[ruleId] = undefined;\n        }\n      } else {\n        acc[ruleId] = thing.rules.includes(ruleId);\n      }\n\n      return acc;\n    }, {}),\n    updatedAt: wasAnyRuleUpdated ? Date.now() : thing.updatedAt,\n  };\n};\n\nconst serializeThing = (values: Record<string, boolean | string | number>): DailyDiagramItem => {\n  const { itemId, name, updatedAt, syllables, stressedSyllable, ...thingRules } = values;\n\n  return {\n    itemId: itemId as string,\n    name: name as string,\n    updatedAt: Date.now(),\n    syllables: syllables as string,\n    stressedSyllable: stressedSyllable as number,\n    rules: Object.keys(thingRules).filter((key) => thingRules[key] === true),\n  };\n};\n","import { App, Button } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { sample } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { wait } from 'utils';\nimport { EditThingModal } from './EditThingModal';\n\ntype AddNewThingFlowProps = {\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  width: number;\n};\n\nexport function AddNewThingFlow({ addEntryToUpdate, availableThings, rules, width }: AddNewThingFlowProps) {\n  const { notification } = App.useApp();\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  const onActivateThing = () => {\n    const randomItem = sample(availableThings);\n    if (randomItem) {\n      setActiveThing({\n        itemId: randomItem.id,\n        name: chooseNameThatIsASingleWord(randomItem),\n        updatedAt: Date.now(),\n        syllables: '',\n        stressedSyllable: 0,\n        rules: [],\n      });\n    } else {\n      setActiveThing(null);\n    }\n  };\n\n  const aliases = useMemo(() => {\n    if (!activeThing) return [];\n    const item = availableThings.find((thing) => thing.id === activeThing.itemId);\n    return [item?.name.pt, ...(item?.aliasesPt ?? [])].filter(Boolean);\n  }, [activeThing, availableThings]);\n\n  const onAddItem = async (newThing: DailyDiagramItem) => {\n    if (!activeThing) return;\n    if (!newThing.name || !newThing.itemId) {\n      notification.error({ message: 'Name and Item ID are required' });\n    }\n\n    addEntryToUpdate(newThing.itemId, newThing);\n\n    console.log('COMPLETED SAVE');\n\n    setActiveThing(null);\n\n    await wait(250);\n\n    onActivateThing();\n  };\n\n  const onGiveAnotherThing = async () => {\n    setActiveThing(null);\n    await wait(100);\n    onActivateThing();\n  };\n\n  return (\n    <>\n      <Button size=\"large\" onClick={onActivateThing}>\n        Classify New Item\n      </Button>\n      {!!activeThing && (\n        <EditThingModal\n          isModalOpen={activeThing !== null}\n          onSaveThing={onAddItem}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          width={width * 0.9}\n          itemAliases={aliases as string[]}\n          onGiveAnotherThing={onGiveAnotherThing}\n        />\n      )}\n    </>\n  );\n}\n\nconst chooseNameThatIsASingleWord = (item: ItemT) => {\n  if (item.name.pt.split(' ').length === 1) return item.name.pt;\n\n  if (item.aliasesPt) {\n    return item.aliasesPt.find((alias) => alias.split(' ').length === 1) ?? item.name.pt;\n  }\n  return item.name.pt;\n};\n","import { DailyTeoriaDeConjuntosEntry, ParsedDailyHistoryEntry } from '../types';\nimport { cloneDeep, difference, intersection, sample, sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from '../utils';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { getIsThingOutdated, getLatestRuleUpdate } from 'components/Items/Diagram/utils';\n\nexport const buildDailyTeoriaDeConjuntosGames = (\n  batchSize: number,\n  history: ParsedDailyHistoryEntry,\n  rules: Dictionary<DailyDiagramRule>,\n  things: Dictionary<DailyDiagramItem>\n) => {\n  console.count('Creating Teoria de Conjuntos...');\n  let lastDate = history.latestDate;\n  const used: string[] = [...history.used];\n\n  const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n  const thingsByRules = (() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    Object.values(things).forEach((entry) => {\n      // Only use things that are not outdated\n      if (!getIsThingOutdated(entry, latestRuleUpdate)) {\n        entry.rules.forEach((ruleId) => {\n          dict[ruleId].push(entry.itemId);\n        });\n      }\n    });\n    return dict;\n  })();\n\n  const entries: Dictionary<DailyTeoriaDeConjuntosEntry> = {};\n  for (let i = 0; i < batchSize; i++) {\n    const id = getNextDay(lastDate);\n\n    lastDate = id;\n    entries[id] = {\n      id,\n      type: 'teoria-de-conjuntos',\n      number: history.latestNumber + i + 1,\n      ...getRuleSet(things, thingsByRules, rules, used, latestRuleUpdate),\n    };\n  }\n  return entries;\n};\n\nfunction getRuleSet(\n  things: Dictionary<DailyDiagramItem>,\n  thingsByRules: Record<string, string[]>,\n  rules: Dictionary<DailyDiagramRule>,\n  used: string[],\n  latestRuleUpdate: number\n) {\n  const availableThingsIds = shuffle(\n    Object.keys(things).filter(\n      (id) => !used.includes(id) && !getIsThingOutdated(things[id], latestRuleUpdate)\n    )\n  );\n\n  // Get one random initial thing\n  const initialThingId = sample(availableThingsIds);\n  if (!initialThingId) throw new Error('No available things to choose from');\n  used.push(initialThingId);\n\n  const intersectingThing = {\n    id: initialThingId,\n    name: things[initialThingId].name,\n  };\n\n  // Group rules by type than get a random pair of rules of different types\n  const thingsRulesByType = things[initialThingId].rules.reduce((acc: Record<string, string[]>, ruleId) => {\n    const type = rules[ruleId].type;\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(ruleId);\n    return acc;\n  }, {});\n  // Delete any rule with less than 2 rules\n  Object.keys(thingsRulesByType).forEach((type) => {\n    if (thingsRulesByType[type].length < 2) delete thingsRulesByType[type];\n  });\n\n  const twoRandomTypes = sampleSize(Object.keys(thingsRulesByType), 2);\n\n  if (twoRandomTypes.length !== 2) throw new Error('No types found for this thing');\n  const selectedRules = [\n    sample(thingsRulesByType[twoRandomTypes[0]]),\n    sample(thingsRulesByType[twoRandomTypes[1]]),\n  ];\n  if (!selectedRules[0] || !selectedRules[1]) throw new Error('No rules found for this thing');\n\n  const ruleId = [selectedRules[0], selectedRules[1]].sort().join('-');\n  used.push(ruleId);\n\n  const level = rules[selectedRules[0]].level + rules[selectedRules[1]].level - 1;\n\n  const availableThingsByRules = cloneDeep(thingsByRules);\n  // Removed the initial thing from the available things\n  delete availableThingsByRules[initialThingId];\n\n  const itemsOnlyInRule1 = shuffle(\n    difference(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]])\n  );\n\n  const itemsOnlyInRule2 = shuffle(\n    difference(thingsByRules[selectedRules[1]], thingsByRules[selectedRules[0]])\n  );\n\n  const commonItems = shuffle(intersection(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]]));\n\n  // Get one unique initial thing that only fits rule 1\n  const selectedInitialThingId1 = itemsOnlyInRule1.pop();\n  if (!selectedInitialThingId1) throw new Error('No only in rule 1 things to choose from');\n  const rule1 = {\n    id: selectedRules[0],\n    text: rules[selectedRules[0]].title,\n    level: rules[selectedRules[0]].level,\n    thing: {\n      id: selectedInitialThingId1,\n      name: things[selectedInitialThingId1].name,\n    },\n  };\n\n  // Get one unique initial thing that only fits rule 2\n  const selectedInitialThingId2 = itemsOnlyInRule2.pop();\n  if (!selectedInitialThingId2) throw new Error('No only in rule 2 things to choose from');\n  const rule2 = {\n    id: selectedRules[1],\n    text: rules[selectedRules[1]].title,\n    level: rules[selectedRules[1]].level,\n    thing: {\n      id: selectedInitialThingId2,\n      name: things[selectedInitialThingId2].name,\n    },\n  };\n\n  // Get up to 4 unique things that fit both rules, if possible\n  const sampleCommonThings = sampleSize(commonItems, 4);\n  const sampleRule1Things = sampleSize(itemsOnlyInRule1, 8);\n  const sampleRule2Things = sampleSize(itemsOnlyInRule2, 8);\n  const gabarito: Record<string, number> = {};\n  sampleCommonThings.forEach((id) => (gabarito[id] = 0));\n  sampleRule1Things.forEach((id) => (gabarito[id] = 1));\n  sampleRule2Things.forEach((id) => (gabarito[id] = 2));\n\n  // Sample 8 things among the options\n  const selectionIds = sampleSize([...sampleCommonThings, ...sampleRule1Things, ...sampleRule2Things], 8);\n\n  const selectedThings = selectionIds.map((id) => ({\n    id,\n    name: things[id].name,\n    rule: gabarito[id],\n  }));\n\n  // Build title\n  const TITLES: Record<string, string> = {\n    contains: 'Inclusão',\n    starts: 'Inicialização',\n    ends: 'Terminação',\n    grammar: 'Gramática',\n    order: 'Sequência',\n    count: 'Contagem',\n    comparison: 'Comparação',\n    repetition: 'Repetição',\n  };\n\n  const title = [\n    TITLES?.[rules[rule1.id].type] ?? 'Desconhecido',\n    TITLES?.[rules[rule2.id].type] ?? 'Desconhecido',\n  ].join(' vs ');\n\n  // Create the DailyTeoriaDeConjuntosEntry object\n  const entry: Omit<DailyTeoriaDeConjuntosEntry, 'id' | 'type' | 'number'> = {\n    title,\n    level,\n    rule1,\n    rule2,\n    intersectingThing,\n    things: selectedThings,\n  };\n  return entry;\n}\n","import { Flex, Typography } from 'antd';\nimport { Item } from 'components/Sprites';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n};\n\nexport function Thing({ itemId, name, width = 50 }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\">\n      <Item id={itemId} width={width} />\n      <Typography.Text code key={itemId}>\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n","import { Collapse, Rate, Space, Typography } from 'antd';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { Thing } from './Thing';\nimport { ReactNode, useState } from 'react';\nimport { TransparentButton } from 'components/Common';\n\ntype DiagramGameSampleProps = {\n  game: DailyTeoriaDeConjuntosEntry;\n};\n\ntype TThing = {\n  id: string;\n  name: string;\n  rule: number;\n};\n\nexport function DiagramGameSample({ game }: DiagramGameSampleProps) {\n  const [leftRing, setLeftRing] = useState<TThing[]>([\n    {\n      id: game.rule1.thing.id,\n      name: game.rule1.thing.name,\n      rule: 1,\n    },\n  ]);\n  const [rightRing, setRightRing] = useState<TThing[]>([\n    {\n      id: game.rule2.thing.id,\n      name: game.rule2.thing.name,\n      rule: 2,\n    },\n  ]);\n  const [intersection, setIntersection] = useState<TThing[]>([\n    {\n      id: game.intersectingThing.id,\n      name: game.intersectingThing.name,\n      rule: 0,\n    },\n  ]);\n\n  const [playerOptions, setPlayerOptions] = useState<TThing[]>(game.things.slice(0, 4));\n\n  const [selectedThing, setSelectedThing] = useState<TThing | null>(game.things[0]);\n\n  // const\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Typography.Title level={4}>Game Sample</Typography.Title>\n      <Typography.Title level={5}>\"{game.title}\"</Typography.Title>\n      <Rate value={game.level} count={game.level} disabled />\n      <Typography.Paragraph style={{ maxWidth: '500px' }}>\n        O círculo amarelo tem uma regra gramatical secreta e o circulo vermelho tem outra regra gramatical\n        secreta. O quadrado do meio representa a interseção entre a regra amarela e a regra vermelha.\n      </Typography.Paragraph>\n\n      <Space>\n        <VennDiagram\n          width={600}\n          leftCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {leftRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          rightCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {rightRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          intersectionChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {intersection.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n        />\n      </Space>\n      <Typography.Text>Coloque os objetos nos círculos corretos:</Typography.Text>\n      <Space className=\"space--center\">\n        {playerOptions.map((thing) => (\n          <TransparentButton\n            style={thing.id === selectedThing?.id ? { outline: '3px solid hotPink' } : {}}\n            onClick={() => setSelectedThing(thing)}\n          >\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} />\n          </TransparentButton>\n        ))}\n      </Space>\n\n      <Collapse\n        items={[\n          {\n            key: '1',\n            label: 'Resposta',\n            children: (\n              <Space direction=\"vertical\">\n                <Typography.Text strong>Regra Amarela</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule1.text}</Typography.Text>\n                  </li>\n                </ul>\n\n                <Typography.Text strong>Regra Vermelha</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule2.text}</Typography.Text>\n                  </li>\n                </ul>\n              </Space>\n            ),\n          },\n        ]}\n      />\n\n      <div style={{ height: '200px' }}></div>\n    </Space>\n  );\n}\n\ntype VennDiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nfunction VennDiagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: VennDiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import { Button, Divider, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\n\ntype RulesByThingProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n};\n\nexport function RulesByThing({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: RulesByThingProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>\n        Rules By Items (Added: {Object.keys(things).length} | {availableThings.length})\n      </Typography.Title>\n\n      <AddNewThingFlow\n        addEntryToUpdate={addEntryToUpdate}\n        availableThings={availableThings}\n        rules={rules}\n        width={containerWidth}\n      />\n\n      <Divider />\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} />}\n    </Space>\n  );\n}\n","import { Divider, Rate, Space, Switch, Table, TableColumnsType, Tag, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\n\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { Thing } from './Thing';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\ntype ThingsByRuleProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n};\n\nexport function ThingsByRule({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: ThingsByRuleProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n  const { is, addParam } = useQueryParams();\n\n  const rows = useMemo(\n    () =>\n      Object.values(rules).map((r) => ({\n        ...r,\n        thingsCount: thingsByRules[r.id].length,\n      })),\n    [rules, thingsByRules]\n  );\n\n  const stats = useMemo(() => {\n    const quantities = Object.values(thingsByRules).map((things) => things.length);\n\n    return {\n      maxThings: Math.max(...quantities),\n      minThings: Math.min(...quantities),\n      averageThings: Math.round(\n        Object.values(thingsByRules).reduce((sum, things) => sum + things.length, 0) /\n          Object.keys(thingsByRules).length\n      ),\n    };\n  }, [thingsByRules]);\n\n  const columns: TableColumnsType<DailyDiagramRule & { thingsCount: number }> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => Number(a.id.split('-')[1]) - Number(b.id.split('-')[1]),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Rule',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a, b) => a.title.localeCompare(b.title),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: (a, b) => a.type.localeCompare(b.type),\n    },\n    {\n      title: 'Method',\n      dataIndex: 'method',\n      key: 'method',\n      sorter: (a, b) => a.method.localeCompare(b.method),\n    },\n    {\n      title: 'Things',\n      dataIndex: 'thingsCount',\n      key: 'thingsCount',\n      render: (thingsCount: number, record) => (\n        <Space size=\"small\">\n          <Tag>{thingsCount}</Tag>\n          {is('showThings') ? (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 20).map((itemId) => (\n                <Thing key={`${record.id}-${itemId}`} itemId={itemId} name={things[itemId].name} />\n              ))}\n              {thingsByRules[record.id].length > 20 && (\n                <Typography.Text>+{thingsCount - 20} more</Typography.Text>\n              )}\n            </Space>\n          ) : (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 5).map((itemId) => (\n                <Thing key={`${record.id}-${itemId}`} itemId={itemId} name={things[itemId].name} />\n              ))}\n              {thingsByRules[record.id].length > 5 && (\n                <Typography.Text>+{thingsCount - 5} more</Typography.Text>\n              )}\n            </Space>\n          )}\n        </Space>\n      ),\n      sorter: (a, b) => a.thingsCount - b.thingsCount,\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      sorter: (a, b) => a.level - b.level,\n      render: (level: number) => <Rate value={level} count={3} disabled />,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={4}>\n        Things By Rule (Added: {Object.keys(things).length} | {availableThings.length}){' '}\n      </Typography.Title>\n\n      <Space split={<Divider type=\"vertical\" />} wrap>\n        <AddNewThingFlow\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          width={containerWidth}\n        />\n\n        <Typography.Text strong>\n          Average Things: <Tag>{stats.averageThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Max Things: <Tag>{stats.maxThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Min Things: <Tag>{stats.minThings}</Tag>\n        </Typography.Text>\n\n        <Switch\n          checked={is('showThings')}\n          onChange={(e) => addParam('showThings', e)}\n          checkedChildren=\"Hide things\"\n          unCheckedChildren=\"Show things\"\n        />\n      </Space>\n\n      <Table dataSource={rows} columns={columns} />\n    </Space>\n  );\n}\n","import { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { EditThingModal } from './EditThingModal';\nimport { wait } from 'utils';\nimport { getLatestRuleUpdate, SYLLABLE_SEPARATOR } from './utils';\n\ntype ItemUpdateGuardProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  rules: Dictionary<DailyDiagramRule>;\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  children: ReactNode;\n};\n\nexport function ItemUpdateGuard({ children, things, rules, addEntryToUpdate }: ItemUpdateGuardProps) {\n  // If any rules has been added or updated AFTER the last time the user has updated the item, the user will be warned to update the item\n  const toUpdateThings = useMemo(() => {\n    const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n    return Object.values(things).filter((item) => {\n      const latestThingUpdate = item.updatedAt;\n\n      // Prevent updating items that have the syllables field but it's not correct\n      if (\n        item.syllables &&\n        item.syllables.split(SYLLABLE_SEPARATOR).join('') !== item.name.replace(/\\s/g, '')\n      ) {\n        console.log('❗️ Name and syllables do not match', item.name, item.syllables);\n        return true;\n      }\n\n      // if (item.syllables.endsWith('ie') && item.updatedAt < 1724527674296) {\n      //   return true;\n      // }\n\n      return latestRuleUpdate > latestThingUpdate;\n    });\n  }, [things, rules]);\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  useEffect(() => {\n    const updateThings = async (i: DailyDiagramItem) => {\n      console.log('Found things that need to update...');\n      setActiveThing(null);\n\n      // Await the wait function here\n      await wait(250);\n\n      if (toUpdateThings.length > 0) {\n        setActiveThing(toUpdateThings[0]);\n      }\n    };\n\n    console.count('Checking for things that need to update...');\n    if (toUpdateThings.length > 0) {\n      updateThings(toUpdateThings[0]);\n    }\n  }, [toUpdateThings]);\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <>\n      {activeThing && (\n        <EditThingModal\n          subtitle={`(${toUpdateThings.length} left to update)`}\n          isModalOpen={activeThing !== null}\n          onSaveThing={onUpdateThing}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          okButtonText=\"Update\"\n        />\n      )}\n      <>{children}</>\n    </>\n  );\n}\n","import { Button, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\nimport './GameSimulator.scss';\n\ntype GameSimulatorProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n};\n\nexport function GameSimulator({ things, rules }: GameSimulatorProps) {\n  const [ref] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  const onGenerateDemoGames = () => {\n    let demos: any = null;\n    try {\n      demos = buildDailyTeoriaDeConjuntosGames(\n        25,\n        {\n          latestDate: '2023/01/01',\n          latestNumber: 0,\n          used: [],\n        },\n        rules,\n        things\n      );\n\n      console.log(demos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>Game Simulator</Typography.Title>\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      <Button size=\"large\" onClick={onGenerateDemoGames}>\n        Generate Demos (log)\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} key={JSON.stringify(simulation)} />}\n    </Space>\n  );\n}\n","import { Typography } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\n\nimport { RulesByThing } from './RulesByThing';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ThingsByRule } from './ThingsByRule';\nimport { orderBy } from 'lodash';\nimport { ItemUpdateGuard } from './ItemUpdateGuard';\nimport { GameSimulator } from './GameSimulator';\n\nexport function ItemsDiagramSetsContent({\n  data,\n  addEntryToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const tdrItemsQuery = useTDResource<ItemT>('items');\n  const tdrDiagramRulesQuery = useTDResource<DailyDiagramRule>('daily-diagram-rules');\n\n  const availableThings = useMemo(() => {\n    return Object.values(tdrItemsQuery.data ?? {}).filter((item) => {\n      if (data && data[item.id] !== undefined) return false;\n      if (item.nsfw) return false;\n      if (item.decks?.includes('thing')) return true;\n      const isNameSingleWord = item.name.pt.split(' ').length === 1;\n\n      if (item.decks?.includes('alien') && isNameSingleWord) return true;\n      if (item.decks?.includes('manufactured') && isNameSingleWord) return true;\n\n      return false;\n    });\n  }, [data, tdrItemsQuery.data]);\n\n  const rules = useMemo(() => {\n    return tdrDiagramRulesQuery.data ?? {};\n  }, [tdrDiagramRulesQuery.data]);\n\n  const thingsByRules = useMemo(() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    orderBy(Object.values(data), ['updatedAt'], ['desc']).forEach((entry) => {\n      entry.rules.forEach((ruleId) => {\n        dict[ruleId].push(entry.itemId);\n      });\n    });\n    return dict;\n  }, [data, rules]);\n\n  const { is, queryParams } = useQueryParams();\n\n  if (tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading) {\n    return <Typography.Text>Loading...</Typography.Text>;\n  }\n\n  return (\n    <DataLoadingWrapper\n      isLoading={tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading}\n      hasResponseData={tdrItemsQuery.hasResponseData || tdrDiagramRulesQuery.hasResponseData}\n    >\n      <ItemUpdateGuard things={data} rules={rules} addEntryToUpdate={addEntryToUpdate}>\n        {(is('display', 'rule') || !queryParams.has('display')) && (\n          <ThingsByRule\n            things={data}\n            addEntryToUpdate={addEntryToUpdate}\n            availableThings={availableThings}\n            rules={rules}\n            thingsByRules={thingsByRules}\n          />\n        )}\n\n        {is('display', 'thing') && (\n          <RulesByThing\n            things={data}\n            addEntryToUpdate={addEntryToUpdate}\n            availableThings={availableThings}\n            rules={rules}\n            thingsByRules={thingsByRules}\n          />\n        )}\n\n        {is('display', 'simulator') && (\n          <GameSimulator\n            things={data}\n            addEntryToUpdate={addEntryToUpdate}\n            availableThings={availableThings}\n            rules={rules}\n          />\n        )}\n      </ItemUpdateGuard>\n    </DataLoadingWrapper>\n  );\n}\n","import { Flex, Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsDiagramFilters } from 'components/Items/Diagram/ItemsDiagramFilters';\nimport { ItemsDiagramSetsContent } from 'components/Items/Diagram/ItemsDiagramSetsContent';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyDiagramItem } from 'types';\n\nexport function ItemsDiagramSets() {\n  const diagramData = useResourceFirebaseData<DailyDiagramItem>({\n    tdrResourceName: 'daily-diagram-items',\n    firebaseDataCollectionName: 'diagramItems',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Diagram Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsDiagramFilters {...diagramData} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={diagramData.isLoading || diagramData.isSaving}\n            error={diagramData.error}\n            hasResponseData={!isEmpty(diagramData.data)}\n          >\n            <Flex vertical gap={24}>\n              <ItemsDiagramSetsContent {...diagramData} />\n            </Flex>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiagramSets;\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","label","SaveButton","onSave","isSaving","dirt","interval","buttonProps","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","disabled","danger","block","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","value","onChange","options","placeholder","style","minWidth","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","FilterCheckBox","e","target","FilterSegments","option","title","getYesterday","subtract","getNextDay","dateString","add","checkSaturday","day","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","Object","entries","forEach","removeParam","is","get","has","queryParams","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","App","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","useGetFirebaseDoc","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","success","refetchQueries","queryKey","onError","description","useMemo","isSuccess","isPending","cloneDeep","isEmpty","firebaseData","save","mutate","serializeFirebaseData","addEntryToUpdate","id","item","prev","entriesToUpdate","updateQueryFunction","path","docId","docRef","doc","firestore","updateDoc","useMutation","mutationFn","async","ItemsDiagramFilters","vertical","gap","JSON","stringify","diagramItems","copy","sortJsonKeys","prepareFileForDownload","mode","display","page","ClusterOutlined","TableOutlined","SYLLABLE_SEPARATOR","LETTERS","CONSONANTS","VOWELS","ACCENTS","cleanupWord","memoize","word","stringRemoveAccents","toLowerCase","countLetters","length","countVowels","split","filter","letter","includes","countConsonants","verifiers","indexOf","vowels","Set","firstLetter","slice","some","index","test","countAccents","syllableDependencyVerifier","syllables","syllable","stressSyllableDependencyVerifier","_syllables","stress","getLatestRuleUpdate","rules","values","reduce","acc","rule","Math","updatedAt","getIsThingOutdated","thing","latestRuleUpdate","separateSyllables","replace","EditThingModal","isModalOpen","onSaveThing","onCancel","itemAliases","subtitle","okButtonText","onGiveAnotherThing","orderedRules","orderBy","r","method","Infinity","Number","form","Form","hasUndefinedValues","nameWatch","name","fields","stressedSyllable","keys","ruleId","setFieldsValue","syllableRulesUpdate","stressSyllableRulesUpdate","rule1","getFieldValue","rule2","rule3","rule4","splitSyllables","open","onOk","submit","maskClosable","okButtonProps","htmlType","okText","itemId","onFinish","preparedThing","serializeThing","autoComplete","initialValues","deserializeThing","layout","labelWrap","readOnly","optionType","buttonStyle","toLocaleString","join","offsetTop","justify","align","checkedChildren","unCheckedChildren","wasAnyRuleUpdated","reVerify","thingRules","AddNewThingFlow","availableThings","activeThing","setActiveThing","onActivateThing","randomItem","sample","chooseNameThatIsASingleWord","aliases","find","pt","aliasesPt","Boolean","newThing","wait","alias","buildDailyTeoriaDeConjuntosGames","batchSize","history","things","count","lastDate","latestDate","used","thingsByRules","dict","push","i","number","latestNumber","getRuleSet","availableThingsIds","shuffle","initialThingId","Error","intersectingThing","thingsRulesByType","twoRandomTypes","sampleSize","selectedRules","sort","itemsOnlyInRule1","difference","itemsOnlyInRule2","commonItems","intersection","selectedInitialThingId1","pop","text","selectedInitialThingId2","sampleCommonThings","sampleRule1Things","sampleRule2Things","gabarito","selectedThings","TITLES","contains","starts","ends","grammar","order","comparison","repetition","Thing","code","DiagramGameSample","game","leftRing","setLeftRing","rightRing","setRightRing","setIntersection","playerOptions","setPlayerOptions","selectedThing","setSelectedThing","direction","maxWidth","VennDiagram","leftCircleChildren","height","arr","rightCircleChildren","intersectionChildren","outline","items","strong","xmlns","viewBox","fill","stroke","strokeMiterlimit","strokeWidth","d","x","y","RulesByThing","ref","containerWidth","useMeasure","simulation","setSimulation","ThingsByRule","rows","thingsCount","stats","quantities","maxThings","minThings","averageThings","round","sum","columns","dataIndex","sorter","a","b","render","localeCompare","record","wrap","dataSource","ItemUpdateGuard","toUpdateThings","latestThingUpdate","updateThings","GameSimulator","demos","ItemsDiagramSetsContent","tdrItemsQuery","tdrDiagramRulesQuery","nsfw","decks","isNameSingleWord","DataLoadingWrapper","ItemsDiagramSets","diagramData","hasSider","PageSider"],"sourceRoot":""}