{"version":3,"file":"static/js/DailySetup.5198e284.chunk.js","mappings":"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","sources":["components/Common/ResponseState.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/DataLoadingWrapper.tsx","components/Sprites/Sprite.tsx","components/Sprites/AlienSign.tsx","components/Sprites/Emoji.tsx","components/Sprites/Glyph.tsx","components/Sprites/Item.tsx","hooks/useBaseUrl.ts","hooks/useGetFirebaseDoc.ts","components/Daily/hooks.ts","components/Daily/utils.ts","components/Daily/CanvasSVG.tsx","components/Daily/DataPopulation.tsx","components/Daily/SideFilters.tsx","pages/DailySetup.tsx","utils/constants.ts","utils/index.ts"],"sourcesContent":["import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, InputNumber, Select, Switch } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n};\n\nexport function FilterSwitch({ label, value, onChange, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" />\n    </Form.Item>\n  );\n}\n","import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  isIdle?: boolean;\n  isLoading: boolean;\n  error?: ResponseError;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({\n  isLoading,\n  isIdle,\n  error,\n  hasResponseData,\n  children,\n}: DataLoadingWrapperProps) {\n  if (!isIdle && isLoading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" showIcon />\n      </Layout.Content>\n    );\n  }\n\n  if (isIdle || hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const { getUrl } = useBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${getUrl('sprites')}/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype AlienSignProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function AlienSign({ id, width = 75, className = '' }: AlienSignProps) {\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={id} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype EmojiProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function Emoji({ id, width, className }: EmojiProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\ntype GlyphProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n});\n\n/**\n * A glyph card component.\n */\nexport function Glyph({ id, width, className }: GlyphProps) {\n  const [source, glyphId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\nexport type ItemProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function Item({ id, width, className, title }: ItemProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div\n      className={clsx('sprite', className)}\n      style={{ width: `${width ?? 75}px`, height: `${width ?? 75}px` }}\n    >\n      <Sprite source={source} id={itemId} width={width} title={title} />\n    </div>\n  );\n}\n","/**\n * Returns the base url for the given library and path\n * @param library\n * @param path\n * @returns\n */\nexport function useBaseUrl(library: 'tdr' | 'tdi' | 'tdi-data') {\n  let baseUrl: string | undefined = '';\n  let folder: string | undefined = '';\n\n  switch (library) {\n    case 'tdi':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_IMAGES;\n      break;\n    case 'tdi-data':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_DATA;\n      break;\n    default:\n      baseUrl =\n        process.env.NODE_ENV === 'development'\n          ? process.env.REACT_APP_LOCAL_URL\n          : process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TD_RESOURCES;\n  }\n\n  return {\n    baseUrl,\n    getUrl: (path: string) => [baseUrl, folder, path].join('/'),\n  };\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: UseQueryOptions<any, Error, TData, QueryKey>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { App } from 'antd';\nimport { collection, doc, getDocs, setDoc } from 'firebase/firestore';\nimport { sampleSize, shuffle } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { firestore } from 'services/firebase';\nimport { removeDuplicates } from 'utils';\n\nimport {\n  QueryKey,\n  useMutation,\n  useQueries,\n  useQuery,\n  useQueryClient,\n  UseQueryOptions,\n} from '@tanstack/react-query';\n\nimport { DailyEntry, DailyHistory, DataDrawing, DataSuffixCounts } from './types';\nimport { getNextDay } from './utils';\nimport { getDocQueryFunction } from 'hooks/useGetFirebaseDoc';\n\nconst LANGUAGE_PREFIX = {\n  SUFFIX_DATA: {\n    pt: 'drawingsPT',\n    en: 'drawingsEN',\n  },\n  DAILY: {\n    pt: 'diario',\n    en: 'daily',\n  },\n};\n\nexport type UseLoadDailySetup = {\n  isLoading: boolean;\n  entries: {\n    id: string;\n    number: number;\n    type: string;\n    language: Language;\n    cardId: string;\n    text: string;\n    drawings: string[];\n    dataIds: string[];\n  }[];\n  latestDate: string;\n  latestNumber: number;\n  round5sample: DailyEntry[];\n};\n\n/**\n * Custom hook for loading daily setup data.\n *\n * @param enabled - Indicates whether the loading is enabled or not.\n * @param queryLanguage - Optional language parameter for the query.\n * @param drawingsCount - The number of drawings to load.\n * @param batchSize - The size of the batch to load.\n * @returns An object containing the loading status, daily entries, latest date, latest number, and round 5 sample.\n */\nexport function useLoadDailySetup(\n  enabled: boolean,\n  queryLanguage: Language,\n  drawingsCount: number,\n  batchSize: number\n): UseLoadDailySetup {\n  const { notification } = App.useApp();\n  console.log('useLoadDailySetup', { enabled, queryLanguage });\n\n  // Step 1: Load suffix counts\n  const suffixCountsQuery = useQuery<any, Error, DataSuffixCounts, QueryKey>({\n    queryKey: ['data', 'suffixCounts'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>('data', 'suffixCounts'),\n    enabled,\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Suffix Counts loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading suffix counts',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  console.log(suffixCountsQuery.data);\n\n  const suffixData = LANGUAGE_PREFIX.SUFFIX_DATA[queryLanguage ?? 'pt'];\n\n  // Step 2: Load drawings\n  const drawingsQuery = useLoadDrawings(\n    enabled && Boolean(suffixCountsQuery.data?.[suffixData]),\n    suffixCountsQuery.data?.[suffixData] ?? 0,\n    queryLanguage ?? 'pt'\n  );\n  const areDrawingsLoading = drawingsQuery.some((q) => q.isLoading);\n\n  console.log(drawingsQuery?.[0]?.data);\n\n  const source = LANGUAGE_PREFIX.DAILY[queryLanguage ?? 'pt'];\n\n  // Step 3: Load daily history\n  const historyQuery = useQuery<any, Error, DailyHistory, QueryKey>({\n    queryKey: [source, 'history'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>(source, 'history'),\n    enabled,\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Daily History loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading daily history',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const usedCards = useMemo(() => historyQuery.data?.used ?? [], [historyQuery.data?.used]);\n  const latestDate = historyQuery.data?.latestDate ?? '2023-10-31';\n  const latestNumber = historyQuery.data?.latestNumber ?? 0;\n  console.log({ usedCards, latestDate });\n\n  // Step 4: Parse entries\n  const entries = useMemo(() => {\n    const drawings = (drawingsQuery ?? []).reduce((acc: Record<CardId, DailyEntry>, drawingEntry) => {\n      const drawingsLibrary = (drawingEntry.data ?? {}) as Record<string, DataDrawing>;\n      Object.entries(drawingsLibrary).forEach(([key, dataDrawing]) => {\n        if (dataDrawing.drawing.trim().length < 10) {\n          console.log('Empty drawing', dataDrawing.cardId);\n          return acc;\n        }\n        if (acc[dataDrawing.cardId] === undefined) {\n          acc[dataDrawing.cardId] = {\n            id: dataDrawing.cardId,\n            type: 'arte-ruim',\n            language: queryLanguage ?? 'pt',\n            cardId: dataDrawing.cardId,\n            text: dataDrawing.text,\n            drawings: [dataDrawing.drawing],\n            number: 0,\n            dataIds: [key],\n          };\n        } else {\n          acc[dataDrawing.cardId].drawings.push(dataDrawing.drawing);\n          acc[dataDrawing.cardId].dataIds.push(key);\n        }\n      });\n\n      return acc;\n    }, {});\n\n    console.log({ totalCardCount: Object.keys(drawings).length });\n\n    const atLeastTwoDrawingsList = Object.values(drawings).filter(\n      (e) => e.drawings.length >= drawingsCount && e.cardId && !e.cardId?.includes('--')\n    );\n\n    console.log({ shortlistCardCount: atLeastTwoDrawingsList.length });\n\n    const shortList = Object.values(atLeastTwoDrawingsList).filter((e) => !usedCards.includes(e.cardId));\n\n    const shuffledShortList = sampleSize(shuffle(shortList), batchSize);\n\n    let lastDate = latestDate;\n\n    return shuffledShortList.map((e, index) => {\n      const id = getNextDay(lastDate);\n\n      lastDate = id;\n      return {\n        ...e,\n        id,\n        number: latestNumber + index + 1,\n      };\n    });\n  }, [drawingsQuery, usedCards, latestDate, queryLanguage, latestNumber, batchSize, drawingsCount]);\n\n  const round5sample = useMemo(() => {\n    const drawings = (drawingsQuery ?? []).reduce((acc: Record<CardId, DailyEntry>, drawingEntry) => {\n      const drawingsLibrary = (drawingEntry.data ?? {}) as Record<string, DataDrawing>;\n      Object.entries(drawingsLibrary).forEach(([key, dataDrawing]) => {\n        if (dataDrawing.drawing.trim().length < 10) {\n          console.log('Empty drawing', dataDrawing.cardId);\n          return acc;\n        }\n        if (acc[dataDrawing.cardId] === undefined) {\n          acc[dataDrawing.cardId] = {\n            id: dataDrawing.cardId,\n            type: 'arte-ruim',\n            language: queryLanguage ?? 'pt',\n            cardId: dataDrawing.cardId,\n            text: dataDrawing.text,\n            drawings: [dataDrawing.drawing],\n            number: 0,\n            dataIds: [key],\n          };\n        } else {\n          acc[dataDrawing.cardId].drawings.push(dataDrawing.drawing);\n          acc[dataDrawing.cardId].dataIds.push(key);\n        }\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(drawings).filter((e) => e.cardId?.includes('--'));\n  }, [drawingsQuery, queryLanguage]);\n\n  return {\n    isLoading: suffixCountsQuery.isLoading || areDrawingsLoading || historyQuery.isLoading,\n    entries,\n    latestDate,\n    latestNumber,\n    round5sample,\n  };\n}\n\n/**\n * Custom hook for loading drawings.\n *\n * @param enabled - Indicates whether the loading of drawings is enabled.\n * @param libraryCount - The number of libraries to load drawings from.\n * @param queryLanguage - The language for the query.\n * @returns The result of the useQueries hook.\n */\nfunction useLoadDrawings(enabled: boolean, libraryCount: number, queryLanguage: Language) {\n  const { notification } = App.useApp();\n  const docPrefix = `drawings${queryLanguage === 'pt' ? 'PT' : 'EN'}`;\n  const queries: UseQueryOptions[] = useMemo(() => {\n    return new Array(libraryCount).fill(0).map((_, index) => {\n      return {\n        queryKey: ['data', `${docPrefix}${index + 1}`],\n        queryFn: getDocQueryFunction('data', `${docPrefix}${index + 1}`),\n        enabled,\n        onSuccess: () => {\n          notification.info({\n            message: `Data Drawings ${docPrefix}${index + 1} loaded`,\n            placement: 'bottomLeft',\n          });\n        },\n      };\n    });\n  }, [libraryCount]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return useQueries({ queries });\n}\n\n/**\n * Custom hook for saving daily setup.\n *\n * @param queryLanguage The language for the query.\n * @returns An object containing the state and functions for saving daily setup.\n */\nexport function useSaveDailySetup(queryLanguage: Language) {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const source = LANGUAGE_PREFIX.DAILY[queryLanguage ?? 'pt'];\n\n  const [isDirty, setIsDirty] = useState(false);\n\n  const historyQuery = useQuery<any, Error, DailyHistory, QueryKey>({\n    queryKey: [source, 'history'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>(source, 'history'),\n    enabled: Boolean(source),\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Daily History loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading daily history',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const mutation = useMutation<any, Error, DailyEntry[], QueryKey>(\n    async (data) => {\n      const saves = data.map((entry) => {\n        const docRef = doc(firestore, `${source}/${entry.id}`);\n        return setDoc(docRef, entry);\n      });\n\n      const docRec = doc(firestore, `${source}/history`);\n      const previousHistory = historyQuery.data as DailyHistory;\n\n      if (!previousHistory) {\n        throw new Error('No previous history');\n      }\n\n      const history: DailyHistory = {\n        latestDate: data[data.length - 1].id,\n        latestNumber: data[data.length - 1].number,\n        used: removeDuplicates([...previousHistory.used, ...data.map((e) => e.cardId)]),\n      };\n      setDoc(docRec, history);\n\n      return Promise.all(saves);\n    },\n    {\n      onSuccess: () => {\n        notification.info({\n          message: 'Data saved',\n          placement: 'bottomLeft',\n        });\n        queryClient.invalidateQueries([source, 'history']);\n        setIsDirty(false);\n      },\n      onError: () => {\n        notification.error({\n          message: 'Error saving data',\n          placement: 'bottomLeft',\n        });\n      },\n    }\n  );\n\n  return {\n    isDirty,\n    setIsDirty,\n    save: mutation.mutateAsync,\n    isLoading: mutation.isLoading,\n  };\n}\n\nexport function useTempDaily(enabled = true) {\n  const { notification } = App.useApp();\n\n  const source = LANGUAGE_PREFIX.DAILY['pt'];\n\n  const mutation = useMutation<any, Error, DailyHistory, QueryKey>({\n    mutationFn: async (data) => {\n      const docRec = doc(firestore, `${source}/history`);\n      setDoc(docRec, data);\n    },\n    onSuccess: () => {\n      notification.info({\n        message: 'New history data saved',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  // Load docs\n  // Get used ids\n  // Rewrite history\n\n  const historyQuery = useQuery<any, Error, DailyHistory, QueryKey>({\n    queryKey: [source, 'history'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>(source, 'history'),\n    enabled,\n    onSuccess: (data) => {\n      notification.info({\n        message: 'Data Daily History loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading daily history',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  useQuery<any, Error, string[], QueryKey>({\n    queryKey: [source, 'allDocs'],\n    queryFn: async () => {\n      const querySnapshot = await getDocs(collection(firestore, source));\n      const ids: string[] = [];\n      querySnapshot.forEach((doc) => {\n        const snapshot = doc.data() as DailyEntry;\n        console.log('Getting', snapshot.id);\n        if (snapshot.dataIds) {\n          ids.push(...snapshot.dataIds.map((e) => e.split('::')[0]));\n        }\n      });\n      return removeDuplicates(ids);\n    },\n    enabled: Boolean(historyQuery.data?.used),\n    onSuccess: (data) => {\n      const history = historyQuery.data as DailyHistory;\n\n      mutation.mutateAsync({\n        ...history,\n        used: data,\n      });\n    },\n  });\n}\n","import moment from 'moment';\n\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: number[][]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","// Ant Design Resources\nimport { TableColumnsType, Table, Button, Flex } from 'antd';\n// Components\n\nimport { UseLoadDailySetup, useSaveDailySetup } from './hooks';\n\nimport { DailyEntry } from './types';\nimport { CanvasSVG } from 'components/Daily/CanvasSVG';\n\ntype DataPopulationProps = {\n  language: string;\n  dataLoad: UseLoadDailySetup;\n};\n\nexport function DataPopulation({ language, dataLoad }: DataPopulationProps) {\n  const queryLanguage = language as Language;\n\n  const columns: TableColumnsType<DailyEntry> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'Num',\n      dataIndex: 'number',\n      key: 'number',\n    },\n    {\n      title: 'CardId',\n      dataIndex: 'cardId',\n      key: 'cardId',\n    },\n    {\n      title: 'Text',\n      dataIndex: 'text',\n      key: 'text',\n      render: (text) => (\n        <div>\n          {text\n            .split('')\n            .map((l: string, i: number) => (i < 2 || l === ' ' ? l : '⏹'))\n            .join('')}\n        </div>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'drawings',\n      key: 'count',\n      render: (drawings) => <div>{drawings.length}</div>,\n    },\n    {\n      title: 'Drawings',\n      dataIndex: 'drawings',\n      key: 'drawings',\n      render: (drawings) => (\n        <div>\n          {drawings.map((d: string) => (\n            <CanvasSVG key={d} drawing={d} width={100} height={100} className=\"canvas\" />\n          ))}\n        </div>\n      ),\n    },\n  ];\n\n  const { save, isLoading: isMutating } = useSaveDailySetup(queryLanguage ?? 'pt');\n\n  return (\n    <div>\n      {dataLoad.isLoading && <div>Loading...</div>}\n      <Flex justify=\"space-between\" align=\"center\">\n        <h1>Total: {dataLoad.entries.length}</h1>\n        <Button\n          onClick={() => save(dataLoad.entries)}\n          loading={isMutating}\n          disabled={(dataLoad.entries ?? []).length === 0}\n          type=\"primary\"\n          size=\"large\"\n        >\n          Save\n        </Button>\n      </Flex>\n      <Table columns={columns} dataSource={dataLoad.entries ?? []} />\n    </div>\n  );\n}\n","import { FilterSelect } from 'components/Common';\nimport { SiderContent } from 'components/Layout';\nimport { LANGUAGES } from 'utils/constants';\n\ntype SideFiltersProps = {\n  language: string;\n  setLanguage: (language: string) => void;\n  drawingsCount: number;\n  setDrawingsCount: (drawingsCount: number) => void;\n  batchSize: number;\n  setBatchSize: (batchSize: number) => void;\n};\n\nexport function SideFilters({\n  language,\n  setLanguage,\n  drawingsCount,\n  setDrawingsCount,\n  batchSize,\n  setBatchSize,\n}: SideFiltersProps) {\n  return (\n    <SiderContent>\n      <FilterSelect\n        label=\"Language\"\n        value={language}\n        onChange={setLanguage}\n        options={LANGUAGES}\n        placeholder=\"Select a language\"\n      />\n      <FilterSelect\n        label=\"Minimum Drawings\"\n        value={drawingsCount}\n        onChange={setDrawingsCount}\n        options={[2, 3, 4]}\n        placeholder=\"Select a number\"\n      />\n      <FilterSelect\n        label=\"Batch Size\"\n        value={batchSize}\n        onChange={setBatchSize}\n        options={[15, 30, 45]}\n        placeholder=\"Select a number\"\n      />\n    </SiderContent>\n  );\n}\n","import { Layout, Typography } from 'antd';\nimport { DataPopulation } from 'components/Daily/DataPopulation';\nimport { SideFilters } from 'components/Daily/SideFilters';\nimport { useLoadDailySetup } from 'components/Daily/hooks';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { ResponseState } from 'components/Common';\nimport { useState } from 'react';\n\nfunction DailySetup() {\n  const [language, setLanguage] = useState('');\n  const [drawingsCount, setDrawingsCount] = useState(3);\n  const [batchSize, setBatchSize] = useState(45);\n\n  const dataLoad = useLoadDailySetup(Boolean(language), language as Language, drawingsCount, batchSize);\n\n  return (\n    <PageLayout title=\"Daily Setup\">\n      <Layout hasSider>\n        <PageSider>\n          <ResponseState isLoading={dataLoad.isLoading} error={null} hasResponseData={!dataLoad.isLoading} />\n          <SideFilters\n            language={language}\n            setLanguage={setLanguage}\n            drawingsCount={drawingsCount}\n            setDrawingsCount={setDrawingsCount}\n            batchSize={batchSize}\n            setBatchSize={setBatchSize}\n          />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={dataLoad.isLoading}\n            error={null}\n            hasResponseData={!dataLoad.isLoading}\n          >\n            <Typography.Title level={2}>Data Population</Typography.Title>\n            <DataPopulation language={language} dataLoad={dataLoad} />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default DailySetup;\n","import { AlienSign, Emoji, Glyph } from 'components/Sprites';\nimport { capitalize, invert, keyBy } from 'lodash';\n\nexport const SEARCH_THRESHOLD: number = 2;\n\nexport const RESOURCE_NAMES = {\n  ADJECTIVES: 'adjectives',\n  ALIEN_ITEMS: 'alien-items',\n  ARTE_RUIM_CARDS: 'arte-ruim-cards',\n  ARTE_RUIM_GROUPS: 'arte-ruim-groups',\n  ARTE_RUIM_PAIRS: 'arte-ruim-pairs',\n  CATEGORIES: 'categories',\n  CHALLENGES: 'challenges',\n  CHARACTERS: 'characters',\n  CHOICES: 'choices',\n  CONTENDERS: 'contenders',\n  CRIME_EVIDENCE: 'crime-evidence',\n  CRIME_TILES: 'crime-tiles',\n  CRIME_WEAPONS: 'crime-weapons',\n  DATING_CANDIDATE: 'dating-candidate',\n  DATING_CANDIDATE_BODIES: 'dating-candidate-bodies',\n  DATING_CANDIDATE_HEADS: 'dating-candidate-heads',\n  DIAGRAM_TOPICS: 'diagram-topics',\n  DILEMMAS: 'dilemmas',\n  DRAWING_WORDS: 'drawing-words',\n  GROUP_QUESTIONS: 'group-questions',\n  ITEMS_ATTRIBUTES: 'items-attributes',\n  MONSTER_ORIENTATION: 'monster-orientation',\n  MOVIE_REVIEWS: 'movie-reviews',\n  MOVIES: 'movies',\n  NAMING_PROMPTS: 'naming-prompts',\n  OBJECT_FEATURES: 'object-features',\n  QUANTITATIVE_QUESTIONS: 'quantitative-questions',\n  SCENARIOS: 'scenarios',\n  SPECTRUMS: 'spectrums',\n  SINGLE_WORDS: 'single-words',\n  SPY_LOCATIONS: 'spy-locations',\n  SPY_QUESTIONS: 'spy-questions',\n  SUSPECTS: 'suspects',\n  TESTIMONY_QUESTIONS: 'testimony-questions',\n  THEME_WORDS: 'theme-words',\n  THING_PROMPTS: 'thing-prompts',\n  THINGS_QUALITIES: 'things-qualities',\n  TOPICS: 'topics',\n  TREE_WORDS: 'tree-words',\n  TWEETS: 'tweets',\n};\n\nexport const DUAL_LANGUAGE_RESOURCES = [\n  RESOURCE_NAMES.ALIEN_ITEMS,\n  RESOURCE_NAMES.CONTENDERS,\n  RESOURCE_NAMES.CRIME_EVIDENCE,\n  RESOURCE_NAMES.CRIME_TILES,\n  RESOURCE_NAMES.CRIME_WEAPONS,\n  RESOURCE_NAMES.DATING_CANDIDATE_BODIES,\n  RESOURCE_NAMES.DATING_CANDIDATE_HEADS,\n  RESOURCE_NAMES.ITEMS_ATTRIBUTES,\n  RESOURCE_NAMES.MONSTER_ORIENTATION,\n  RESOURCE_NAMES.OBJECT_FEATURES,\n  RESOURCE_NAMES.SUSPECTS,\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n\nexport const SEARCH_PROPERTY: Record<string, string> = {\n  adjectives: 'text',\n  'arte-ruim-cards': 'text',\n  'arte-ruim-groups': 'theme',\n  'arte-ruim-pairs': 'values',\n  categories: 'text',\n  challenges: 'text',\n  characters: 'text',\n  contenders: '',\n  'crime-tiles': '',\n  'diagram-topics': 'text',\n  'galeria-de-sonhos': 'text',\n  'group-questions': 'text',\n  'linhas-cruzadas': 'text',\n  'naming-prompts': 'text',\n  spectrums: '',\n  'single-words': 'text',\n  'spy-locations': '',\n  'spy-questions': '',\n  'testimony-questions': 'question',\n  'thing-prompts': 'text',\n  topics: 'text',\n};\n\nexport const TOTAL_ITEMS = 1418;\n\nexport const SPRITE_LIBRARY = keyBy(\n  [\n    {\n      key: 'alien-signs',\n      name: 'Alien Signs',\n      prefix: 'sign',\n      quantity: 38,\n      startAt: 0,\n      component: AlienSign,\n    },\n    {\n      key: 'emojis',\n      name: 'Emojis',\n      prefix: 'emoji',\n      quantity: 30,\n      startAt: 1,\n      component: Emoji,\n    },\n    {\n      key: 'glyphs',\n      name: 'Glyphs',\n      prefix: 'glyph',\n      quantity: 365,\n      startAt: 1,\n      component: Glyph,\n    },\n  ],\n  'key'\n);\n\n/**\n * Options for the sample size selector\n */\nexport const TAGS_SELECTOR_OPTIONS = [\n  { label: 'Any', value: '' },\n  { label: '= 0', value: 0 },\n  { label: '< 3', value: 3 },\n  { label: '< 5', value: 5 },\n  { label: '< 10', value: 10 },\n];\n\n/**\n * Options for the sample size selector\n */\nexport const SAMPLE_SIZE_OPTIONS = [\n  {\n    label: '9',\n    value: 9,\n  },\n  {\n    label: '15',\n    value: 15,\n  },\n  {\n    label: '30',\n    value: 30,\n  },\n  {\n    label: '50',\n    value: 50,\n  },\n  {\n    label: '100',\n    value: 100,\n  },\n];\n\n/**\n * Options for the card size selector\n */\nexport const CARD_SIZE_OPTIONS = [\n  {\n    label: 'Small',\n    value: 100,\n  },\n  {\n    label: 'Medium',\n    value: 150,\n  },\n  {\n    label: 'Large',\n    value: 200,\n  },\n  {\n    label: 'X-Large',\n    value: 250,\n  },\n];\n\nexport const ATTRIBUTE_VALUE = {\n  OPPOSITE: -10,\n  UNRELATED: -3,\n  UNCLEAR: -1,\n  RELATED: 5,\n  DETERMINISTIC: 10,\n};\n\nexport const VALUE_ATTRIBUTE = invert(ATTRIBUTE_VALUE);\n\nexport const ATTRIBUTE_VALUE_PREFIX = {\n  OPPOSITE: '^',\n  UNRELATED: '!',\n  UNCLEAR: '~',\n  RELATED: '',\n  DETERMINISTIC: '+',\n};\n\nexport const ATTRIBUTE_GROUP_VALUES = Object.keys(ATTRIBUTE_VALUE).map((key) => ({\n  value: key.toLowerCase(),\n  label: capitalize(key),\n}));\n","import { chain, cloneDeep, isObject, memoize, merge, orderBy } from 'lodash';\nimport { ATTRIBUTE_VALUE, ATTRIBUTE_VALUE_PREFIX, SEARCH_THRESHOLD } from './constants';\nimport stringSimilarity from 'string-similarity';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\n\n/**\n *\n * @param str\n * @returns\n */\nexport function stringRemoveAccents(str: string) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n *\n * @param data\n * @param property\n * @returns\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n *\n * @param str\n * @param data\n * @param property\n * @returns\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const val = typeof entry[property] === 'string' ? entry[property] : JSON.stringify(entry[property]);\n    const entryStr = stringRemoveAccents(val.toLowerCase());\n\n    if (entryStr.includes(value) || stringSimilarity.compareTwoStrings(str, entryStr) > 0.5) {\n      similar[entry.id] = val;\n    }\n  });\n\n  return similar;\n};\n\nexport const findBestMatch = (str: string, list: string[]) => {};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n\n/**\n * Remove duplicated elements from a list\n * @param arr\n * @returns\n */\nexport const removeDuplicates = <T>(arr: T[]): T[] => {\n  return Array.from(new Set(arr));\n};\n\n/**\n * Converts a object into a downloadable file and prompts download\n * @param obj\n * @param filename\n */\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\n/**\n * Sorts the keys of a JSON object based on a predefined order.\n * The keys 'id', 'name', 'title', and 'type' will be placed first in the sorted object,\n * followed by the remaining keys in alphabetical order.\n *\n * @param library - The JSON object to sort.\n * @returns The sorted JSON object.\n */\nexport const sortJsonKeys = (library: PlainObject): PlainObject => {\n  function sortKeys(obj: any): any {\n    if (isObject(obj) && !Array.isArray(obj)) {\n      const sortedKeys = Object.keys(obj)\n        .filter((key) => ['id', 'name', 'title', 'type'].includes(key))\n        .concat(\n          Object.keys(obj)\n            .filter((key) => !['id', 'name', 'title', 'type'].includes(key))\n            .sort()\n        );\n\n      return chain(obj)\n        .toPairs()\n        .sortBy(([key, _]) => sortedKeys.indexOf(key))\n        .map(([key, value]) => [key, sortKeys(value)])\n        .fromPairs()\n        .value();\n    }\n    return obj;\n  }\n\n  return sortKeys(library);\n};\n\nexport const getCurrentDateTime = (): string => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const day = String(now.getDate()).padStart(2, '0');\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\n\n/**\n * Creates a new item with default values and merges it with the provided partial item.\n *\n * @param partialItem - The partial item to merge with the default values.\n * @returns The new item with merged values.\n */\nexport const getNewItem = (partialItem: Partial<Item> = {}): Item => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        name: { en: '', pt: '' },\n        groups: [],\n        attributes: {},\n      },\n      partialItem\n    )\n  );\n};\n\n/**\n * Creates a new `ItemAtributesValues` object by merging the provided `partialItemAttributeValues`\n * with a default object that has an empty `id` and an empty `attributes` object.\n *\n * @param partialItemAttributeValues - The partial item attribute values to merge.\n * @returns The new `ItemAtributesValues` object.\n */\nexport const getNewItemAttributeValues = (\n  partialItemAttributeValues: Partial<ItemAtributesValues> = {}\n): ItemAtributesValues => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        attributes: {},\n      },\n      partialItemAttributeValues\n    )\n  );\n};\n\nexport const getItemAttributePriorityResponse = (\n  itemAttributesValues: ItemAtributesValues,\n  itemAttributes: Dictionary<ItemAttribute>\n) => {\n  const priorityOrder: string[] = orderBy(\n    Object.values(itemAttributes),\n    ['priority', 'id'],\n    ['asc', 'asc']\n  ).map((attribute) => attribute.id);\n\n  function sortAttributesByPriority(attributeKeys: string[], prefix: string) {\n    return orderBy(attributeKeys, (key) => priorityOrder.indexOf(key), ['asc']).map(\n      (key) => `${prefix}${key}`\n    );\n  }\n\n  let opposite: string[] = [];\n  let deterministic: string[] = [];\n  let related: string[] = [];\n  let unrelated: string[] = [];\n  let unclear: string[] = [];\n\n  Object.entries(itemAttributesValues.attributes).forEach(([attributeId, value]) => {\n    const attribute = itemAttributes[attributeId];\n    if (!attribute) return;\n\n    switch (value) {\n      case ATTRIBUTE_VALUE.OPPOSITE:\n        opposite.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.DETERMINISTIC:\n        deterministic.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.RELATED:\n        related.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNRELATED:\n        unrelated.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNCLEAR:\n      default:\n        unclear.push(attributeId);\n        break;\n    }\n  });\n\n  return [\n    ...sortAttributesByPriority(opposite, ATTRIBUTE_VALUE_PREFIX.OPPOSITE),\n    ...sortAttributesByPriority(deterministic, ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC),\n    ...sortAttributesByPriority(related, ATTRIBUTE_VALUE_PREFIX.RELATED),\n    ...sortAttributesByPriority(unrelated, ATTRIBUTE_VALUE_PREFIX.UNRELATED),\n    ...sortAttributesByPriority(unclear, ATTRIBUTE_VALUE_PREFIX.UNCLEAR),\n  ];\n};\nexport const parseAttribute = memoize((keyVariant: string) => {\n  if (keyVariant.length === 3) {\n    return {\n      key: keyVariant,\n      className: '',\n      text: '',\n    };\n  }\n\n  const variant = keyVariant[0];\n  const key = keyVariant.slice(1, 4);\n\n  return {\n    key,\n    className: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'deterministic',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'unrelated',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'unclear',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'opposite',\n    }[variant],\n    text: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'very',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'not',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'maybe',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'very not',\n    }[variant],\n  };\n});\n\nexport const filterMessage = (message: string[], showUnclear: boolean, showUnrelated: boolean) => {\n  return message.filter((keyVariant) => {\n    if (!showUnclear && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNCLEAR)) {\n      return false;\n    }\n\n    if (!showUnrelated && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNRELATED)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n"],"names":["TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","props","label","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","value","onChange","options","placeholder","style","minWidth","disabled","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","size","DataLoadingWrapper","tip","message","description","type","showIcon","Sprite","id","source","padding","title","getUrl","useBaseUrl","data","useQuery","queryKey","queryFn","async","response","fetch","text","enabled","paddedWidth","height","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","AlienSign","Emoji","emojiId","startsWith","getSource","memoize","str","match","numId","parseInt","glyphId","sourceId","Math","ceil","Glyph","itemId","Item","library","baseUrl","folder","process","path","join","getDocQueryFunction","docId","console","log","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","LANGUAGE_PREFIX","SUFFIX_DATA","pt","en","DAILY","useLoadDailySetup","queryLanguage","drawingsCount","batchSize","notification","App","suffixCountsQuery","onSuccess","info","placement","onError","suffixData","drawingsQuery","libraryCount","docPrefix","queries","useMemo","Array","fill","_","index","useQueries","useLoadDrawings","Boolean","areDrawingsLoading","some","q","historyQuery","usedCards","used","latestDate","latestNumber","entries","drawings","reduce","acc","drawingEntry","drawingsLibrary","Object","forEach","key","dataDrawing","drawing","trim","length","cardId","undefined","language","number","dataIds","push","totalCardCount","keys","atLeastTwoDrawingsList","values","filter","e","includes","shortlistCardCount","shortList","shuffledShortList","sampleSize","shuffle","lastDate","dateString","moment","add","format","round5sample","CanvasSVG","strokeWidth","konvaLines","JSON","parse","paths","lineArr","strokeWidthBySize","small","medium","large","xmlns","overflow","d","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DataPopulation","dataLoad","columns","dataIndex","render","split","l","i","save","isMutating","queryClient","useQueryClient","setIsDirty","useState","mutation","useMutation","saves","setDoc","docRec","previousHistory","Error","history","removeDuplicates","Promise","all","invalidateQueries","mutateAsync","useSaveDailySetup","justify","align","onClick","loading","dataSource","SideFilters","setLanguage","setDrawingsCount","setBatchSize","LANGUAGES","hasSider","PageSider","SEARCH_THRESHOLD","RESOURCE_NAMES","ADJECTIVES","ALIEN_ITEMS","ARTE_RUIM_CARDS","ARTE_RUIM_GROUPS","ARTE_RUIM_PAIRS","CATEGORIES","CHALLENGES","CHARACTERS","CHOICES","CONTENDERS","CRIME_EVIDENCE","CRIME_TILES","CRIME_WEAPONS","DATING_CANDIDATE","DATING_CANDIDATE_BODIES","DATING_CANDIDATE_HEADS","DIAGRAM_TOPICS","DILEMMAS","DRAWING_WORDS","GROUP_QUESTIONS","ITEMS_ATTRIBUTES","MONSTER_ORIENTATION","MOVIE_REVIEWS","MOVIES","NAMING_PROMPTS","OBJECT_FEATURES","QUANTITATIVE_QUESTIONS","SCENARIOS","SPECTRUMS","SINGLE_WORDS","SPY_LOCATIONS","SPY_QUESTIONS","SUSPECTS","TESTIMONY_QUESTIONS","THEME_WORDS","THING_PROMPTS","THINGS_QUALITIES","TOPICS","TREE_WORDS","TWEETS","DUAL_LANGUAGE_RESOURCES","SEARCH_PROPERTY","adjectives","categories","challenges","characters","contenders","spectrums","topics","SPRITE_LIBRARY","keyBy","name","prefix","quantity","startAt","component","TAGS_SELECTOR_OPTIONS","SAMPLE_SIZE_OPTIONS","CARD_SIZE_OPTIONS","ATTRIBUTE_VALUE","OPPOSITE","UNRELATED","UNCLEAR","RELATED","DETERMINISTIC","ATTRIBUTE_VALUE_PREFIX","invert","ATTRIBUTE_GROUP_VALUES","toLowerCase","capitalize","stringRemoveAccents","normalize","replace","checkForDuplicates","property","unique","duplicates","entryKey","findSimilar","similar","val","stringify","entryStr","stringSimilarity","arr","from","Set","downloadObjectAsFile","obj","filename","blob","Blob","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","sortJsonKeys","sortKeys","isObject","isArray","sortedKeys","concat","sort","chain","toPairs","sortBy","indexOf","fromPairs","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getNewItem","partialItem","cloneDeep","merge","groups","attributes","getNewItemAttributeValues","partialItemAttributeValues","getItemAttributePriorityResponse","itemAttributesValues","itemAttributes","priorityOrder","orderBy","attribute","sortAttributesByPriority","attributeKeys","opposite","deterministic","related","unrelated","unclear","attributeId","parseAttribute","keyVariant","variant","slice","filterMessage","showUnclear","showUnrelated"],"sourceRoot":""}