{"version":3,"file":"static/js/CrimeEvidence.8e332590.chunk.js","mappings":"kIAGO,SAASA,IAAqE,IAAtDC,EAAqD,uDAAJ,CAAC,EAC/E,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,MAElCC,EAAW,CAACC,EAAaC,UACfC,IAAVD,GAAiC,KAAVA,EACzBL,EAAaO,OAAOH,GAEpBJ,EAAaQ,IAAIJ,EAAKK,OAAOJ,IAG/BJ,EAAgBD,EAAhB,EAGIU,EAAc,CAACN,EAAaC,KAChCL,EAAaO,OAAOH,GACpBH,EAAgBD,EAAhB,GAGFW,EAAAA,EAAAA,YAAU,KACRC,OAAOC,QAAQd,GAAee,SAAQ,IAAmB,IAAjBV,EAAKC,GAAW,EACjDL,EAAae,IAAIX,IACpBD,EAASC,EAAKC,EACf,GAHH,GAKC,IAEH,MAAMW,EAAchB,EACjBiB,WACAC,MAAM,KACNC,QAAO,CAACC,EAA4BC,KACnC,MAAOjB,EAAKC,GAASgB,EAAMH,MAAM,KAIjC,OAHId,QAAiBE,IAAVD,IACTe,EAAGhB,GAAOC,GAELe,CAAP,GACC,CAAC,GAEN,MAAO,CACLjB,WACAO,cACAM,cAEH,C,8GCdD,QAzBA,WAQE,OANAlB,EAAAA,EAAAA,GAAe,CAAEwB,KAAM,KAOrB,SAAC,KAAD,CAAYC,MAAM,SAASC,SAAS,iBAApC,UACE,UAAC,IAAD,CAAQC,UAAQ,EAAhB,WACE,SAAC,IAAD,WACE,wCAGF,SAAC,YAAD,CAAgBC,UAAU,UAA1B,UACE,SAAC,IAAD,CAAoBC,WAZV,EAYgCC,MAXpC,KAWkDC,iBAVxC,EAUhB,2BAOT,C","sources":["hooks/useQueryParams.ts","pages/Images/CrimeEvidence.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown) => {\n    if (value === undefined || value === '') {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string, value: unknown) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  const queryParams = searchParams\n    .toString()\n    .split('&')\n    .reduce((qp: Record<string, string>, entry) => {\n      const [key, value] = entry.split('=');\n      if (key && value !== undefined) {\n        qp[key] = value;\n      }\n      return qp;\n    }, {});\n\n  return {\n    addParam,\n    removeParam,\n    queryParams,\n  };\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\nfunction CrimeEvidence() {\n  // Set default query params\n  useQueryParams({ deck: 1 });\n\n  const isLoading = false;\n  const error = null;\n  const hasResponseData = false;\n\n  return (\n    <PageLayout title=\"Images\" subtitle=\"Crime Evidence\">\n      <Layout hasSider>\n        <PageSider>\n          <div>Options</div>\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            Content\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default CrimeEvidence;\n"],"names":["useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","value","undefined","delete","set","String","removeParam","useEffect","Object","entries","forEach","has","queryParams","toString","split","reduce","qp","entry","deck","title","subtitle","hasSider","className","isLoading","error","hasResponseData"],"sourceRoot":""}