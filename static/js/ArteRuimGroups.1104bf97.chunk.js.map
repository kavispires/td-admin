{"version":3,"file":"static/js/ArteRuimGroups.1104bf97.chunk.js","mappings":"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","sources":["components/Common/FilterEntries.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/ResponseState.tsx","components/DataLoadingWrapper.tsx","components/Resource/ResourceSelectionFilters.tsx","components/Sprites/Sprite.tsx","components/Sprites/WarehouseGood.tsx","components/Sprites/AlienSign.tsx","components/Sprites/Emoji.tsx","components/Sprites/Glyph.tsx","components/Sprites/Item.tsx","hooks/useBaseUrl.ts","hooks/useQueryParams.ts","hooks/useResourceState.ts","pages/ArteRuim/ArteRuimGroups.tsx","utils/constants.ts"],"sourcesContent":["import { Checkbox, Form, InputNumber, Segmented, Select, Switch, Tooltip } from 'antd';\nimport type { SegmentedValue } from 'antd/es/segmented';\nimport type { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          ),\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport function FilterSwitch({ label, value, onChange, className, disabled }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" disabled={disabled} />\n    </Form.Item>\n  );\n}\n\nexport function FilterCheckBox({ label, value, onChange, disabled, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Checkbox checked={value} onChange={(e) => onChange(e.target.checked)} disabled={disabled} />\n    </Form.Item>\n  );\n}\n\ntype FilterSegmentsProps = {\n  label: ReactNode;\n  value?: string;\n  onChange: (mode: SegmentedValue) => void;\n  options: { value: string; title: string; icon: ReactNode }[];\n};\n\nexport function FilterSegments({ value, label, onChange, options }: FilterSegmentsProps) {\n  return (\n    <Form.Item label={label} layout={options.length > 2 ? 'vertical' : 'horizontal'}>\n      <Segmented\n        block\n        value={value}\n        onChange={onChange}\n        options={options.map((option) => ({\n          label: (\n            <Tooltip arrow trigger=\"hover\" title={option.title}>\n              {option.icon}\n            </Tooltip>\n          ),\n          value: option.value,\n        }))}\n      />\n    </Form.Item>\n  );\n}\n","import { Typography } from 'antd';\nimport type { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  isIdle?: boolean;\n  isLoading: boolean;\n  error?: ResponseError;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({\n  isLoading,\n  isIdle,\n  error,\n  hasResponseData,\n  children,\n}: DataLoadingWrapperProps) {\n  if (!isIdle && isLoading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" showIcon />\n      </Layout.Content>\n    );\n  }\n\n  if (isIdle || hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { Button, Form, Select } from 'antd';\nimport { useState } from 'react';\n\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { DUAL_LANGUAGE_RESOURCES, LANGUAGES } from '../../utils/constants';\n\ntype ResourceSelectionFiltersProps = {\n  resourceNames: string[];\n};\n\nexport function ResourceSelectionFilters({ resourceNames }: ResourceSelectionFiltersProps) {\n  const { queryParams, addParam } = useQueryParams();\n  const [form] = Form.useForm();\n  const [currentResourceName, setCurrentResourceName] = useState(queryParams.get('resourceName') ?? '');\n\n  const onFinish = (v: any) => {\n    const isDualLanguageResource = DUAL_LANGUAGE_RESOURCES.includes(v.resourceName);\n\n    addParam('language', isDualLanguageResource ? null : v.language);\n    addParam('resourceName', v.resourceName);\n  };\n\n  return (\n    <SiderContent>\n      <Form\n        layout=\"vertical\"\n        onFinish={onFinish}\n        size=\"small\"\n        form={form}\n        initialValues={{\n          resourceName: queryParams.get('resourceName') ?? '',\n          language: queryParams.get('language') ?? '',\n        }}\n      >\n        <Form.Item label=\"Resource\" name=\"resourceName\">\n          <Select\n            style={{ minWidth: '150px' }}\n            value={queryParams.get('resourceName')}\n            onChange={(e: string) => setCurrentResourceName(e)}\n          >\n            {resourceNames.map((resourceName) => (\n              <Select.Option key={resourceName} value={resourceName}>\n                {resourceName}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Language\" name=\"language\">\n          <Select\n            style={{ minWidth: '150px' }}\n            disabled={DUAL_LANGUAGE_RESOURCES.includes(currentResourceName)}\n          >\n            {LANGUAGES.map((entry) => (\n              <Select.Option key={entry} value={entry}>\n                {entry}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Load\n          </Button>\n        </Form.Item>\n      </Form>\n    </SiderContent>\n  );\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const { getUrl } = useBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${getUrl('sprites')}/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype WarehouseGoodProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\nconst BASE = 64;\n\n/**\n * Retrieves the source and good ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and good ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const goodId = `good-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `warehouse-goods-${sourceId}`;\n  return [source, goodId];\n};\n\n/**\n * An warehouse good card component.\n */\nexport function WarehouseGood({ id, width = 75, className }: WarehouseGoodProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={itemId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype AlienSignProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function AlienSign({ id, width = 75, className = '' }: AlienSignProps) {\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={id} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype EmojiProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function Emoji({ id, width, className }: EmojiProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\ntype GlyphProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n});\n\n/**\n * A glyph card component.\n */\nexport function Glyph({ id, width, className }: GlyphProps) {\n  const [source, glyphId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\nexport type ItemProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function Item({ id, width, className, title }: ItemProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div\n      className={clsx('sprite', className)}\n      style={{ width: `${width ?? 75}px`, height: `${width ?? 75}px` }}\n    >\n      <Sprite source={source} id={itemId} width={width} title={title} />\n    </div>\n  );\n}\n","/**\n * Returns the base url for the given library and path\n * @param library\n * @param path\n * @returns\n */\nexport function useBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic') {\n  const baseUrl: string | undefined = process.env.REACT_APP_TD_BASE_URL;\n  let folder: string | undefined = '';\n\n  switch (library) {\n    case 'images':\n      folder = process.env.REACT_APP_TD_IMAGES;\n      break;\n    case 'sprites':\n      folder = process.env.REACT_APP_TD_SPRITES;\n      break;\n    case 'resources':\n      folder = process.env.REACT_APP_TD_RESOURCES;\n      break;\n    case 'classic':\n      folder = process.env.REACT_APP_TD_CLASSIC;\n      break;\n    default:\n      // TODO: The default should be removed\n      // baseUrl =\n      //   process.env.NODE_ENV === 'development'\n      //     ? process.env.REACT_APP_LOCAL_URL\n      //     : process.env.REACT_APP_TD_BASE_URL;\n      // folder = process.env.REACT_APP_TD_RESOURCES;\n      throw new Error('Invalid library');\n  }\n\n  return {\n    baseUrl,\n    getUrl: (path: string) => [baseUrl, folder, path].join('/'),\n  };\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffectOnce } from 'react-use';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffectOnce(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  });\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { DUAL_LANGUAGE_RESOURCES } from 'utils/constants';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\nimport { useQueryParams } from './useQueryParams';\n\ntype ResourceState = {\n  resourceName: string | null;\n  language?: Language | null;\n  response: any;\n  isLoading: boolean;\n  error?: ResponseError | null;\n  hasResponseData: boolean;\n  enabled: boolean;\n};\n\nexport function useResourceState(availableResources: AvailableResources): ResourceState {\n  const { queryParams } = useQueryParams();\n  const { getUrl } = useBaseUrl('resources');\n  const resourceName = queryParams.get('resourceName') ?? '';\n  const language = queryParams.get('language');\n\n  const enabled = !!resourceName && availableResources.includes(resourceName);\n\n  const { data, isLoading, error } = useQuery<any, ResponseError>({\n    queryKey: ['resource', resourceName, language],\n    queryFn: async () => {\n      const url =\n        language && !DUAL_LANGUAGE_RESOURCES.includes(resourceName)\n          ? getUrl(`${resourceName}-${language}.json`)\n          : getUrl(`${resourceName}.json`);\n\n      const res = await fetch(url);\n\n      const result = res.body ? await res.json() : {};\n\n      return result;\n    },\n    enabled,\n  });\n\n  return {\n    resourceName,\n    language: (language as Language) || null,\n    response: data,\n    isLoading,\n    enabled,\n    error,\n    hasResponseData: Boolean(data),\n  };\n}\n","import { Input, Layout, List, Typography } from 'antd';\nimport { ResponseState } from 'components/Common';\nimport { SectionTitle } from 'components/Common/SectionTitle';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { useEffect, useState } from 'react';\nimport type { ArteRuimCard, ArteRuimGroup } from 'types';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { DataLoadingWrapper } from '../../components/DataLoadingWrapper';\nimport { ResourceSelectionFilters } from '../../components/Resource/ResourceSelectionFilters';\nimport { useResourceState } from '../../hooks/useResourceState';\nimport { RESOURCE_NAMES } from '../../utils/constants';\n\nconst { Text } = Typography;\n\nconst parseData = (cards: Record<CardId, ArteRuimCard>, groups: Record<string, ArteRuimGroup>) => {\n  const themes = Object.values(groups)\n    .map((entry) => entry.theme)\n    .sort();\n\n  const used: StringDictionary = {};\n  const unused: StringDictionary = {};\n  const duplicated: StringDictionary = {};\n  // Get used and unused\n  Object.values(groups).forEach((group) => {\n    Object.keys(group.cards).forEach((entryId) => {\n      if (used[entryId]) {\n        duplicated[entryId] = cards[entryId].text;\n      } else {\n        used[entryId] = cards[entryId].text;\n      }\n    });\n  });\n\n  Object.values(cards).forEach((card) => {\n    if (used[card.id] === undefined) {\n      unused[card.id] = card.text;\n    }\n  });\n\n  return { themes, used, unused, duplicated };\n};\n\nfunction ArteRuimGroups() {\n  // Set default query params\n  useQueryParams({ resourceName: RESOURCE_NAMES.ARTE_RUIM_CARDS, language: 'pt' });\n  const { getUrl } = useBaseUrl('resources');\n\n  const [used, setUsed] = useState({});\n  const [unused, setUnused] = useState({});\n  const [duplicated, setDuplicated] = useState({});\n  const [themes, setThemes] = useState<string[]>([]);\n\n  const {\n    language,\n    isLoading,\n    error,\n    hasResponseData,\n    response: cards,\n  } = useResourceState([RESOURCE_NAMES.ARTE_RUIM_CARDS]);\n\n  const {\n    data: groups,\n    isLoading: loadingLevel4,\n    error: errorLevel4,\n  } = useQuery<any, ResponseError>({\n    queryKey: [RESOURCE_NAMES.ARTE_RUIM_GROUPS, language],\n    queryFn: async () => {\n      const response = await fetch(getUrl(`${RESOURCE_NAMES.ARTE_RUIM_GROUPS}-${language}.json`));\n      const result = await response.json();\n\n      return result;\n    },\n    enabled: Boolean(language),\n  });\n\n  useEffect(() => {\n    if (!isLoading && !loadingLevel4 && cards && groups) {\n      const result = parseData(cards, groups);\n      setThemes(result.themes);\n      setUsed(result.used);\n      setUnused(result.unused);\n      setDuplicated(result.duplicated);\n    }\n  }, [cards, groups, isLoading, loadingLevel4]);\n\n  return (\n    <PageLayout title=\"Arte Ruim Groups\" subtitle={language ? `${language}` : ''}>\n      <Layout hasSider>\n        <PageSider>\n          <ResponseState\n            hasResponseData={hasResponseData && Boolean(groups)}\n            isLoading={isLoading || loadingLevel4}\n            error={error || errorLevel4}\n          />\n          <ResourceSelectionFilters resourceNames={[RESOURCE_NAMES.ARTE_RUIM_CARDS]} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={isLoading || loadingLevel4}\n            error={error || errorLevel4}\n            hasResponseData={hasResponseData && Boolean(groups)}\n          >\n            <div className=\"parser-container\">\n              <div className=\"parser-main\">\n                <SectionTitle>Used in Groups ({Object.keys(used).length})</SectionTitle>\n                <Input.TextArea\n                  name=\"output\"\n                  id=\"\"\n                  cols={15}\n                  rows={10}\n                  readOnly\n                  value={JSON.stringify(used, null, 4)}\n                />\n                <SectionTitle>Unused in Groups ({Object.keys(unused).length})</SectionTitle>\n                <Input.TextArea\n                  name=\"output\"\n                  id=\"\"\n                  cols={15}\n                  rows={10}\n                  readOnly\n                  value={JSON.stringify(unused, null, 4)}\n                />\n                <SectionTitle>In More than One Group ({Object.keys(duplicated).length})</SectionTitle>\n                <Input.TextArea\n                  name=\"duplicates\"\n                  id=\"\"\n                  cols={15}\n                  rows={5}\n                  readOnly\n                  value={JSON.stringify(duplicated, null, 4)}\n                />\n              </div>\n\n              <aside className=\"parser-controls\">\n                <List\n                  header={<SectionTitle>Themes</SectionTitle>}\n                  bordered\n                  className=\"theme-list\"\n                  dataSource={themes}\n                  size=\"small\"\n                  renderItem={(item) => (\n                    <List.Item>\n                      <Text mark></Text> {item}\n                    </List.Item>\n                  )}\n                />\n              </aside>\n            </div>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ArteRuimGroups;\n","import { AlienSign, Emoji, Glyph } from 'components/Sprites';\nimport { WarehouseGood } from 'components/Sprites/WarehouseGood';\nimport { capitalize, invert, keyBy } from 'lodash';\n\nexport const SEARCH_THRESHOLD: number = 2;\n\nexport const RESOURCE_NAMES = {\n  ADJECTIVES: 'adjectives',\n  ALIEN_ITEMS: 'alien-items',\n  ARTE_RUIM_CARDS: 'arte-ruim-cards',\n  ARTE_RUIM_GROUPS: 'arte-ruim-groups',\n  ARTE_RUIM_PAIRS: 'arte-ruim-pairs',\n  CATEGORIES: 'categories',\n  CHALLENGES: 'challenges',\n  CHARACTERS: 'characters',\n  CHOICES: 'choices',\n  CITY_LOCATIONS: 'city-locations',\n  COLORS: 'colors',\n  CONCEPTS: 'concepts',\n  CONTENDERS: 'contenders',\n  CRIME_EVIDENCE: 'crime-evidence',\n  CRIME_SCENES: 'crime-scenes',\n  CRIME_WEAPONS: 'crime-weapons',\n  DATING_CANDIDATE: 'dating-candidate',\n  DATING_CANDIDATE_BODIES: 'dating-candidate-bodies',\n  DATING_CANDIDATE_HEADS: 'dating-candidate-heads',\n  DIAGRAM_TOPICS: 'diagram-topics',\n  DILEMMAS: 'dilemmas',\n  DRAWING_WORDS: 'drawing-words',\n  EMOTIONS: 'emotions',\n  GROUP_QUESTIONS: 'group-questions',\n  ITEMS_ATTRIBUTES: 'items-attributes',\n  MONSTER_ORIENTATION: 'monster-orientation',\n  MOVIE_REVIEWS: 'movie-reviews',\n  MOVIES: 'movies',\n  NAMING_PROMPTS: 'naming-prompts',\n  OBJECT_FEATURES: 'object-features',\n  QUANTITATIVE_QUESTIONS: 'quantitative-questions',\n  SCENARIOS: 'scenarios',\n  SINGLE_WORDS: 'single-words',\n  SPECTRUMS: 'spectrums',\n  SPY_LOCATIONS: 'spy-locations',\n  SPY_QUESTIONS: 'spy-questions',\n  SUSPECTS: 'suspects',\n  TEENAGE_RUMORS: 'teenage-rumors',\n  TEENAGE_STUDENTS: 'teenage-students',\n  TESTIMONY_QUESTIONS: 'testimony-questions',\n  THEME_WORDS: 'theme-words',\n  THING_PROMPTS: 'thing-prompts',\n  THINGS_QUALITIES: 'things-qualities',\n  TOPICS: 'topics',\n  TREE_WORDS: 'tree-words',\n  TWEETS: 'tweets',\n  WAREHOUSE_BOSS_IDEAS: 'warehouse-boss-ideas',\n  WARNING_SIGNS_DESCRIPTORS: 'warning-signs-descriptors',\n  WARNING_SIGNS_SUBJECTS: 'warning-signs-subjects',\n};\n\nexport const DUAL_LANGUAGE_RESOURCES = [\n  RESOURCE_NAMES.ALIEN_ITEMS,\n  RESOURCE_NAMES.CITY_LOCATIONS,\n  RESOURCE_NAMES.CONTENDERS,\n  RESOURCE_NAMES.CRIME_EVIDENCE,\n  RESOURCE_NAMES.CRIME_SCENES,\n  RESOURCE_NAMES.CRIME_WEAPONS,\n  RESOURCE_NAMES.DATING_CANDIDATE_BODIES,\n  RESOURCE_NAMES.DATING_CANDIDATE_HEADS,\n  RESOURCE_NAMES.ITEMS_ATTRIBUTES,\n  RESOURCE_NAMES.MONSTER_ORIENTATION,\n  RESOURCE_NAMES.OBJECT_FEATURES,\n  RESOURCE_NAMES.SUSPECTS,\n  RESOURCE_NAMES.TEENAGE_RUMORS,\n  RESOURCE_NAMES.TEENAGE_STUDENTS,\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n\nexport const SEARCH_PROPERTY: Record<string, string> = {\n  adjectives: 'text',\n  'arte-ruim-cards': 'text',\n  'arte-ruim-groups': 'theme',\n  'arte-ruim-pairs': 'values',\n  categories: 'text',\n  challenges: 'text',\n  characters: 'text',\n  contenders: '',\n  'crime-tiles': '',\n  'diagram-topics': 'text',\n  'galeria-de-sonhos': 'text',\n  'group-questions': 'text',\n  'linhas-cruzadas': 'text',\n  'naming-prompts': 'text',\n  spectrums: '',\n  'single-words': 'text',\n  'spy-locations': '',\n  'spy-questions': '',\n  'testimony-questions': 'question',\n  'thing-prompts': 'text',\n  topics: 'text',\n};\n\nexport const TOTAL_ITEMS = 2496;\n\nexport const SPRITE_LIBRARY = keyBy(\n  [\n    {\n      key: 'alien-signs',\n      name: 'Alien Signs',\n      prefix: 'sign',\n      quantity: 38,\n      startAt: 0,\n      component: AlienSign,\n    },\n    {\n      key: 'emojis',\n      name: 'Emojis',\n      prefix: 'emoji',\n      quantity: 30,\n      startAt: 1,\n      component: Emoji,\n    },\n    {\n      key: 'glyphs',\n      name: 'Glyphs',\n      prefix: 'glyph',\n      quantity: 365,\n      startAt: 1,\n      component: Glyph,\n    },\n    {\n      key: 'warehouse-goods',\n      name: 'Warehouse Goods',\n      prefix: 'good',\n      quantity: 256,\n      startAt: 1,\n      component: WarehouseGood,\n    },\n  ],\n  'key',\n);\n\n/**\n * Options for the sample size selector\n */\nexport const TAGS_SELECTOR_OPTIONS = [\n  { label: 'Any', value: '' },\n  { label: '= 0', value: 0 },\n  { label: '< 3', value: 3 },\n  { label: '< 5', value: 5 },\n  { label: '< 10', value: 10 },\n];\n\n/**\n * Options for the sample size selector\n */\nexport const SAMPLE_SIZE_OPTIONS = [\n  {\n    label: '9',\n    value: 9,\n  },\n  {\n    label: '15',\n    value: 15,\n  },\n  {\n    label: '30',\n    value: 30,\n  },\n  {\n    label: '50',\n    value: 50,\n  },\n  {\n    label: '100',\n    value: 100,\n  },\n];\n\n/**\n * Options for the card size selector\n */\nexport const CARD_SIZE_OPTIONS = [\n  {\n    label: 'Small',\n    value: 100,\n  },\n  {\n    label: 'Medium',\n    value: 150,\n  },\n  {\n    label: 'Large',\n    value: 200,\n  },\n  {\n    label: 'X-Large',\n    value: 250,\n  },\n];\n\nexport const ATTRIBUTE_VALUE = {\n  OPPOSITE: -10,\n  UNRELATED: -3,\n  UNCLEAR: -1,\n  RELATED: 5,\n  DETERMINISTIC: 10,\n};\n\nexport const VALUE_ATTRIBUTE = invert(ATTRIBUTE_VALUE);\n\nexport const ATTRIBUTE_VALUE_PREFIX = {\n  OPPOSITE: '^',\n  UNRELATED: '!',\n  UNCLEAR: '~',\n  RELATED: '+',\n  DETERMINISTIC: '*',\n};\n\nexport const ATTRIBUTE_GROUP_VALUES = Object.keys(ATTRIBUTE_VALUE).map((key) => ({\n  value: key.toLowerCase(),\n  label: capitalize(key),\n}));\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const PLACEHOLDER_DUAL_LANGUAGE_OBJECT = { en: '', pt: '' };\n\nexport const SEPARATOR = ';;';\n"],"names":["FilterSelect","label","value","onChange","options","placeholder","style","minWidth","disabled","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","className","valuePropName","checked","size","FilterCheckBox","e","target","FilterSegments","layout","length","block","option","arrow","trigger","title","icon","SectionTitle","children","level","rest","TransparentButton","active","activeClass","hoverType","clsx","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","props","DataLoadingWrapper","tip","message","description","type","showIcon","ResourceSelectionFilters","resourceNames","queryParams","addParam","useQueryParams","form","Form","currentResourceName","setCurrentResourceName","useState","get","onFinish","isDualLanguageResource","DUAL_LANGUAGE_RESOURCES","resourceName","language","initialValues","name","LANGUAGES","htmlType","Sprite","id","source","padding","getUrl","useBaseUrl","data","useQuery","queryKey","queryFn","async","response","fetch","text","enabled","paddedWidth","height","display","placeItems","svgContent","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","WarehouseGood","itemId","str","match","numId","Number","parseInt","goodId","sourceId","Math","ceil","getSource","AlienSign","Emoji","emojiId","startsWith","memoize","glyphId","Glyph","Item","library","baseUrl","process","folder","Error","path","join","defaultParams","searchParams","setSearchParams","useSearchParams","key","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","Object","entries","forEach","removeParam","is","useEffectOnce","has","useResourceState","availableResources","includes","url","res","body","json","Boolean","Text","Typography","RESOURCE_NAMES","used","setUsed","unused","setUnused","duplicated","setDuplicated","themes","setThemes","cards","groups","loadingLevel4","errorLevel4","useEffect","result","values","theme","sort","group","keys","entryId","card","parseData","subtitle","hasSider","cols","rows","readOnly","JSON","stringify","header","bordered","dataSource","renderItem","item","mark","SEARCH_THRESHOLD","ADJECTIVES","ALIEN_ITEMS","ARTE_RUIM_CARDS","ARTE_RUIM_GROUPS","ARTE_RUIM_PAIRS","CATEGORIES","CHALLENGES","CHARACTERS","CHOICES","CITY_LOCATIONS","COLORS","CONCEPTS","CONTENDERS","CRIME_EVIDENCE","CRIME_SCENES","CRIME_WEAPONS","DATING_CANDIDATE","DATING_CANDIDATE_BODIES","DATING_CANDIDATE_HEADS","DIAGRAM_TOPICS","DILEMMAS","DRAWING_WORDS","EMOTIONS","GROUP_QUESTIONS","ITEMS_ATTRIBUTES","MONSTER_ORIENTATION","MOVIE_REVIEWS","MOVIES","NAMING_PROMPTS","OBJECT_FEATURES","QUANTITATIVE_QUESTIONS","SCENARIOS","SINGLE_WORDS","SPECTRUMS","SPY_LOCATIONS","SPY_QUESTIONS","SUSPECTS","TEENAGE_RUMORS","TEENAGE_STUDENTS","TESTIMONY_QUESTIONS","THEME_WORDS","THING_PROMPTS","THINGS_QUALITIES","TOPICS","TREE_WORDS","TWEETS","WAREHOUSE_BOSS_IDEAS","WARNING_SIGNS_DESCRIPTORS","WARNING_SIGNS_SUBJECTS","DEFAULT_LANGUAGE","SEARCH_PROPERTY","adjectives","categories","challenges","characters","contenders","spectrums","topics","SPRITE_LIBRARY","keyBy","prefix","quantity","startAt","component","TAGS_SELECTOR_OPTIONS","SAMPLE_SIZE_OPTIONS","CARD_SIZE_OPTIONS","ATTRIBUTE_VALUE","OPPOSITE","UNRELATED","UNCLEAR","RELATED","DETERMINISTIC","ATTRIBUTE_VALUE_PREFIX","invert","ATTRIBUTE_GROUP_VALUES","toLowerCase","capitalize","PLACEHOLDER_DUAL_LANGUAGE_OBJECT","en","pt","SEPARATOR"],"sourceRoot":""}