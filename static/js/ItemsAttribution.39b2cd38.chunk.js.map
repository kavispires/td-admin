{"version":3,"file":"static/js/ItemsAttribution.39b2cd38.chunk.js","mappings":"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","sources":["components/Common/LanguageFlag.tsx","components/Common/SaveButton.tsx","components/Items/ItemBuildingBlocks.tsx","components/Items/ItemsTypeahead.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useGetFirebaseDoc.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","hooks/useItemQueryParams.ts","hooks/useItemsAttribution.ts","context/ItemsAttributeValuesContext.tsx","components/Items/Attributes/AttributionValueButtons.tsx","components/Items/Attributes/ItemAttributeDescription.tsx","components/Common/Stat.tsx","components/Items/Attributes/ItemAttributeStats.tsx","components/Items/Attributes/ItemAttributionCard.tsx","components/Items/Attributes/ItemAttributionNavigation.tsx","components/Items/Attributes/ItemSamplerCard.tsx","hooks/useItemSampler.ts","components/Common/GoToTopButton.tsx","components/Items/Attributes/ItemGroupingCard.tsx","hooks/useItemGrouping.ts","components/Items/Attributes/ItemComparatorCard.tsx","hooks/useItemsComparator.ts","components/Items/Attributes/DailyAlienSimulator.tsx","components/Items/Attributes/ItemSimulation.tsx","components/Items/Attributes/ItemStats.tsx","components/Items/Attributes/ItemAttributionPageContent.tsx","components/Items/Attributes/ItemAttributionFiltersSections.tsx","components/Items/Attributes/ItemAttributionFilters.tsx","pages/Items/ItemsAttribution.tsx"],"sourcesContent":["function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { useGlobalContext } from 'context/GlobalContext';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  const { togglePendingSave } = useGlobalContext();\n\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      togglePendingSave(true);\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      togglePendingSave(false);\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { Button, Input } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { Item as ItemT } from 'types';\n\nimport { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype ItemBlockProps = {\n  item: ItemT;\n};\n\ntype ItemBlocksAdditionalProps = {\n  className?: string;\n  width: number;\n  language: 'en' | 'pt';\n  to: string;\n};\n\nexport function ItemSprite({\n  item,\n  width,\n  className,\n}: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'width' | 'className'>) {\n  return (\n    <Item id={item.id} width={width} title={`${item.name.en} | ${item.name.pt}`} className={className} />\n  );\n}\n\nexport function ItemId({ item }: ItemBlockProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={item.nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={item.id}\n        readOnly\n        style={{ width: '8ch' }}\n        onClick={() => copyToClipboard(item.id)}\n      />\n    </span>\n  );\n}\n\nexport function ItemName({ item, language }: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'language'>) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Name in ${language.toUpperCase()}`}\n      variant=\"borderless\"\n      size=\"small\"\n      value={item.name[language]}\n      readOnly\n    />\n  );\n}\n\nexport function ItemNsfw({ item }: ItemBlockProps) {\n  return item.nsfw ? <FireFilled style={{ color: 'hotpink' }} /> : <></>;\n}\n\nexport function ItemGoTo({ item }: ItemBlockProps) {\n  const [, setSearchParams] = useSearchParams();\n  const onGoTo = () => {\n    setSearchParams({ itemId: item.id, view: 'classifier' });\n  };\n\n  return (\n    <span>\n      <Button size=\"small\" shape=\"round\" onClick={onGoTo}>\n        Go to\n      </Button>\n    </span>\n  );\n}\n","import { AutoComplete, AutoCompleteProps, Input } from 'antd';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useDebounce } from 'react-use';\nimport { Item } from 'types';\n\ntype ItemsTypeaheadProps = {\n  items?: Dictionary<Item>;\n  isPending?: boolean;\n  onFinish: (id: string) => void;\n} & Omit<AutoCompleteProps, 'options'>;\n\nexport function ItemsTypeahead({\n  items,\n  isPending,\n  style,\n  size,\n  placeholder,\n  allowClear,\n  onFinish,\n  ...rest\n}: ItemsTypeaheadProps) {\n  const tdrItemsQuery = useTDResource<Item>('items', !Boolean(items) && !isPending);\n\n  const { namesDict, options } = useMemo(() => {\n    console.log('Recomputing item names typeahead...');\n\n    const namesDict = Object.values(items ?? tdrItemsQuery.data ?? {}).reduce(\n      (acc: Dictionary<string>, entry) => {\n        const nameEn = `${entry.name.en} (${entry.id})`;\n        const namePt = `${entry.name.pt} (${entry.id})`;\n        acc[nameEn] = entry.id;\n        acc[namePt] = entry.id;\n        // Other names\n        if (entry.aliasesEn) {\n          entry.aliasesEn.forEach((alias) => {\n            acc[`${alias} (${entry.id})*`] = entry.id;\n          });\n        }\n        if (entry.aliasesPt) {\n          entry.aliasesPt.forEach((alias) => {\n            acc[`${alias} (${entry.id})*`] = entry.id;\n          });\n        }\n\n        return acc;\n      },\n      {}\n    );\n\n    const options = orderBy(Object.keys(namesDict), [(name) => name.toLowerCase()]).map((name) => ({\n      value: name,\n    }));\n\n    return { namesDict, options };\n  }, [items, isPending]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [filteredOptions, setFilteredOptions] = useState<{ value: string }[]>([]);\n  const [typedText, setTypedText] = useState('');\n\n  useDebounce(\n    () => {\n      if (typedText) {\n        handleSearch(typedText);\n      }\n    },\n    500,\n    [typedText]\n  );\n\n  const handleSearch = (searchText: string) => {\n    if (!searchText) {\n      setFilteredOptions([]);\n      return;\n    }\n\n    const SEARCH = searchText.trim().toUpperCase();\n\n    const filtered = options.filter((option) =>\n      String(option?.value ?? '')\n        .toUpperCase()\n        .includes(SEARCH)\n    );\n\n    const sorted = orderBy(filtered, [\n      (option) => {\n        const value = String(option?.value ?? '').toUpperCase();\n\n        // Exact match\n        if (value === SEARCH) return 0;\n\n        // Full ID match within parentheses\n        const idMatch = value.match(/\\((.*?)\\)/);\n        if (idMatch && idMatch[1] === SEARCH) return 1;\n\n        // Partial match at the beginning\n        const index = value.indexOf(SEARCH);\n        if (index === 0) return 2;\n\n        // Partial match elsewhere\n        if (index > 0) return 3;\n\n        // No match\n        return 4;\n      },\n    ]);\n\n    setFilteredOptions(sorted);\n  };\n\n  const handlePressEnter = () => {\n    if (filteredOptions.length > 0) {\n      const key = filteredOptions[0].value;\n      if (namesDict[key] !== undefined) {\n        onFinish(namesDict[key]);\n      }\n    }\n  };\n\n  const onSelect = (key: any) => {\n    if (namesDict[key] !== undefined) {\n      onFinish(namesDict[key]);\n    }\n  };\n\n  return (\n    <AutoComplete\n      options={filteredOptions}\n      style={{ width: 250, ...style }}\n      allowClear={allowClear ?? true}\n      placeholder={placeholder ?? 'Search by name or id...'}\n      filterOption={(inputValue, option) =>\n        String(option?.value ?? '')\n          .toUpperCase()\n          .indexOf(inputValue?.toUpperCase()) !== -1\n      }\n      onSearch={setTypedText}\n      notFoundContent={typedText.length > 0 ? 'No items found' : 'Type to search...'}\n      onSelect={onSelect}\n      {...rest}\n    >\n      <Input onPressEnter={handlePressEnter} />\n    </AutoComplete>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { useSearchParams } from 'react-router-dom';\n\nexport function useItemQueryParams() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addQueryParam = (key: string, value: string) => {\n    searchParams.set(key, `${value}`);\n    setSearchParams(searchParams);\n  };\n\n  const removeQueryParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  return {\n    view: searchParams.get('view') ?? 'classifier',\n    setView: (value: string) => setSearchParams({ view: value }),\n    addQueryParam,\n    removeQueryParam,\n    searchParams,\n  };\n}\n","import { App } from 'antd';\nimport { isEmpty, mapKeys, merge, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { deserializeFirebaseData, getNewItem, getNewItemAttributeValues, serializeFirebaseData } from 'utils';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\n/**\n * This is to avoid new items being generated and unused just for the sake of placeholders.\n */\nconst globalNewItemsAttributesValues: Dictionary<ItemAtributesValues> = {};\n\nexport function useItemsAttribution() {\n  const { notification, message } = App.useApp();\n  const queryClient = useQueryClient();\n\n  // Gather basic item data\n  const tdrItemsQuery = useTDResource<Item>('items');\n  const tdrAttributesQuery = useTDResource<ItemAttribute>('items-attributes');\n  const tdrItemsAttributesValuesQuery = useTDResource<ItemAtributesValues>('items-attribute-values');\n  const firebaseItemsAttributeValuesQuery = useGetFirebaseDoc<\n    Dictionary<string>,\n    Dictionary<ItemAtributesValues>\n  >('tdr', 'itemsAttributeValues', {\n    select: deserializeFirebaseData,\n  });\n\n  const [modifiedAttributeValues, setModifiedAttributeValues] = useState<Dictionary<ItemAtributesValues>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', 'itemsAttributeValues', {\n    onSuccess: () => {\n      notification.success({\n        message: 'itemsAttributeValues updated',\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', 'itemsAttributeValues'],\n      });\n      setModifiedAttributeValues({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: 'itemsAttributeValues update failed',\n        description: error.message,\n      });\n    },\n  });\n\n  const savedItemsAttributeValues = useMemo(() => {\n    return {\n      ...(tdrItemsAttributesValuesQuery.data ?? {}),\n      ...(firebaseItemsAttributeValuesQuery.data ?? {}),\n    };\n  }, [tdrItemsAttributesValuesQuery.data, firebaseItemsAttributeValuesQuery.data]);\n\n  const isDirty = !isEmpty(modifiedAttributeValues);\n  const addAttributesToUpdate = (id: string, item: ItemAtributesValues) => {\n    setModifiedAttributeValues((prev) => ({ ...prev, [id]: { ...item, updatedAt: Date.now() } }));\n  };\n  const addMultipleAttributesToUpdate = (itemsArr: ItemAtributesValues[]) => {\n    setModifiedAttributeValues((prev) => ({\n      ...prev,\n      ...mapKeys(\n        itemsArr.map((item) => ({ ...item, updatedAt: Date.now() })),\n        'id'\n      ),\n    }));\n  };\n\n  const firebaseData = firebaseItemsAttributeValuesQuery.data;\n\n  const save = () => {\n    mutation.mutate(serializeFirebaseData({ ...firebaseData, ...modifiedAttributeValues }));\n  };\n\n  // Filter items that have the alien deck only\n  const availableItemIds = useMemo(() => {\n    const items = tdrItemsQuery.data ?? {};\n    return orderBy(\n      Object.keys(items).filter((id) => {\n        return (items[id]?.decks ?? []).includes('alien');\n      }),\n      (id) => Number(id),\n      'asc'\n    );\n  }, [tdrItemsQuery.data]);\n\n  const getItem = (id: string) => {\n    if ((tdrItemsQuery.data ?? {})?.[id]) {\n      return tdrItemsQuery.data[id];\n    }\n    if (id) {\n      message.info(`Item ${id} not found in TDR. Creating a new item...`);\n    }\n    return getNewItem({ id });\n  };\n\n  const getItemAttributeValues = (id: string) => {\n    const storedValue = savedItemsAttributeValues?.[id] ?? {};\n    const modifiedValue = modifiedAttributeValues[id] ?? {};\n\n    if (isEmpty(storedValue) && isEmpty(modifiedValue)) {\n      globalNewItemsAttributesValues[id] = getNewItemAttributeValues({ id });\n      return globalNewItemsAttributesValues[id];\n    }\n\n    return merge(globalNewItemsAttributesValues?.[id] ?? {}, storedValue, modifiedValue);\n  };\n\n  return {\n    availableItemIds,\n    getItem,\n    getItemAttributeValues,\n    attributes: tdrAttributesQuery.data ?? {},\n    isLoading:\n      tdrItemsQuery.isLoading ||\n      tdrAttributesQuery.isLoading ||\n      tdrItemsAttributesValuesQuery.isLoading ||\n      firebaseItemsAttributeValuesQuery.isLoading,\n    error:\n      tdrItemsQuery.error ||\n      tdrAttributesQuery.error ||\n      tdrItemsAttributesValuesQuery.error ||\n      firebaseItemsAttributeValuesQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addAttributesToUpdate,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate: modifiedAttributeValues,\n    isDirty,\n  };\n}\n","import { App } from 'antd';\nimport { useItemsAttribution } from 'hooks/useItemsAttribution';\nimport { isEmpty, orderBy, random } from 'lodash';\nimport { ReactNode, useContext, createContext, useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { getNewItem, getNewItemAttributeValues, sortJsonKeys } from 'utils';\n\nexport type ItemsAttributeValuesContextType = {\n  getItem: (itemId: string) => Item;\n  getItemAttributeValues: (itemId: string) => ItemAtributesValues;\n  isLoading: boolean;\n  error: ResponseError;\n  hasResponseData: boolean;\n  isDirty: boolean;\n  itemAttributeValues: ItemAtributesValues;\n  prepareItemsAttributesFileForDownload: () => Dictionary<ItemAtributesValues>;\n  jumpToItem: (direction: string, itemId?: string) => void;\n  activeItem: Item;\n  onAttributeChange: (attributeId: string, value: number) => void;\n  isSaving: boolean;\n  save: () => void;\n  attributesList: ItemAttribute[];\n  availableItemIds: string[];\n  addAttributesToUpdate: (itemId: string, attributes: ItemAtributesValues) => void;\n  addMultipleAttributesToUpdate: (itemsArr: ItemAtributesValues[]) => void;\n  attributes: Dictionary<ItemAttribute>;\n  attributesToUpdate: Dictionary<ItemAtributesValues>;\n};\n\nconst ItemsAttributeValuesContext = createContext<ItemsAttributeValuesContextType>({\n  getItem: () => getNewItem(),\n  getItemAttributeValues: () => getNewItemAttributeValues(),\n  isLoading: true,\n  error: null,\n  hasResponseData: false,\n  isDirty: false,\n  jumpToItem: () => {},\n  activeItem: getNewItem(),\n  itemAttributeValues: getNewItemAttributeValues(),\n  onAttributeChange: () => {},\n  isSaving: false,\n  save: () => {},\n  attributesList: [],\n  availableItemIds: [],\n  addAttributesToUpdate: () => {},\n  addMultipleAttributesToUpdate: () => {},\n  prepareItemsAttributesFileForDownload: () => ({}),\n  attributes: {},\n  attributesToUpdate: {},\n});\n\ntype ItemsAttributeValuesProviderProps = {\n  children: ReactNode;\n};\n\nexport const ItemsAttributeValuesProvider = ({ children }: ItemsAttributeValuesProviderProps) => {\n  const {\n    getItem,\n    getItemAttributeValues,\n    availableItemIds,\n    isLoading,\n    error,\n    isSaving,\n    save,\n    addAttributesToUpdate,\n    isDirty,\n    attributes,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate,\n  } = useItemsAttribution();\n  const { message } = App.useApp();\n\n  const [itemIndex, setItemIndex] = useState(random(0, availableItemIds.length - 1));\n  const activeItem = getItem(availableItemIds[itemIndex]);\n  const itemAttributeValues = getItemAttributeValues(activeItem.id);\n\n  const jumpToItem = (direction: string, itemId?: string) => {\n    if (direction === 'next') {\n      setItemIndex((prev) => (prev + 1) % availableItemIds.length);\n    }\n    if (direction === 'previous') {\n      setItemIndex((prev) => (prev - 1 + availableItemIds.length) % availableItemIds.length);\n    }\n    if (direction === 'random') {\n      setItemIndex(random(0, availableItemIds.length - 1));\n    }\n\n    if (direction === 'first') {\n      setItemIndex(0);\n    }\n    if (direction === 'last') {\n      setItemIndex(availableItemIds.length - 1);\n    }\n    if (direction === 'next10') {\n      setItemIndex((prev) => (prev + 10) % availableItemIds.length);\n    }\n    if (direction === 'previous10') {\n      setItemIndex((prev) => (prev - 10 + availableItemIds.length) % availableItemIds.length);\n    }\n\n    if (direction === 'goTo' && itemId !== undefined) {\n      const index = availableItemIds.indexOf(itemId);\n      if (index !== -1) {\n        setItemIndex(index);\n      } else {\n        message.error(`Item ${itemId} is not available for attribution.`);\n      }\n    }\n  };\n\n  const attributesList = useMemo(() => orderBy(Object.values(attributes), 'name.en', 'asc'), [attributes]);\n\n  const onAttributeChange = (attributeId: string, value: number) => {\n    addAttributesToUpdate(activeItem.id, {\n      ...itemAttributeValues,\n      attributes: {\n        ...itemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const prepareItemsAttributesFileForDownload = () => {\n    return sortJsonKeys(\n      availableItemIds.reduce((acc: Dictionary<ItemAtributesValues>, itemId) => {\n        // Get items and only the ones with attributes\n        const item = getItemAttributeValues(itemId);\n\n        if (isEmpty(item.attributes)) {\n          return acc;\n        }\n\n        // Assess item completion\n        if (Object.keys(item.attributes).length === attributesList.length) {\n          item.complete = true;\n        } else {\n          delete item.complete;\n        }\n\n        acc[item.id] = item;\n\n        return acc;\n      }, {})\n    );\n  };\n\n  return (\n    <ItemsAttributeValuesContext.Provider\n      value={{\n        getItem,\n        getItemAttributeValues,\n        availableItemIds,\n        isLoading,\n        error,\n        hasResponseData: availableItemIds.length > 0 && !isEmpty(attributes),\n        isDirty,\n        itemAttributeValues,\n        jumpToItem,\n        activeItem,\n        onAttributeChange,\n        isSaving,\n        save,\n        attributes,\n        attributesList,\n        addAttributesToUpdate,\n        addMultipleAttributesToUpdate,\n        prepareItemsAttributesFileForDownload,\n        attributesToUpdate,\n      }}\n    >\n      {children}\n    </ItemsAttributeValuesContext.Provider>\n  );\n};\n\nexport const useItemsAttributeValuesContext = () => useContext(ItemsAttributeValuesContext);\n","import { Radio, Tooltip } from 'antd';\nimport { ItemAttribute } from 'types';\n\nimport { CheckCircleFilled, QuestionCircleOutlined } from '@ant-design/icons';\n\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nconst attributeOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC },\n];\n\nconst attributeLimitedOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC, disabled: true },\n];\n\ntype AttributionValueButtonsProps = {\n  attribute: ItemAttribute;\n  value?: number;\n  onChange: (attributeId: string, value: number) => void;\n  onlyButtons?: boolean;\n};\n\nexport function AttributionValueButtons({\n  attribute,\n  value,\n  onChange,\n  onlyButtons,\n}: AttributionValueButtonsProps) {\n  if (!attribute) return <></>;\n\n  if (onlyButtons) {\n    return (\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n    );\n  }\n\n  return (\n    <div key={attribute.id} className=\"attribute-button-container__row\">\n      <span className=\"attribute-button-container__label\">\n        {attribute.name.en}{' '}\n        <Tooltip title={attribute.description.en}>\n          <QuestionCircleOutlined />\n        </Tooltip>\n      </span>\n\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n\n      <span>\n        <CheckCircleFilled style={{ color: value && value > 7 ? 'green' : 'transparent' }} />\n      </span>\n    </div>\n  );\n}\n","import { Flex } from 'antd';\nimport clsx from 'clsx';\nimport { FilterSwitch } from 'components/Common';\nimport { AlienSign } from 'components/Sprites';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { filterMessage, getItemAttributePriorityResponse, parseAttribute } from 'utils';\n\ntype ItemAttributeDescriptionProps = {\n  itemAttributeValues: ItemAtributesValues;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nexport function ItemAttributeDescription({ itemAttributeValues, attributes }: ItemAttributeDescriptionProps) {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const filteredResponse = useMemo(\n    () =>\n      filterMessage(\n        getItemAttributePriorityResponse(itemAttributeValues, attributes),\n        showUnclear,\n        showUnrelated\n      ),\n    [itemAttributeValues, attributes, showUnclear, showUnrelated]\n  );\n\n  const Component = searchParams.get('signs') === 'true' ? AttributeSprite : AttributeText;\n\n  return (\n    <Flex gap={6} vertical>\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Alien Sings\"\n        value={searchParams.get('signs') === 'true'}\n        onChange={(v) => addQueryParam('signs', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <Flex gap={6} wrap=\"wrap\" className=\"item-attribute-value-statement\">\n        {filteredResponse.map((keyVariant, index, arr) => (\n          <Component\n            key={keyVariant}\n            keyVariant={keyVariant}\n            attributes={attributes}\n            firstElement={index === 0}\n            lastElement={index === arr.length - 1}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  );\n}\n\ntype AttributeSpriteProps = {\n  keyVariant: string;\n  attributes: Dictionary<ItemAttribute>;\n  firstElement: boolean;\n  lastElement: boolean;\n};\n\nexport function AttributeSprite({\n  keyVariant,\n  attributes,\n  withText,\n}: AttributeSpriteProps & { withText?: boolean }) {\n  const { key, className, text } = parseAttribute(keyVariant);\n\n  return (\n    <Flex vertical align=\"center\">\n      <AlienSign\n        width={50}\n        id={attributes[key].spriteId}\n        className={clsx('item-attribute-alien-sign', `item-attribute-alien-sign--${className}`)}\n      />\n      {withText && (\n        <Flex\n          wrap=\"wrap\"\n          justify=\"center\"\n          align=\"center\"\n          style={{ maxWidth: 50, textAlign: 'center', wordBreak: 'break-word' }}\n        >\n          {text} {attributes[key].name.en.toLowerCase()}\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nfunction AttributeText({ keyVariant, attributes, firstElement, lastElement }: AttributeSpriteProps) {\n  const { key, text } = parseAttribute(keyVariant);\n\n  const prefix = firstElement ? \"It's \" : '';\n  const suffix = lastElement ? '.' : ', ';\n\n  return (\n    <>\n      {prefix}\n      {text} {attributes[key].name.en.toLowerCase()}\n      {suffix}\n    </>\n  );\n}\n","import { Tag, Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StatProps = {\n  label: ReactNode;\n  children: ReactNode;\n};\n\nexport function Stat({ label, children }: StatProps) {\n  return (\n    <Typography.Text>\n      {label} <Tag>{children}</Tag>\n    </Typography.Text>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\nimport { Flex, Progress, Typography } from 'antd';\nimport { Stat } from 'components/Common/Stat';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\ntype ItemAttributeStatsProps = {\n  attributesList: ItemAttribute[];\n  itemAttributeValues: ItemAtributesValues;\n};\n\nexport function ItemAttributeStats({ attributesList, itemAttributeValues }: ItemAttributeStatsProps) {\n  const { completion, isDeterministic, value, isOpposing, relevancy } = useMemo(() => {\n    const total = attributesList.length;\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n    const completion = Math.floor((completed / total) * 100);\n\n    let isDeterministic = false;\n    let isOpposing = false;\n    let unclearCount = 0;\n    const value = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n      if (v <= 0) {\n        if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n          unclearCount += 1;\n        }\n        if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n          isOpposing = true;\n          acc += v / 2;\n        }\n        return acc;\n      }\n      if (v === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        isDeterministic = true;\n      }\n\n      return acc + v;\n    }, 0);\n\n    const relevancy = Math.floor(((completed - unclearCount) / total) * 100);\n\n    return { completion, isDeterministic, value, isOpposing, relevancy };\n  }, [attributesList, itemAttributeValues.attributes]);\n\n  return (\n    <div>\n      <Typography.Text strong>Completion</Typography.Text>\n      <Progress percent={completion} size=\"small\" />\n      <Typography.Text strong>Stats</Typography.Text>\n      <Flex vertical>\n        <Stat label=\"Deterministic\">\n          {isDeterministic ? (\n            <CheckCircleFilled style={{ color: 'green' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red' }} />\n          )}\n        </Stat>\n        <Stat label=\"Opposing\">\n          {isOpposing ? (\n            <CheckCircleFilled style={{ color: 'CornflowerBlue' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'grey' }} />\n          )}\n        </Stat>\n        <Stat label=\"Value\">{value}</Stat>\n        <Stat label=\"Reliability\">{relevancy}%</Stat>\n      </Flex>\n    </div>\n  );\n}\n","import { Affix, Button, Card, Divider, Flex, Space, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useEffect, useMemo } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemAttributeDescription } from './ItemAttributeDescription';\nimport { ItemAttributeStats } from './ItemAttributeStats';\nimport { ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\n\nexport function ItemAttributionCard() {\n  const { activeItem, attributesList, itemAttributeValues, onAttributeChange, jumpToItem, attributes } =\n    useItemsAttributeValuesContext();\n  const { searchParams, removeQueryParam } = useItemQueryParams();\n  const queryParamsItemId = searchParams.get('itemId');\n\n  useEffect(() => {\n    if (queryParamsItemId) {\n      removeQueryParam('itemId');\n      jumpToItem('goTo', queryParamsItemId);\n    }\n  }, [queryParamsItemId, jumpToItem, removeQueryParam]);\n\n  const showOnlyUnset = searchParams.get('scope') === 'unset';\n  const filteredAttributesList = useMemo(\n    () =>\n      showOnlyUnset\n        ? attributesList.filter((attribute) => !itemAttributeValues.attributes[attribute.id])\n        : attributesList,\n    [showOnlyUnset, activeItem.id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (!activeItem)\n    return (\n      <Card>\n        <Typography.Text type=\"secondary\">\n          No item selected.{' '}\n          <Button size=\"small\" type=\"primary\" onClick={() => jumpToItem('random')}>\n            Random Item\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n\n  return (\n    <Card>\n      <div className=\"item-attribution-card\" key={`${activeItem.id}`}>\n        <Affix offsetTop={120} className=\"item-attribution-card__item\">\n          <Flex vertical gap={6}>\n            <ItemSprite item={activeItem} width={150} />\n            <ItemId item={activeItem} />\n            <ItemName item={activeItem} language=\"en\" />\n            <ItemName item={activeItem} language=\"pt\" />\n\n            <Divider className=\"my-2\" />\n            <ItemAttributeStats attributesList={attributesList} itemAttributeValues={itemAttributeValues} />\n            <Divider className=\"my-2\" />\n            <Typography.Text type=\"secondary\">\n              <ItemAttributeDescription itemAttributeValues={itemAttributeValues} attributes={attributes} />\n            </Typography.Text>\n          </Flex>\n        </Affix>\n\n        <Space size=\"small\" direction=\"vertical\" className=\"my-4 attribute-button-container\" wrap>\n          {filteredAttributesList.map((attribute, index) => (\n            <AttributionValueButtons\n              key={attribute.id}\n              attribute={attribute}\n              value={itemAttributeValues.attributes[attribute.id]}\n              onChange={onAttributeChange}\n            />\n          ))}\n        </Space>\n      </div>\n    </Card>\n  );\n}\n","import { Button, Popover } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\n\nimport {\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  LeftOutlined,\n  RightOutlined,\n  VerticalLeftOutlined,\n  VerticalRightOutlined,\n} from '@ant-design/icons';\n\nimport { ItemsTypeahead } from '../ItemsTypeahead';\n\nexport function ItemAttributionNavigation() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return (\n    <Button.Group className=\"my-4\">\n      <Button onClick={() => jumpToItem('first')} icon={<VerticalRightOutlined />}>\n        First\n      </Button>\n      <Button onClick={() => jumpToItem('previous10')} icon={<DoubleLeftOutlined />}>\n        Previous 10\n      </Button>\n      <Button onClick={() => jumpToItem('previous')} icon={<LeftOutlined />}>\n        Previous\n      </Button>\n      <Button onClick={() => jumpToItem('next')}>\n        Next <RightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('next10')}>\n        Next 10 <DoubleRightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('last')}>\n        Last <VerticalLeftOutlined />\n      </Button>\n      <Popover content={<GoToItemPopOverContent />} title=\"Title\">\n        <Button>Go To</Button>\n      </Popover>\n    </Button.Group>\n  );\n}\n\nfunction GoToItemPopOverContent() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return <ItemsTypeahead isPending={false} onFinish={(itemId) => jumpToItem('goTo', itemId)} />;\n}\n","import { Button, Card, Divider, Empty, Flex, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemSampler } from 'hooks/useItemSampler';\nimport { isEmpty } from 'lodash';\nimport { Fragment } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\n\nexport function ItemSamplerCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { sampleIds, attribute, onGetSample, updateAttributeValue, itemsLeftForAttribute } = useItemSampler();\n\n  if (isEmpty(sampleIds) && isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">\n          No sample has been generated. Tweak options and{' '}\n          <Button size=\"small\" type=\"primary\" onClick={onGetSample}>\n            Get Sample\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n  }\n\n  const sample = sampleIds.map((itemId) => ({\n    itemAttributes: getItemAttributeValues(itemId),\n    item: getItem(itemId),\n  }));\n\n  const unsetItems = sample.filter(({ itemAttributes }) => !itemAttributes.attributes[attribute!.id]);\n\n  const onMarkRestAsUnrelated = () => {\n    unsetItems.forEach(({ item }) => {\n      updateAttributeValue(item.id, attribute!.id, -3);\n    });\n  };\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} - {attribute?.description.en} ({itemsLeftForAttribute} items left)\n        </Typography.Text>\n      }\n      actions={[\n        <Button onClick={onMarkRestAsUnrelated} danger disabled={unsetItems.length === 0}>\n          Mark rest as unrelated\n        </Button>,\n        <Button type=\"primary\" ghost onClick={onGetSample}>\n          Get New Sample\n        </Button>,\n      ]}\n      extra={\n        <Button type=\"primary\" size=\"small\" onClick={onGetSample}>\n          Get New Sample\n        </Button>\n      }\n    >\n      <Flex vertical gap={6}>\n        {sample.length === 0 && (\n          <Empty\n            description=\"No unset items found for this attribute.\"\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        )}\n        {sample.map(({ item, itemAttributes }) => {\n          return (\n            <Fragment key={`${item.id}-${itemAttributes.updatedAt}`}>\n              <Flex gap={6}>\n                <ItemSprite item={item} width={75} />\n                <Flex vertical gap={6}>\n                  <Flex gap={6}>\n                    <ItemId item={item} />\n                    <ItemGoTo item={item} />\n                  </Flex>\n                  <ItemName item={item} language=\"en\" />\n                  <ItemName item={item} language=\"pt\" />\n                </Flex>\n                <AttributionValueButtons\n                  attribute={attribute!}\n                  value={itemAttributes.attributes[attribute!.id]}\n                  onChange={(attributeId: string, value: number) =>\n                    updateAttributeValue(item.id, attributeId, value)\n                  }\n                />\n              </Flex>\n              <Divider className=\"my-1\" />\n            </Fragment>\n          );\n        })}\n      </Flex>\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { sample as lodashSample, shuffle } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { ItemAttribute } from 'types';\n\nimport { useItemQueryParams } from './useItemQueryParams';\n\nexport function useItemSampler() {\n  const { attributesList, availableItemIds, addAttributesToUpdate, getItemAttributeValues } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n\n  const [sampleIds, setSampleIds] = useState<string[]>([]);\n  const [attribute, setAttribute] = useState<ItemAttribute>();\n\n  const getSample = () => {\n    const attributeKey = searchParams.get('attribute') ?? lodashSample(attributesList)?.id ?? 'ali';\n    const selectedAttribute =\n      attributesList.find((a) => a.id === attributeKey) ?? lodashSample(attributesList);\n    const sampleSize = Number(searchParams.get('size')) || 9;\n\n    const selected: string[] = [];\n    const options = shuffle(availableItemIds);\n\n    for (let i = 0; i < options.length; i++) {\n      if (selected.length === sampleSize) break;\n\n      const itemId = options[i];\n      const currentAttributeValues = getItemAttributeValues(itemId).attributes;\n\n      if (!currentAttributeValues[attributeKey]) {\n        selected.push(itemId);\n      }\n    }\n\n    return {\n      selectedAttribute,\n      selected,\n    };\n  };\n\n  // Create sample\n  const onGetSample = () => {\n    let tempSample = getSample();\n    let attempts = 0;\n    while (tempSample.selected.length === 0 && attempts < 30) {\n      tempSample = getSample();\n      attempts++;\n    }\n\n    setAttribute(tempSample.selectedAttribute);\n    setSampleIds(tempSample.selected);\n  };\n\n  const itemsLeftForAttribute = useMemo(() => {\n    if (!attribute) return 0;\n\n    return availableItemIds.filter((id) => !getItemAttributeValues(id).attributes[attribute?.id]).length;\n  }, [attribute, availableItemIds]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  return {\n    sampleIds,\n    attribute,\n    itemsLeftForAttribute,\n    onGetSample,\n    updateAttributeValue,\n  };\n}\n","import { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport { useEffect, useState } from 'react';\n\nexport function GoToTopButton(props: ButtonProps) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const handleScroll = () => {\n    setIsVisible(window.pageYOffset > 300);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <Button\n      className={`go-to-top-button ${isVisible ? 'visible' : ''}`}\n      onClick={scrollToTop}\n      icon={<VerticalAlignTopOutlined />}\n      {...props}\n    >\n      Go to Top\n    </Button>\n  );\n}\n","import { Button, Card, Empty, Flex, Pagination, Popconfirm, Select, Typography } from 'antd';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemGrouping } from 'hooks/useItemGrouping';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMedia } from 'react-use';\n\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\nimport { AttributionValueButtons } from './AttributionValueButtons';\n\nconst getStatSentence = (stats: Record<string, number>, scope: string | null) => {\n  if (scope === 'unset' || !scope) {\n    return `${100 - stats.percent}% done, ${stats.group} left`;\n  }\n\n  return `${stats.percent}%  - ${stats.group} items`;\n};\n\nexport function ItemGroupingCard() {\n  const { getItem, getItemAttributeValues, attributesList } = useItemsAttributeValuesContext();\n\n  const { attribute, pageIds, updateAttributeValue, updatePageItemsAsUnrelated, pagination, stats, sorting } =\n    useItemGrouping();\n  const { searchParams } = useItemQueryParams();\n  const isNarrow = useMedia('(max-width: 1024px)');\n\n  if (isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">No group attribute has been selected.</Typography.Text>\n      </Card>\n    );\n  }\n\n  const paginationComponent = (\n    <Pagination\n      key=\"pagination\"\n      onChange={pagination.onChange}\n      current={pagination.current}\n      total={pagination.total}\n      pageSizeOptions={pagination.pageSizeOptions}\n      pageSize={pagination.pageSize}\n      onShowSizeChange={pagination.onShowSizeChange}\n    />\n  );\n\n  const sortingComponent = (\n    <Flex align=\"center\">\n      <Typography.Text className=\"mr-2\">Sort by</Typography.Text>\n      <Select style={{ width: 120 }} value={sorting.sortBy} onChange={(v) => sorting.setSortBy(v)}>\n        <Select.Option value={null}>Last Updated</Select.Option>\n        {attributesList.map((a) => (\n          <Select.Option key={a.id} value={a.id}>\n            {a.name.en}\n          </Select.Option>\n        ))}\n      </Select>\n    </Flex>\n  );\n\n  const isUnsetSet = searchParams.get('scope') === 'unset' || !searchParams.get('scope');\n  const unrelateButton = isUnsetSet && (\n    <Popconfirm\n      key=\"unrelate-button\"\n      title={`Are you sure everything is unrelated to ${attribute.name.en}?`}\n      onConfirm={updatePageItemsAsUnrelated}\n    >\n      <Button type=\"primary\" danger disabled={pageIds.length === 0}>\n        Unrelate Unset Items on Page\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} ({getStatSentence(stats, searchParams.get('scope'))}) -{' '}\n          {attribute.description.en}\n        </Typography.Text>\n      }\n      extra={\n        <Flex align=\"center\">\n          {sortingComponent}\n\n          {paginationComponent}\n        </Flex>\n      }\n      actions={[unrelateButton, <GoToTopButton key=\"go-to-top\" />, paginationComponent].filter(Boolean)}\n    >\n      {pageIds.length === 0 && (\n        <Empty\n          description=\"No items found in this scope for this attribute.\"\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n        />\n      )}\n      {pageIds.map((itemId) => {\n        const itemAttributes = getItemAttributeValues(itemId);\n        const item = getItem(itemId);\n\n        return (\n          <Card.Grid\n            key={`${itemId}-${itemAttributes.updatedAt}`}\n            style={{ width: isNarrow ? '50%' : '25%' }}\n          >\n            <Flex gap={6}>\n              <Flex vertical gap={6}>\n                <ItemSprite item={item} width={75} />\n                <ItemId item={item} />\n                <ItemGoTo item={item} />\n                <ItemName item={item} language=\"en\" />\n                <ItemName item={item} language=\"pt\" />\n              </Flex>\n              <AttributionValueButtons\n                attribute={attribute!}\n                value={itemAttributes.attributes[attribute!.id]}\n                onlyButtons\n                onChange={(attributeId: string, value: number) =>\n                  updateAttributeValue(item.id, attributeId, value)\n                }\n              />\n            </Flex>\n          </Card.Grid>\n        );\n      })}\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useMemo, useState } from 'react';\n\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport { orderBy } from 'lodash';\n\nexport function useItemGrouping() {\n  const {\n    attributesList,\n    addAttributesToUpdate,\n    getItemAttributeValues,\n    availableItemIds,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  const attributeKey = searchParams.get('attribute') ?? 'ali';\n  const scope = searchParams.get('scope') ?? 'unset';\n\n  const page = searchParams.get('page') ?? '1';\n  const pageSize = searchParams.get('pageSize') ?? '12';\n\n  const [previousAttribute, setPreviousAttribute] = useState<string>('ali');\n  const [previousScope, setPreviousScope] = useState<string>('unset');\n\n  const [sortBy, setSortBy] = useState<string | null>(null);\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n\n  const group = useMemo(() => {\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    const scopeValue =\n      scope === 'unset' ? undefined : ATTRIBUTE_VALUE[scope.toUpperCase() as keyof typeof ATTRIBUTE_VALUE];\n\n    const filteredItemIds = itemsAttributes\n      .filter((item) => item.attributes?.[attributeKey] === scopeValue)\n      .map((item) => item.id);\n\n    return orderBy(\n      filteredItemIds,\n      [\n        (id) => (sortBy ? getItemAttributeValues(id)?.attributes?.[sortBy] : true),\n        (id) => getItemAttributeValues(id)?.updatedAt,\n        (id) => Number(id),\n      ],\n      [sortOrder, 'desc', 'asc']\n    );\n  }, [attributeKey, scope, sortBy, sortOrder]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const pageIds = useMemo(() => {\n    if (previousAttribute !== attributeKey || previousScope !== scope) {\n      setPreviousAttribute(attributeKey);\n      setPreviousScope(scope);\n      addQueryParam('page', '1');\n      return group.slice(0, Number(pageSize));\n    }\n\n    const start = (Number(page) - 1) * Number(pageSize);\n    const end = start + Number(pageSize);\n\n    return group.slice(start, end);\n  }, [page, pageSize, group]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const attribute = attributesList.find((a) => a.id === attributeKey);\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const updatePageItemsAsUnrelated = () => {\n    addMultipleAttributesToUpdate(\n      pageIds.map((id) => {\n        const prev = getItemAttributeValues(id);\n        if (!prev.attributes[attributeKey]) {\n          prev.attributes[attributeKey] = ATTRIBUTE_VALUE.UNRELATED;\n        }\n\n        return prev;\n      })\n    );\n  };\n\n  return {\n    group,\n    stats: {\n      total: availableItemIds.length,\n      group: group.length,\n      percent: Math.round((group.length / availableItemIds.length) * 100),\n    },\n    pageIds,\n    attribute,\n    updateAttributeValue,\n    updatePageItemsAsUnrelated,\n    sorting: {\n      sortBy,\n      setSortBy,\n      sortOrder,\n      setSortOrder,\n    },\n    pagination: {\n      total: group.length,\n      current: Number(page),\n      pageSize: Number(pageSize),\n      onChange: (page: number) => addQueryParam('page', String(page)),\n      onShowSizeChange: (_: number, pageSize: number) => addQueryParam('pageSize', String(pageSize)),\n      pageSizeOptions: [12, 24, 48, 96],\n    },\n  };\n}\n","import { Flex, Table, TableColumnsType, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { ItemMessageObject, useItemsComparator } from 'hooks/useItemsComparator';\nimport { Item } from 'types';\n\nimport { AttributeSprite } from './ItemAttributeDescription';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\n\nexport function ItemComparatorCard() {\n  const { attributes } = useItemsAttributeValuesContext();\n  const { itemMessages, grouping } = useItemsComparator();\n\n  const columns: TableColumnsType<ItemMessageObject> = [\n    {\n      title: 'Item Id',\n      dataIndex: 'item',\n      key: 'id',\n      render: (item: Item) => (\n        <div>\n          <ItemId item={item} />\n          <ItemGoTo item={item} />\n        </div>\n      ),\n      sorter: (a, b) => Number(a.item.id) - Number(b.item.id),\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'item',\n      key: 'sprite',\n      render: (item: Item) => <ItemSprite item={item} width={75} />,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'item',\n      key: 'name',\n      render: (item: Item) => (\n        <>\n          <ItemName item={item} language=\"en\" />\n          <ItemName item={item} language=\"pt\" />\n        </>\n      ),\n      sorter: (a, b) => a.item.name.en.localeCompare(b.item.name.en),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'message',\n      key: 'message',\n      render: (message: string[], { item }) => (\n        <Flex gap={6}>\n          {message.map((keyVariant, index, arr) => (\n            <AttributeSprite\n              key={`${keyVariant}-${item.id}`}\n              keyVariant={keyVariant}\n              attributes={attributes}\n              firstElement={index === 0}\n              lastElement={index === arr.length - 1}\n              withText\n            />\n          ))}\n        </Flex>\n      ),\n      sorter: (a, b) => a.message.join(' ').localeCompare(b.message.join(' ')),\n    },\n    {\n      title: 'Complete',\n      dataIndex: 'itemAttributesValues',\n      key: 'complete',\n      render: (itemAttributesValues: { complete: boolean }) => (itemAttributesValues.complete ? 'Yes' : 'No'),\n    },\n    {\n      title: 'Identical',\n      dataIndex: 'message',\n      key: 'identical',\n      render: (message: string[]) => {\n        const group = grouping[message.join(' ')] ?? [];\n        return <>{group.length > 1 ? group.length : ''}</>;\n      },\n      sorter: (a, b) => {\n        const groupA = grouping[a.message.join(' ')] ?? [];\n        const groupB = grouping[b.message.join(' ')] ?? [];\n        return groupB.length - groupA.length;\n      },\n    },\n  ];\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Item Comparator</Typography.Title>\n      <Table dataSource={itemMessages} columns={columns} pagination={{ showQuickJumper: true }} />\n    </div>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keyBy, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { filterMessage, getItemAttributePriorityResponse } from 'utils';\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { Item, ItemAtributesValues } from 'types';\n\nexport type ItemMessageObject = {\n  item: Item;\n  itemAttributesValues: ItemAtributesValues;\n  message: string[];\n  fullMessage: string[];\n};\n\nexport function useItemsComparator() {\n  const { attributes, getItemAttributeValues, availableItemIds, getItem, isLoading } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n  const showComplete = searchParams.get('showComplete') === 'true';\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const { itemMessages, itemMessagesDict, grouping } = useMemo(() => {\n    if (isLoading) {\n      const itemMessages: ItemMessageObject[] = [];\n      return {\n        itemMessages,\n        itemMessagesDict: {},\n        grouping: {},\n      };\n    }\n\n    const itemMessages = orderBy(\n      availableItemIds\n        .map((id) => {\n          const itemAttributesValues = getItemAttributeValues(id);\n          const itemMessage = getItemAttributePriorityResponse(itemAttributesValues, attributes);\n          return {\n            item: getItem(id),\n            itemAttributesValues,\n            message: filterMessage(itemMessage, showUnclear, showUnrelated),\n            fullMessage: itemMessage,\n          };\n        })\n        .filter(({ itemAttributesValues }) => (showComplete ? itemAttributesValues.complete : true)),\n      ['message'],\n      ['asc']\n    );\n\n    const grouping = itemMessages.reduce((acc: Dictionary<string[]>, { message, item: { id } }) => {\n      const key = message.join(' ');\n\n      if (acc[key] === undefined) {\n        acc[key] = [];\n      }\n      acc[key].push(id);\n\n      return acc;\n    }, {});\n\n    const moreThanOne = Object.values(grouping).filter((ids) => ids.length > 1);\n    if (moreThanOne.length > 0) {\n      console.log('More than one', moreThanOne);\n    }\n\n    return {\n      itemMessages,\n      itemMessagesDict: keyBy(itemMessages, 'item.id'),\n      grouping,\n    };\n  }, [\n    attributes,\n    availableItemIds,\n    getItemAttributeValues,\n    getItem,\n    isLoading,\n    showComplete,\n    showUnclear,\n    showUnrelated,\n  ]);\n\n  return {\n    itemMessages,\n    itemMessagesDict,\n    grouping,\n  };\n}\n","import { Alert, Button, Divider, Flex, Space, Typography } from 'antd';\nimport { keys, sample, sampleSize, shuffle, values } from 'lodash';\nimport { useState } from 'react';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { AlienSign, Item } from 'components/Sprites';\nimport { makeArray } from 'utils';\n\nexport function DailyAliemSimulator() {\n  const tdrAttributesQuery = useTDResource<ItemAttribute>('items-attributes');\n  const tdrItemsAttributesValuesQuery = useTDResource<ItemAtributesValues>('items-attribute-values');\n\n  const [simulation, setSimulation] = useState<DailyAlienGame | null>(null);\n\n  // Choose 3 random attributes that are not limited\n  // Get examples for each attribute of items that have value 10 in that attribute but are -3 in the other two\n\n  const onSimulate = () => {\n    setSimulation(generateDailyAlienGame(tdrAttributesQuery.data, tdrItemsAttributesValuesQuery.data));\n  };\n\n  const onSimulateMany = () => {\n    const simulations: Dictionary<DailyAlienGame> = {};\n    let tries = 0;\n    while (tries < 300 || keys(simulations).length === 15) {\n      const simulation = generateDailyAlienGame(tdrAttributesQuery.data, tdrItemsAttributesValuesQuery.data);\n      if (simulation.valid && !simulations[simulation.setId]) {\n        simulations[simulation.setId] = simulation;\n      }\n      if (keys(simulations).length >= 15) {\n        break;\n      }\n      tries += 1;\n    }\n    console.log('TRIES', tries);\n    console.log(Object.values(simulations).map((e, i) => ({ ...e, number: e.number - i })));\n  };\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={3}>Daily Simulator</Typography.Title>\n\n      <Typography.Paragraph>Generates a daily game for Alien Communication</Typography.Paragraph>\n\n      <Space>\n        <Button type=\"primary\" onClick={onSimulate}>\n          Generate\n        </Button>\n        <Button onClick={onSimulateMany}>Generate List</Button>\n      </Space>\n\n      <div>\n        {Boolean(simulation) && (\n          <Space direction=\"vertical\" key={simulation?.setId}>\n            <Typography.Title level={5}>{simulation?.setId}</Typography.Title>\n            {!simulation?.valid && <Alert type=\"error\" message=\"Invalid game\" />}\n            <Space direction=\"vertical\">\n              {simulation?.attributes.map((attr) => (\n                <Flex key={attr.id} gap={8}>\n                  <AlienSign id={attr.spriteId} width={50} />\n                  {attr.itemsIds.map((itemId) => (\n                    <Item id={itemId || '0'} width={50} />\n                  ))}\n                </Flex>\n              ))}\n            </Space>\n            <Divider className=\"my-1\" />\n            <Space direction=\"horizontal\">\n              {simulation?.requests.map((req) => (\n                <Flex key={req.itemId} vertical>\n                  <AlienSign id={req.spritesIds[2]} width={50} />\n                  <AlienSign id={req.spritesIds[1]} width={50} />\n                  <AlienSign id={req.spritesIds[0]} width={50} />\n                </Flex>\n              ))}\n            </Space>\n\n            <Divider className=\"my-1\" />\n            <Space direction=\"horizontal\">\n              {simulation?.itemsIds.map((itemId) => <Item id={itemId || '0'} width={50} />)}\n            </Space>\n          </Space>\n        )}\n      </div>\n    </div>\n  );\n}\n\ntype DailyAlienGameAttribute = {\n  id: string;\n  name: string;\n  description: string;\n  spriteId: string;\n  itemsIds: string[];\n};\n\ntype DailyAlienGameRequest = {\n  spritesIds: string[];\n  itemId: string;\n};\n\ntype DailyAlienGame = {\n  id: string;\n  setId: string;\n  number: number;\n  type: 'comunicação-alienígena';\n  attributes: DailyAlienGameAttribute[];\n  requests: DailyAlienGameRequest[];\n  solution: string;\n  itemsIds: string[];\n  valid: boolean;\n};\n\nconst generateDailyAlienGame = (\n  attributes: Dictionary<ItemAttribute>,\n  itemsAttributesValues: Dictionary<ItemAtributesValues>\n): DailyAlienGame => {\n  const allAttributes = values(attributes).filter((attr) => !attr.limited || attr.id === 'sol');\n  const allItems = shuffle(values(itemsAttributesValues).filter((i) => i.complete));\n\n  const spriteIDs = shuffle(makeArray(38, 0));\n\n  // Select 3 attributes and reassign random sprites\n  const selectedAttributes = sampleSize(allAttributes, 3).map((attr) => ({\n    ...attr,\n    spriteId: `${spriteIDs.pop()}`,\n  }));\n  const attributeA: string[] = [];\n  const attributeB: string[] = [];\n  const attributeC: string[] = [];\n  const attributeAB: string[] = [];\n  const attributeAC: string[] = [];\n  const attributeBC: string[] = [];\n  const attributeABC: string[] = [];\n  const none: string[] = [];\n\n  allItems.forEach((item) => {\n    const POSITIVE = [ATTRIBUTE_VALUE.DETERMINISTIC, ATTRIBUTE_VALUE.RELATED];\n    const isVeryValueA = item.attributes[selectedAttributes[0].id] === ATTRIBUTE_VALUE.DETERMINISTIC;\n    const isValueA = POSITIVE.includes(item.attributes[selectedAttributes[0].id]);\n    const isNotValueA = item.attributes[selectedAttributes[0].id] === ATTRIBUTE_VALUE.UNRELATED;\n    const isVeryValueB = item.attributes[selectedAttributes[1].id] === ATTRIBUTE_VALUE.DETERMINISTIC;\n    const isValueB = POSITIVE.includes(item.attributes[selectedAttributes[1].id]);\n    const isNotValueB = item.attributes[selectedAttributes[1].id] === ATTRIBUTE_VALUE.UNRELATED;\n    const isVeryValueC = item.attributes[selectedAttributes[2].id] === ATTRIBUTE_VALUE.DETERMINISTIC;\n    const isValueC = POSITIVE.includes(item.attributes[selectedAttributes[2].id]);\n    const isNotValueC = item.attributes[selectedAttributes[2].id] === ATTRIBUTE_VALUE.UNRELATED;\n\n    if (isNotValueA && isNotValueB && isNotValueC) {\n      return none.push(item.id);\n    }\n    if (isVeryValueA && isNotValueB && isNotValueC) {\n      attributeA.push(item.id);\n    }\n    if (isNotValueA && isVeryValueB && isNotValueC) {\n      attributeB.push(item.id);\n    }\n    if (isNotValueA && isNotValueB && isVeryValueC) {\n      attributeC.push(item.id);\n    }\n    if (isValueA && isValueB && isNotValueC) {\n      attributeAB.push(item.id);\n    }\n    if (isValueA && isNotValueB && isValueC) {\n      attributeAC.push(item.id);\n    }\n    if (isNotValueA && isValueB && isValueC) {\n      attributeBC.push(item.id);\n    }\n    if (isValueA && isValueB && isValueC) {\n      attributeABC.push(item.id);\n    }\n  });\n\n  const gameAttributes: DailyAlienGameAttribute[] = selectedAttributes.map((attr) => ({\n    id: attr.id,\n    name: attr.name.pt,\n    description: attr.description.pt,\n    spriteId: attr.spriteId,\n    itemsIds: [],\n  }));\n  gameAttributes[0].itemsIds = sampleSize(\n    attributeA,\n    attributeA.length > 3 ? 3 : Math.max(attributeA.length - 1, 1)\n  );\n  gameAttributes[1].itemsIds = sampleSize(\n    attributeB,\n    attributeB.length > 3 ? 3 : Math.max(attributeA.length - 1, 1)\n  );\n  gameAttributes[2].itemsIds = sampleSize(\n    attributeC,\n    attributeC.length > 3 ? 3 : Math.max(attributeA.length - 1, 1)\n  );\n\n  const usedItemsIds: string[] = [];\n  gameAttributes.forEach((attr) => {\n    usedItemsIds.push(...attr.itemsIds);\n  });\n\n  const complexRequests: DailyAlienGameRequest[] = [];\n  // AB request\n  if (attributeAB.length > 0) {\n    complexRequests.push({\n      spritesIds: [selectedAttributes[0].spriteId, selectedAttributes[1].spriteId],\n      itemId: sample(attributeAB)!,\n    });\n  }\n  // AC request\n  if (attributeAC.length > 0) {\n    complexRequests.push({\n      spritesIds: [selectedAttributes[0].spriteId, selectedAttributes[2].spriteId],\n      itemId: sample(attributeAC)!,\n    });\n  }\n  // BC request\n  if (attributeBC.length > 0) {\n    complexRequests.push({\n      spritesIds: [selectedAttributes[1].spriteId, selectedAttributes[2].spriteId],\n      itemId: sample(attributeBC)!,\n    });\n  }\n  // ABC request\n  if (attributeABC.length > 0) {\n    complexRequests.push({\n      spritesIds: selectedAttributes.map((attr) => attr.spriteId),\n      itemId: sample(attributeABC)!,\n    });\n  }\n  const simpleRequests: DailyAlienGameRequest[] = [];\n  // Additional request A\n  if (attributeA.length > 0) {\n    simpleRequests.push({\n      spritesIds: [selectedAttributes[0].spriteId],\n      itemId: attributeA.filter((id) => !usedItemsIds.includes(id))[0],\n    });\n  }\n  // Additional request B\n  if (attributeB.length > 0) {\n    simpleRequests.push({\n      spritesIds: [selectedAttributes[1].spriteId],\n\n      itemId: attributeB.filter((id) => !usedItemsIds.includes(id))[0],\n    });\n  }\n  // Additional request C\n  if (attributeC.length > 0) {\n    simpleRequests.push({\n      spritesIds: [selectedAttributes[2].spriteId],\n      itemId: attributeC.filter((id) => !usedItemsIds.includes(id))[0],\n    });\n  }\n\n  console.log({\n    attributeA,\n    attributeB,\n    attributeC,\n    attributeAB,\n    attributeAC,\n    attributeBC,\n    attributeABC,\n  });\n\n  console.log('COMPLEX REQUEST SIZE', complexRequests.length);\n  console.log('SIMPLE REQUEST SIZE', simpleRequests.length);\n  let requests = sampleSize(complexRequests, 4);\n  console.log('REQUEST SIZE', requests.length);\n\n  if (requests.length < 3) {\n    requests.push(...sampleSize(simpleRequests, 4 - requests.length));\n  }\n\n  if (requests.length < 4) {\n    console.warn('Not enough requests');\n  }\n\n  requests = shuffle(requests);\n\n  const requestItemsIds: string[] = requests.map((req) => req.itemId);\n\n  const result: DailyAlienGame = {\n    id: '2024-00-00',\n    setId: gameAttributes\n      .map((attr) => attr.id)\n      .sort()\n      .join('-'),\n    number: 0,\n    type: 'comunicação-alienígena',\n    attributes: gameAttributes,\n    requests,\n    solution: requestItemsIds.join('-'),\n    itemsIds: shuffle([...requestItemsIds, none[0], none[1], none[2], none[3]]).filter(Boolean),\n    valid: false,\n  };\n\n  // Validate game\n  result.valid = [\n    result.attributes.length === 3,\n    result.requests.length === 4,\n    // TODO: verify if it should be 6\n    result.itemsIds.length > 5,\n    result.attributes.every((attr) => attr.itemsIds.length > 0),\n    result.requests.every((req) => req.itemId),\n  ].every(Boolean);\n\n  console.log(result);\n\n  return result;\n};\n","import { App, Button, Flex, InputNumber, Space, Typography } from 'antd';\nimport {\n  FilterCheckBox,\n  FilterNumber,\n  FilterSelect,\n  FilterSwitch,\n  TransparentButton,\n} from 'components/Common';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keys, sampleSize, shuffle, sortBy } from 'lodash';\nimport { useState } from 'react';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport clsx from 'clsx';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport {\n  CheckSquareOutlined,\n  CloseSquareOutlined,\n  LineChartOutlined,\n  PlusSquareOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { DailyAliemSimulator } from './DailyAlienSimulator';\n\nconst ROMAN_NUMERALS = ['', 'I', 'II', 'III', 'IV', 'V'];\n\ntype AttributeSummary = {\n  relatedCount: number;\n  deterministicCount: number;\n  unclearCount: number;\n  oppositeCount: number;\n} & ItemAttribute;\n\nexport function ItemSimulation() {\n  const { attributes, availableItemIds, getItemAttributeValues, getItem } = useItemsAttributeValuesContext();\n  const { message } = App.useApp();\n\n  const [gridSize, setGridSize] = useState<16 | 25>(25);\n  const [reliabilityThreshold, setReliabilityThreshold] = useState<number>(90);\n  const [nsfw, setNsfw] = useState<boolean>(false);\n  const [selectedItemsIds, setSelectedItemsIds] = useState<string[]>([]);\n  const [selectedAttributes, setSelectedAttributes] = useState<AttributeSummary[]>([]);\n  const [highlightedAttributeKey, setHighlightedAttributeKey] = useState<string | null>(null);\n  const [displays, setDisplays] = useState<BooleanDictionary>({\n    id: true,\n    nameEn: true,\n    namePt: true,\n    reliability: true,\n  });\n\n  const onGetSample = () => {\n    const keysDict: Record<string, string> = {};\n\n    const shuffledIds = shuffle(availableItemIds);\n\n    while (Object.values(keysDict).length < gridSize) {\n      const itemId = shuffledIds.pop();\n      if (!itemId) break;\n\n      const itemAttributeValues = getItemAttributeValues(itemId);\n\n      if (!itemAttributeValues) continue;\n      if (\n        !itemAttributeValues.complete ||\n        !itemAttributeValues.reliability ||\n        itemAttributeValues.reliability < reliabilityThreshold\n      )\n        continue;\n\n      if (!nsfw && getItem(itemId).nsfw) continue;\n\n      if (itemAttributeValues.key && !keysDict[itemAttributeValues.key]) {\n        keysDict[itemAttributeValues.key] = itemId;\n      } else {\n        console.log('Item has identical key to another item. Skipping.', getItem(itemId).name.en);\n      }\n    }\n    const result = Object.values(keysDict);\n    if (result.length < gridSize) {\n      message.error(`Could not generate sample. Got only ${result.length} items`);\n    }\n\n    setSelectedItemsIds(sortBy(result, (itemId) => Number(itemId)));\n\n    // Get the most common attributes\n    const attributesResult = getHighestAttributeKeys(\n      result.map((itemId) => getItemAttributeValues(itemId)),\n      25,\n      attributes\n    );\n\n    // If less than 25 attributes are found, add more by priority\n    if (attributesResult.length < 25) {\n      const remainingAttributes = keys(attributes).filter((key) => !attributesResult.includes(key));\n      const remainingAttributesByPriority = sortBy(remainingAttributes, (key) => attributes[key].priority);\n      const toBeAdded = remainingAttributesByPriority.slice(0, 25 - attributesResult.length);\n      console.log('Adding more attributes by priority', toBeAdded);\n      attributesResult.push(...toBeAdded);\n    }\n\n    const dicts = attributesResult.reduce(\n      (\n        acc: {\n          relatedCount: NumberDictionary;\n          deterministicCount: NumberDictionary;\n          unclearCount: NumberDictionary;\n          oppositeCount: NumberDictionary;\n        },\n        key\n      ) => {\n        result.forEach((itemId) => {\n          const itemAttributeValues = getItemAttributeValues(itemId);\n          if (!itemAttributeValues) return;\n          switch (itemAttributeValues.attributes[key]) {\n            case ATTRIBUTE_VALUE.RELATED:\n              acc.relatedCount[key] = (acc.relatedCount[key] || 0) + 1;\n              break;\n            case ATTRIBUTE_VALUE.DETERMINISTIC:\n              acc.deterministicCount[key] = (acc.deterministicCount[key] || 0) + 1;\n              break;\n            case ATTRIBUTE_VALUE.UNCLEAR:\n              acc.unclearCount[key] = (acc.unclearCount[key] || 0) + 1;\n              break;\n            case ATTRIBUTE_VALUE.OPPOSITE:\n              acc.oppositeCount[key] = (acc.oppositeCount[key] || 0) + 1;\n              break;\n          }\n        });\n\n        return acc;\n      },\n      { relatedCount: {}, deterministicCount: {}, unclearCount: {}, oppositeCount: {} }\n    );\n\n    setSelectedAttributes(\n      attributesResult.sort().map((key) => ({\n        ...attributes[key],\n        relatedCount: dicts.relatedCount[key],\n        deterministicCount: dicts.deterministicCount[key],\n        unclearCount: dicts.unclearCount[key],\n        oppositeCount: dicts.oppositeCount[key],\n      }))\n    );\n  };\n\n  const onUpdateDisplays = (key: string) => {\n    setDisplays((prev) => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={3}>Simulator</Typography.Title>\n\n      <Typography.Paragraph>\n        Generates a board with items different enough to get Deterministic values in all selected attributes.\n      </Typography.Paragraph>\n\n      <Flex wrap gap={12}>\n        <FilterSelect\n          label=\"Grid Size\"\n          value={gridSize}\n          onChange={(value) => setGridSize(value)}\n          options={[16, 25]}\n        />\n        <FilterNumber\n          label=\"Reliability Threshold\"\n          value={reliabilityThreshold}\n          onChange={(value) => setReliabilityThreshold(value)}\n          step={5}\n          min={10}\n          max={100}\n        />\n        <FilterSwitch label=\"NSFW\" value={nsfw} onChange={setNsfw} />\n        <Button onClick={onGetSample} type=\"primary\">\n          Get Sample Board\n        </Button>\n      </Flex>\n      <Flex wrap gap={12}>\n        <FilterCheckBox label=\"Show Id\" value={!!displays.id} onChange={() => onUpdateDisplays('id')} />\n        <FilterCheckBox\n          label=\"Show Name (EN)\"\n          value={!!displays.nameEn}\n          onChange={() => onUpdateDisplays('nameEn')}\n        />\n        <FilterCheckBox\n          label=\"Show Name (PT)\"\n          value={!!displays.namePt}\n          onChange={() => onUpdateDisplays('namePt')}\n        />\n        <FilterCheckBox\n          label=\"Show Reliability\"\n          value={!!displays.reliability}\n          onChange={() => onUpdateDisplays('reliability')}\n        />\n      </Flex>\n\n      <div className=\"simulator-grid\" style={{ gridTemplateColumns: `repeat(${Math.sqrt(gridSize)}, 1fr)` }}>\n        {selectedItemsIds.map((itemId) => {\n          const item = getItem(itemId);\n          const itemAttributeValues = getItemAttributeValues(itemId);\n          return (\n            <Space\n              key={itemId}\n              direction=\"vertical\"\n              className={clsx(\n                'simulator-grid__entry',\n                highlightedAttributeKey &&\n                  itemAttributeValues.attributes[highlightedAttributeKey] > 0 &&\n                  'simulator-grid__entry--highlighted'\n              )}\n              align=\"center\"\n            >\n              <Space>\n                <Flex vertical>\n                  {displays.id && <ItemId item={item} />}\n\n                  {displays.reliability && (\n                    <span>\n                      <InputNumber\n                        prefix={<LineChartOutlined />}\n                        placeholder=\"Reliability\"\n                        variant=\"borderless\"\n                        size=\"small\"\n                        value={itemAttributeValues.reliability}\n                        readOnly\n                        style={{ width: '8ch' }}\n                        formatter={(value) => `${value}%`}\n                      />\n                    </span>\n                  )}\n\n                  {displays.id && <ItemGoTo item={item} />}\n                </Flex>\n\n                <ItemSprite item={item} width={50} />\n              </Space>\n\n              {displays.nameEn && <ItemName item={item} language=\"en\" />}\n              {displays.namePt && <ItemName item={item} language=\"pt\" />}\n            </Space>\n          );\n        })}\n      </div>\n\n      <div className=\"simulator-grid my-4\">\n        {selectedAttributes.map((attributeSummary) => (\n          <TransparentButton\n            key={attributeSummary.id}\n            className={clsx(\n              'simulator-grid__entry',\n              'simulator-grid__button',\n              highlightedAttributeKey === attributeSummary.id && 'simulator-grid__entry--highlighted'\n            )}\n            onClick={() => setHighlightedAttributeKey(attributeSummary.id)}\n          >\n            {attributeSummary.name.en} {ROMAN_NUMERALS[attributeSummary.level]}\n            <Flex gap={6} justify=\"center\" className=\"my-1\">\n              <span>\n                <CheckSquareOutlined\n                  style={{ color: attributeSummary.deterministicCount ? 'dodgerblue' : undefined }}\n                />{' '}\n                {attributeSummary.deterministicCount ?? 0}\n              </span>\n              <span>\n                <PlusSquareOutlined style={{ color: attributeSummary.relatedCount ? 'green' : undefined }} />{' '}\n                {attributeSummary.relatedCount ?? 0}\n              </span>\n              <span>\n                <CloseSquareOutlined style={{ color: attributeSummary.oppositeCount ? 'red' : undefined }} />{' '}\n                {attributeSummary.oppositeCount ?? 0}\n              </span>\n              <span>\n                <QuestionCircleOutlined\n                  style={{ color: attributeSummary.unclearCount ? 'gold' : undefined }}\n                />{' '}\n                {attributeSummary.unclearCount ?? 0}\n              </span>\n            </Flex>\n          </TransparentButton>\n        ))}\n      </div>\n\n      <DailyAliemSimulator />\n    </div>\n  );\n}\n\nfunction getHighestAttributeKeys(\n  selectedItemsAttributesValues: ItemAtributesValues[],\n  quantity: number,\n  attributes: Dictionary<ItemAttribute>\n): string[] {\n  // 1. Count the number of times each attribute is present. Make sure to gather any deterministic value\n  const attributesCounts: Record<string, number> = {};\n  const deterministicKeysDict: BooleanDictionary = {};\n  selectedItemsAttributesValues.forEach((itemAttributeValues) => {\n    if (!itemAttributeValues) return;\n    Object.keys(itemAttributeValues.attributes).forEach((key) => {\n      if (itemAttributeValues.attributes[key] > 0) {\n        attributesCounts[key] = (attributesCounts[key] || 0) + 1;\n      }\n      if (itemAttributeValues.attributes[key] === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        deterministicKeysDict[key] = true;\n        attributesCounts[key] = (attributesCounts[key] || 0) + 2;\n      }\n      if (itemAttributeValues.attributes[key] === ATTRIBUTE_VALUE.OPPOSITE) {\n        attributesCounts[key] = (attributesCounts[key] || 0) + 1;\n      }\n    });\n  });\n\n  const levelCount: NumberDictionary = {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n  };\n\n  /**\n   * Filters the given keys array based on the count of attribute levels and guards against having more than one level 4 attribute.\n   */\n  function filterCountLevelsAndGuardLevel4(keys: string[]) {\n    return keys.filter((key) => {\n      levelCount[attributes[key].level]++;\n\n      if (levelCount[4] > 1) {\n        console.log('Discarding level 4 attribute', key);\n        return false;\n      }\n      return true;\n    });\n  }\n\n  const deterministicKeys = filterCountLevelsAndGuardLevel4(Object.keys(deterministicKeysDict));\n  const nondeterministicKeys = filterCountLevelsAndGuardLevel4(\n    keys(attributesCounts).filter((key) => !deterministicKeys.includes(key))\n  );\n  console.log({ levelCount });\n\n  // 1.b If deterministic keys are exactly the quantity, return them\n  if (quantity === deterministicKeys.length) {\n    console.log('All keys are deterministic');\n    return deterministicKeys;\n  }\n\n  // 2. Get all keys and sort them by value in descending order, but have only one level 5 attribute\n  console.log(attributesCounts);\n  // let hasLevel5Attribute = false;\n  // const sortedKeys = keys(attributesCounts)\n  //   .sort((a, b) => {\n  //     if (attributesCounts[a] !== attributesCounts[b]) {\n  //       return attributesCounts[b] - attributesCounts[a];\n  //     }\n\n  //     return attributes[a].priority - attributes[b].priority;\n  //   })\n  //   .filter((key) => {\n  //     if (attributes[key].level !== 4) return true;\n\n  //     if (!hasLevel5Attribute) {\n  //       console.log('Keeping level 4 attribute', key, attributesCounts[key]);\n  //       hasLevel5Attribute = true;\n  //       return true;\n  //     }\n  //     console.log('Discarding level 4 attribute', key, attributesCounts[key]);\n\n  //     return false;\n  //   });\n\n  // console.log(sortedKeys);\n\n  // 2.b. Handle edge cases: empty object or quantity exceeding keys\n  if (deterministicKeys.length === 0) {\n    return [];\n  }\n\n  const deterministicTiedGroups = deterministicKeys.reduce((acc: Record<string, string[]>, key) => {\n    const value = attributesCounts[key];\n    if (!acc[value]) {\n      acc[value] = [];\n    }\n    acc[value].push(key);\n    return acc;\n  }, {});\n  const sortedDeterministicTiedGroupsKeys = keys(deterministicTiedGroups).sort(\n    (a, b) => Number(b) - Number(a)\n  );\n  console.log({ sortedDeterministicTiedGroupsKeys });\n\n  const nondeterministicTiedGroups = nondeterministicKeys.reduce((acc: Record<string, string[]>, key) => {\n    const value = attributesCounts[key];\n    if (!acc[value]) {\n      acc[value] = [];\n    }\n    acc[value].push(key);\n    return acc;\n  }, {});\n  console.log(nondeterministicTiedGroups);\n  const sortedNondeterministicTiedGroupsKeys = keys(nondeterministicTiedGroups).sort(\n    (a, b) => Number(b) - Number(a)\n  );\n\n  let result: string[] = [];\n\n  for (const group of sortedDeterministicTiedGroupsKeys) {\n    if (result.length === quantity) {\n      break;\n    }\n    result.push(...sampleSize(deterministicTiedGroups[group], quantity - result.length));\n  }\n\n  for (const group of sortedNondeterministicTiedGroupsKeys) {\n    if (result.length === quantity) {\n      break;\n    }\n    result.push(...sampleSize(nondeterministicTiedGroups[group], quantity - result.length));\n  }\n\n  return result;\n}\n","import { Button, Progress, Rate, Space, Table, TableProps, Tabs, Tag, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { TabsProps } from 'antd/lib';\nimport { useNavigate } from 'react-router-dom';\n\nexport function ItemStats() {\n  // console.log(attributesList);\n  // console.log(attributes);\n\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: 'All Attributes',\n      children: <AttributesStatsTable type=\"all\" />,\n    },\n    {\n      key: '2',\n      label: 'Default Attributes',\n      children: <AttributesStatsTable type=\"default\" />,\n    },\n    {\n      key: '3',\n      label: 'Custom Attributes',\n      children: <AttributesStatsTable type=\"custom\" />,\n    },\n  ];\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Stats</Typography.Title>\n\n      <Typography.Paragraph></Typography.Paragraph>\n\n      <Tabs defaultActiveKey=\"1\" items={items} />\n    </div>\n  );\n}\n\nconst calculateAttributeStats = (attribute: ItemAttribute, itemsAttributes: ItemAtributesValues[]) => {\n  let completionCount = 0;\n  let tensCount = 0;\n  let fivesCount = 0;\n  let zerosCount = 0;\n  let negativeOnesCount = 0;\n  let negativeThreesCount = 0;\n  let negativeTensCount = 0;\n  let positiveCount = 0;\n\n  itemsAttributes.forEach(({ attributes }) => {\n    if (attributes[attribute.id]) {\n      completionCount++;\n\n      const value = attributes[attribute.id];\n      if (value === 10) {\n        tensCount++;\n      } else if (value === 5) {\n        fivesCount++;\n      } else if (value === 0 || !value) {\n        zerosCount++;\n      } else if (value === -1) {\n        negativeOnesCount++;\n      } else if (value === -3) {\n        negativeThreesCount++;\n      } else if (value === -10) {\n        negativeTensCount++;\n      }\n\n      if (value > 0) {\n        positiveCount++;\n      }\n    }\n  });\n\n  const total = itemsAttributes.length;\n  const completionPercentage = (completionCount / total) * 100;\n  const tensPercentage = (tensCount / total) * 100;\n  const fivesPercentage = (fivesCount / total) * 100;\n  const zerosPercentage = (zerosCount / total) * 100;\n  const negativeOnesPercentage = (negativeOnesCount / total) * 100;\n  const negativeThreesPercentage = (negativeThreesCount / total) * 100;\n  const negativeTensPercentage = (negativeTensCount / total) * 100;\n  const positivePercentage = (positiveCount / total) * 100;\n\n  return {\n    completionPercentage: completionPercentage.toFixed(1),\n    tensPercentage: tensPercentage.toFixed(1),\n    fivesPercentage: fivesPercentage.toFixed(1),\n    zerosPercentage: zerosPercentage.toFixed(1),\n    negativeOnesPercentage: negativeOnesPercentage.toFixed(1),\n    negativeThreesPercentage: negativeThreesPercentage.toFixed(1),\n    negativeTensPercentage: negativeTensPercentage.toFixed(1),\n    positivePercentage: positivePercentage.toFixed(1),\n  };\n};\n\ntype AttributesStatsTableProps = {\n  type: 'all' | 'default' | 'custom';\n};\n\nfunction AttributesStatsTable({ type }: AttributesStatsTableProps) {\n  const { availableItemIds, getItemAttributeValues, attributesList } = useItemsAttributeValuesContext();\n  const navigate = useNavigate();\n\n  const attributesPool = useMemo(() => {\n    if (type === 'default') {\n      return attributesList.filter((attribute) => attribute.default);\n    }\n\n    if (type === 'custom') {\n      return attributesList.filter((attribute) => !attribute.default);\n    }\n\n    return attributesList;\n  }, [attributesList, type]);\n\n  const rows = useMemo(() => {\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n\n    return attributesPool.map((attribute) => {\n      return {\n        ...attribute,\n        ...calculateAttributeStats(attribute, itemsAttributes),\n      };\n    });\n  }, [attributesPool, availableItemIds, getItemAttributeValues]);\n\n  const columns: TableProps['columns'] = [\n    {\n      title: 'Attribute',\n      dataIndex: 'name',\n      key: 'name',\n      render: (name, record) => (\n        <span>\n          {name.en}\n          {record.default ? <Tag className=\"ml-1\">default</Tag> : ''}\n          {record.limited ? <Tag className=\"ml-1\">limited</Tag> : ''}\n        </span>\n      ),\n      sorter: (a, b) => a.name.en.localeCompare(b.name.en),\n    },\n\n    {\n      title: 'Priority',\n      dataIndex: 'priority',\n      key: 'priority',\n      sorter: (a, b) => a.priority - b.priority,\n    },\n\n    {\n      title: 'Positive',\n      dataIndex: 'positivePercentage',\n      key: 'positivePercentage',\n      render: (positivePercentage: string) => `${positivePercentage}%`,\n      sorter: (a, b) => parseFloat(a.positivePercentage) - parseFloat(b.positivePercentage),\n    },\n    {\n      title: '10',\n      dataIndex: 'tensPercentage',\n      key: 'tensPercentage',\n      render: (tensPercentage: string, record) => {\n        if (record.limited) {\n          return '-';\n        }\n\n        return `${tensPercentage}%`;\n      },\n      sorter: (a, b) => parseFloat(a.tensPercentage) - parseFloat(b.tensPercentage),\n    },\n    {\n      title: '5',\n      dataIndex: 'fivesPercentage',\n      key: 'fivesPercentage',\n      render: (fivesPercentage: string) => `${fivesPercentage}%`,\n      sorter: (a, b) => parseFloat(a.fivesPercentage) - parseFloat(b.fivesPercentage),\n    },\n    {\n      title: '-1',\n      dataIndex: 'negativeOnesPercentage',\n      key: 'negativeOnesPercentage',\n      render: (negativeOnesPercentage: string) => `${negativeOnesPercentage}%`,\n      sorter: (a, b) => parseFloat(a.negativeOnesPercentage) - parseFloat(b.negativeOnesPercentage),\n    },\n    {\n      title: '-3',\n      dataIndex: 'negativeThreesPercentage',\n      key: 'negativeThreesPercentage',\n      render: (negativeThreesPercentage: string) => `${negativeThreesPercentage}%`,\n      sorter: (a, b) => parseFloat(a.negativeThreesPercentage) - parseFloat(b.negativeThreesPercentage),\n    },\n    {\n      title: '-10',\n      dataIndex: 'negativeTensPercentage',\n      key: 'negativeTensPercentage',\n      render: (negativeTensPercentage: string) => `${negativeTensPercentage}%`,\n      sorter: (a, b) => parseFloat(a.negativeTensPercentage) - parseFloat(b.negativeTensPercentage),\n    },\n    {\n      title: 'Completion',\n      dataIndex: 'completionPercentage',\n      key: 'completionPercentage',\n      render: (completionPercentage: string) => (\n        <Progress percent={parseFloat(completionPercentage)} size=\"small\" />\n      ),\n      sorter: (a, b) => parseFloat(a.completionPercentage) - parseFloat(b.completionPercentage),\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      render: (level) => <Rate count={4} value={level} disabled />,\n      sorter: (a, b) => a.level - b.level,\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (record) => (\n        <Space>\n          <Button.Group>\n            <Button\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => navigate(`/items/attribution?view=grouping&attribute=${record.id}&page=1`)}\n            >\n              Grouping\n            </Button>\n            <Button\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => navigate(`/items/attribution?view=sampler&attribute=${record.id}&size=6`)}\n            >\n              Sample\n            </Button>\n          </Button.Group>\n        </Space>\n      ),\n    },\n  ];\n\n  return <Table columns={columns} dataSource={rows} pagination={false} rowKey=\"id\" size=\"small\" />;\n}\n","import { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAttributionCard } from './ItemAttributionCard';\nimport { ItemAttributionNavigation } from './ItemAttributionNavigation';\nimport { Empty, Flex } from 'antd';\nimport { ItemSamplerCard } from './ItemSamplerCard';\nimport { ItemGroupingCard } from './ItemGroupingCard';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { ItemComparatorCard } from './ItemComparatorCard';\nimport { ItemSimulation } from './ItemSimulation';\nimport { ItemStats } from './ItemStats';\n\nexport function ItemAttributionPageContent() {\n  const { view } = useItemQueryParams();\n\n  if (view === 'classifier') {\n    return (\n      <>\n        <ItemAttributionNavigation />\n        <ItemAttributionCard />\n        <Flex justify=\"flex-end\" className=\"my-4\">\n          <GoToTopButton />\n        </Flex>\n      </>\n    );\n  }\n\n  if (view === 'sampler') {\n    return <ItemSamplerCard />;\n  }\n\n  if (view === 'grouping') {\n    return <ItemGroupingCard />;\n  }\n\n  if (view === 'comparator') {\n    return <ItemComparatorCard />;\n  }\n\n  if (view === 'simulator') {\n    return <ItemSimulation />;\n  }\n\n  if (view === 'stats') {\n    return <ItemStats />;\n  }\n\n  return <Empty className=\"my-10\" description=\"Unknown view has been selected\" />;\n}\n","import { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterNumber, FilterSelect, FilterSwitch } from 'components/Common';\nimport { Stat } from 'components/Common/Stat';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMemo } from 'react';\nimport { ATTRIBUTE_GROUP_VALUES } from 'utils/constants';\n\nexport function ItemAttributionStats() {\n  const { getItemAttributeValues, availableItemIds, attributesList } = useItemsAttributeValuesContext();\n\n  const {\n    total,\n    complete,\n    completionPercentage,\n    hasDataCount,\n    initiatedPercentage,\n    progress,\n    progressTotal,\n    currentProgress,\n  } = useMemo(() => {\n    const total = availableItemIds.length;\n    let someData = 0;\n    let complete = 0;\n    let currentProgress = 0;\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    itemsAttributes.forEach(({ complete: isComplete, attributes }) => {\n      if (!isEmpty(attributes)) {\n        someData += 1;\n      }\n      if (Object.values(attributes).length === attributesList.length) {\n        complete += 1;\n      }\n\n      currentProgress += Object.values(attributes).length;\n    });\n\n    const progressTotal = Object.values(attributesList).length * availableItemIds.length;\n\n    return {\n      total,\n      complete,\n      completionPercentage: total > 0 ? ((complete / total) * 100).toFixed(1) : 0,\n      hasDataCount: someData,\n      initiatedPercentage: total > 0 ? Math.floor((someData / total) * 100) : 0,\n      progress: ((currentProgress / progressTotal) * 100).toFixed(1),\n      currentProgress,\n      progressTotal,\n    };\n  }, [attributesList, availableItemIds, getItemAttributeValues]);\n\n  return (\n    <>\n      <Flex vertical>\n        <Typography.Text strong className=\"mb-2\">\n          Items Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{total}</Stat>\n        <Stat label=\"Complete\">\n          {complete} ({completionPercentage}%)\n        </Stat>\n        <Stat label=\"Initiated\">\n          {hasDataCount} ({initiatedPercentage}%)\n        </Stat>\n        <Typography.Text strong className=\"mt-4 mb-2\">\n          Attributes Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{progressTotal}</Stat>\n        <Stat label=\"Set\">{currentProgress}</Stat>\n        <Stat label=\"Progress\">{progress}%</Stat>\n      </Flex>\n      <Divider />\n    </>\n  );\n}\n\nexport function ItemAttributionClassifierFilters() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  return (\n    <>\n      <Button block onClick={() => jumpToItem('random')} type=\"primary\">\n        Random Item\n      </Button>\n      <FilterSwitch\n        label=\"Unset Only\"\n        value={searchParams.get('scope') === 'unset'}\n        onChange={(value) => addQueryParam('scope', value ? 'unset' : '')}\n        className=\"mt-4\"\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionSamplerFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return [\n      { label: 'Random Attribute', value: 'random' },\n      ...attributesList.map(({ id, name }) => ({ label: name.en, value: id })),\n    ];\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Sampler Attribute\"\n        value={searchParams.get('attribute') || 'random'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n      <FilterNumber\n        label=\"Sample Size\"\n        value={Number(searchParams.get('size') || 9)}\n        onChange={(v) => addQueryParam('size', String(v))}\n        min={3}\n        max={21}\n        step={3}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionGroupingFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return attributesList.map(({ id, name, ...rest }) => ({\n      label: `${name.en}${rest.default ? '*' : ''}`,\n      value: id,\n    }));\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Attribute\"\n        value={searchParams.get('attribute') || 'ali'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n\n      <FilterSelect\n        label=\"Scope\"\n        value={searchParams.get('scope') || 'unset'}\n        onChange={(v) => addQueryParam('scope', v)}\n        options={[{ value: 'unset', label: 'Unset' }, ...ATTRIBUTE_GROUP_VALUES]}\n      />\n\n      <FilterSelect\n        label=\"Results per page\"\n        value={searchParams.get('pageSize') || 12}\n        onChange={(v) => addQueryParam('pageSize', v)}\n        options={[12, 24, 48, 96]}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionComparatorFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  return (\n    <>\n      <FilterSwitch\n        label=\"Only Complete\"\n        value={searchParams.get('showComplete') === 'true'}\n        onChange={(v) => addQueryParam('showComplete', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n    </>\n  );\n}\n","import { Divider, Flex } from 'antd';\nimport { FilterSelect } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { getItemAttributePriorityResponse, sortJsonKeys } from 'utils';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nimport {\n  ItemAttributionClassifierFilters,\n  ItemAttributionComparatorFilters,\n  ItemAttributionGroupingFilters,\n  ItemAttributionSamplerFilters,\n  ItemAttributionStats,\n} from './ItemAttributionFiltersSections';\n\nexport function ItemAttributionFilters() {\n  const { isDirty, save, prepareItemsAttributesFileForDownload, attributes, isSaving, attributesToUpdate } =\n    useItemsAttributeValuesContext();\n\n  const { view, setView } = useItemQueryParams();\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(attributesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(prepareItemsAttributesFileForDownload(), attributes)}\n          fileName=\"items-attribute-values.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider />\n\n      <ItemAttributionStats />\n\n      <FilterSelect\n        label=\"View\"\n        value={view}\n        onChange={setView}\n        options={['classifier', 'sampler', 'grouping', 'comparator', 'simulator', 'stats']}\n      />\n      <Divider />\n\n      {view === 'classifier' && <ItemAttributionClassifierFilters />}\n      {view === 'sampler' && <ItemAttributionSamplerFilters />}\n      {view === 'grouping' && <ItemAttributionGroupingFilters />}\n      {view === 'comparator' && <ItemAttributionComparatorFilters />}\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(\n  itemsAttributes: Dictionary<ItemAtributesValues>,\n  attributes: Dictionary<ItemAttribute>\n) {\n  const total = Object.keys(attributes).length;\n\n  Object.keys(itemsAttributes).forEach((key) => {\n    const itemAttributeValues = itemsAttributes[key];\n\n    // Check completion\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n\n    if (completed === total) {\n      // Add completion\n      itemAttributeValues.complete = true;\n\n      // Add score\n      let unclearCount = 0;\n      const score = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n        if (v <= 0) {\n          if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n            unclearCount += 1;\n          }\n          if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n            acc += v / 2;\n          }\n          return acc;\n        }\n\n        return acc + v;\n      }, 0);\n      itemAttributeValues.score = score;\n\n      // Add reliability\n      itemAttributeValues.reliability = Math.floor(((completed - unclearCount) / total) * 100);\n\n      // Add key with only relevant attributes\n      itemAttributeValues.key = getItemAttributePriorityResponse(itemAttributeValues, attributes, true).join(\n        ''\n      );\n    }\n  });\n\n  return sortJsonKeys(itemsAttributes);\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemAttributionPageContent } from 'components/Items/Attributes/ItemAttributionPageContent';\nimport { ItemAttributionFilters } from 'components/Items/Attributes/ItemAttributionFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport {\n  ItemsAttributeValuesProvider,\n  useItemsAttributeValuesContext,\n} from 'context/ItemsAttributeValuesContext';\n\nfunction ItemsAttributionPage() {\n  const { isLoading, error, hasResponseData } = useItemsAttributeValuesContext();\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Attribution\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemAttributionFilters />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            <ItemAttributionPageContent />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nfunction ItemsAttribution() {\n  return (\n    <ItemsAttributeValuesProvider>\n      <ItemsAttributionPage />\n    </ItemsAttributeValuesProvider>\n  );\n}\n\nexport default ItemsAttribution;\n"],"names":["BrazilFlag","props","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","togglePendingSave","useGlobalContext","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","onClick","disabled","loading","danger","block","ItemSprite","item","width","className","id","title","name","en","pt","ItemId","copyToClipboard","useCopyToClipboardFunction","prefix","nsfw","style","color","placeholder","variant","value","readOnly","ItemName","toUpperCase","ItemNsfw","ItemGoTo","setSearchParams","useSearchParams","shape","itemId","view","ItemsTypeahead","items","isPending","allowClear","onFinish","rest","tdrItemsQuery","useTDResource","Boolean","namesDict","options","useMemo","Object","values","data","reduce","acc","entry","nameEn","namePt","aliasesEn","forEach","alias","aliasesPt","orderBy","keys","toLowerCase","map","filteredOptions","setFilteredOptions","useState","typedText","setTypedText","useDebounce","handleSearch","searchText","SEARCH","trim","filtered","filter","option","String","includes","sorted","idMatch","match","index","indexOf","filterOption","inputValue","onSearch","notFoundContent","length","onSelect","key","undefined","onPressEnter","state","useCopyToClipboard","App","info","truncate","omission","success","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","useQuery","queryKey","queryFn","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","hasResponseData","isEmpty","useTDResourceNonCollection","updateQueryFunction","updateDoc","useUpdateFirebaseDoc","useMutation","mutationFn","useItemQueryParams","searchParams","get","setView","addQueryParam","set","removeQueryParam","delete","globalNewItemsAttributesValues","ItemsAttributeValuesContext","createContext","getItem","getNewItem","getItemAttributeValues","getNewItemAttributeValues","isLoading","error","jumpToItem","activeItem","itemAttributeValues","onAttributeChange","save","attributesList","availableItemIds","addAttributesToUpdate","addMultipleAttributesToUpdate","prepareItemsAttributesFileForDownload","attributes","attributesToUpdate","ItemsAttributeValuesProvider","children","notification","queryClient","useQueryClient","tdrAttributesQuery","tdrItemsAttributesValuesQuery","firebaseItemsAttributeValuesQuery","select","deserializeFirebaseData","modifiedAttributeValues","setModifiedAttributeValues","mutation","onSuccess","refetchQueries","onError","description","savedItemsAttributeValues","firebaseData","decks","Number","storedValue","modifiedValue","merge","mutate","serializeFirebaseData","prev","updatedAt","itemsArr","mapKeys","useItemsAttribution","itemIndex","setItemIndex","random","Provider","direction","attributeId","sortJsonKeys","complete","useItemsAttributeValuesContext","useContext","attributeOptions","label","ATTRIBUTE_VALUE","attributeLimitedOptions","AttributionValueButtons","attribute","onChange","onlyButtons","limited","target","v","optionType","buttonStyle","QuestionCircleOutlined","CheckCircleFilled","ItemAttributeDescription","showUnclear","showUnrelated","filteredResponse","filterMessage","getItemAttributePriorityResponse","Component","AttributeSprite","AttributeText","gap","vertical","wrap","keyVariant","arr","firstElement","lastElement","withText","text","parseAttribute","align","spriteId","clsx","justify","maxWidth","textAlign","wordBreak","suffix","Stat","ItemAttributeStats","completion","isDeterministic","isOpposing","relevancy","total","completed","Math","floor","unclearCount","strong","percent","CloseCircleOutlined","ItemAttributionCard","queryParamsItemId","showOnlyUnset","filteredAttributesList","offsetTop","ItemAttributionNavigation","VerticalRightOutlined","DoubleLeftOutlined","LeftOutlined","RightOutlined","DoubleRightOutlined","VerticalLeftOutlined","content","GoToItemPopOverContent","ItemSamplerCard","sampleIds","onGetSample","updateAttributeValue","itemsLeftForAttribute","setSampleIds","setAttribute","getSample","attributeKey","lodashSample","selectedAttribute","find","a","sampleSize","selected","shuffle","i","push","tempSample","attempts","currentItemAttributeValues","useItemSampler","sample","itemAttributes","unsetItems","actions","ghost","extra","image","Empty","Fragment","GoToTopButton","isVisible","setIsVisible","handleScroll","pageYOffset","scrollTo","top","behavior","VerticalAlignTopOutlined","getStatSentence","stats","scope","group","ItemGroupingCard","pageIds","updatePageItemsAsUnrelated","pagination","sorting","page","pageSize","previousAttribute","setPreviousAttribute","previousScope","setPreviousScope","sortBy","setSortBy","sortOrder","setSortOrder","itemsAttributes","scopeValue","filteredItemIds","slice","start","end","round","current","onShowSizeChange","_","pageSizeOptions","useItemGrouping","isNarrow","useMedia","paginationComponent","sortingComponent","unrelateButton","onConfirm","ItemComparatorCard","itemMessages","grouping","showComplete","itemMessagesDict","itemAttributesValues","itemMessage","fullMessage","join","moreThanOne","ids","keyBy","useItemsComparator","columns","dataIndex","render","sorter","b","localeCompare","groupA","level","dataSource","showQuickJumper","DailyAliemSimulator","simulation","setSimulation","generateDailyAlienGame","simulations","tries","valid","setId","e","number","attr","itemsIds","requests","req","spritesIds","itemsAttributesValues","allAttributes","allItems","spriteIDs","makeArray","selectedAttributes","pop","attributeA","attributeB","attributeC","attributeAB","attributeAC","attributeBC","attributeABC","none","POSITIVE","isVeryValueA","isValueA","isNotValueA","isVeryValueB","isValueB","isNotValueB","isVeryValueC","isValueC","isNotValueC","gameAttributes","max","usedItemsIds","complexRequests","simpleRequests","warn","requestItemsIds","result","sort","solution","every","ROMAN_NUMERALS","ItemSimulation","gridSize","setGridSize","reliabilityThreshold","setReliabilityThreshold","setNsfw","selectedItemsIds","setSelectedItemsIds","setSelectedAttributes","highlightedAttributeKey","setHighlightedAttributeKey","displays","setDisplays","reliability","onUpdateDisplays","step","min","keysDict","shuffledIds","attributesResult","selectedItemsAttributesValues","quantity","attributesCounts","deterministicKeysDict","levelCount","filterCountLevelsAndGuardLevel4","deterministicKeys","nondeterministicKeys","deterministicTiedGroups","sortedDeterministicTiedGroupsKeys","nondeterministicTiedGroups","sortedNondeterministicTiedGroupsKeys","getHighestAttributeKeys","remainingAttributes","toBeAdded","priority","dicts","relatedCount","deterministicCount","oppositeCount","gridTemplateColumns","sqrt","LineChartOutlined","formatter","attributeSummary","CheckSquareOutlined","PlusSquareOutlined","CloseSquareOutlined","ItemStats","AttributesStatsTable","defaultActiveKey","calculateAttributeStats","completionCount","tensCount","fivesCount","zerosCount","negativeOnesCount","negativeThreesCount","negativeTensCount","positiveCount","tensPercentage","fivesPercentage","zerosPercentage","negativeOnesPercentage","negativeThreesPercentage","negativeTensPercentage","positivePercentage","completionPercentage","toFixed","navigate","useNavigate","attributesPool","default","rows","record","parseFloat","count","rowKey","ItemAttributionPageContent","ItemAttributionStats","hasDataCount","initiatedPercentage","progress","progressTotal","currentProgress","someData","isComplete","ItemAttributionClassifierFilters","ItemAttributionSamplerFilters","ItemAttributionGroupingFilters","ATTRIBUTE_GROUP_VALUES","ItemAttributionComparatorFilters","ItemAttributionFilters","JSON","stringify","DownloadButton","score","prepareFileForDownload","fileName","ItemsAttributionPage","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}