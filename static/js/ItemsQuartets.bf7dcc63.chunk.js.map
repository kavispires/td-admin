{"version":3,"file":"static/js/ItemsQuartets.bf7dcc63.chunk.js","mappings":"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","sources":["components/Items/ItemSetsTable.tsx","hooks/useCopyToClipboardFunction.ts","pages/Items/ItemsQuartets.tsx","../node_modules/copy-to-clipboard/index.js","../node_modules/react-use/esm/useSetState.js","../node_modules/react-use/esm/useCopyToClipboard.js","../node_modules/react-use/esm/useMountedState.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import { Flex, Space, Switch, Table, Typography } from 'antd';\nimport { Item } from 'components/Sprites';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { fromPairs, isEqual, orderBy, range, sampleSize } from 'lodash';\nimport { useState } from 'react';\nimport { DailyDiscSet } from 'types';\nimport { removeDuplicates } from 'utils';\nimport { LETTERS } from 'utils/constants';\n\nimport type { TableProps } from 'antd';\n\nfunction orderSets(givenSets: DailyDiscSet[]) {\n  return orderBy(givenSets, [\n    (s) => removeDuplicates(s.itemsIds).filter(Boolean).length > 20,\n    (s) => s.title.pt,\n  ]).map((s) => ({\n    ...s,\n    itemsIds: orderBy(s.itemsIds, (id) => Number(id)),\n  }));\n}\n\nexport function ItemsSetsTable() {\n  const { data } = useTDResource<DailyDiscSet>('daily-disc-sets');\n  const sets = data ? orderSets(Object.values(data)) : [];\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  const columns: TableProps<DailyDiscSet>['columns'] = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      key: 'title',\n      render: (title) => <span>{title.pt}</span>,\n    },\n    {\n      title: 'Items',\n      dataIndex: 'itemsIds',\n      key: 'itemsIds',\n      render: (itemsIds: string[], record) => (\n        <Flex gap={6} wrap=\"wrap\" key={`items-${record.title.en}`}>\n          {itemsIds.map((itemId) => (\n            <Flex key={`${record.title.en}-${itemId}`} gap={2} vertical>\n              <Item id={itemId} width={60} />\n              <Flex justify=\"center\">\n                <Typography.Text onClick={() => copyToClipboard(itemId)}>{itemId}</Typography.Text>\n              </Flex>\n            </Flex>\n          ))}\n        </Flex>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'itemsIds',\n      key: 'count',\n      render: (itemsIds: string[]) => removeDuplicates(itemsIds).filter(Boolean).length,\n    },\n  ];\n\n  const [selectedSet, setSelectedSet] = useState('set');\n\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <Switch\n          checkedChildren=\"Set\"\n          unCheckedChildren=\"Misc\"\n          defaultChecked\n          onChange={() => setSelectedSet(selectedSet === 'set' ? 'misc' : 'set')}\n        />\n      </Space>\n      <Table columns={columns} dataSource={sets} />\n    </Space>\n  );\n}\n\nfunction generateUniqueArrays(sets: Dictionary<DailyDiscSet>, N: number): string[][] {\n  const result: number[][] = [];\n  const nsfwIds = [\n    '239',\n    '331',\n    '256',\n    '383',\n    '420',\n    '433',\n    '584',\n    '683',\n    '769',\n    '1122',\n    '1174',\n    '1188',\n    '1316',\n    '1320',\n    '1388',\n    '1396',\n    '1480',\n    '1549',\n    '1550',\n    '1591',\n    '1677',\n    '1778',\n    '1790',\n    '1792',\n    '1820',\n  ];\n  let previouslyUsedIds: BooleanDictionary = {\n    ...fromPairs(nsfwIds.map((key) => [key, true])),\n  };\n  Object.values(sets).forEach((set) => set.itemsIds.forEach((id) => (previouslyUsedIds[id] = true)));\n\n  let availableRange = range(1, 1858).filter((n) => !previouslyUsedIds[n] && !nsfwIds.includes(String(n)));\n  while (result.length < N) {\n    const randomNumbers = sampleSize(availableRange, 21);\n    if (!result.some((arr) => isEqual(arr, randomNumbers))) {\n      previouslyUsedIds = { ...previouslyUsedIds, ...fromPairs(randomNumbers.map((key) => [key, true])) };\n      availableRange = availableRange.filter((n) => !randomNumbers.includes(n));\n      result.push([0, ...randomNumbers]);\n    }\n  }\n\n  return result.map((arr) => orderBy(arr.map(String), (id) => Number(id)));\n}\n\nexport function generateMiscSets(sets: Dictionary<DailyDiscSet>) {\n  const newSets = generateUniqueArrays(sets, LETTERS.length).map((items, i) => ({\n    title: {\n      pt: `Diversos ${LETTERS[i]}`,\n      en: `Misc ${LETTERS[i]}`,\n    },\n    itemsIds: items,\n  }));\n\n  console.log(JSON.stringify(newSets));\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsSetsTable } from 'components/Items/ItemSetsTable';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyQuartetSet } from 'types';\n\nexport function ItemsQuartets() {\n  const { data, isLoading, error, isSaving, save, addEntryToUpdate, entriesToUpdate, isDirty } =\n    useResourceFirebaseData<DailyQuartetSet>({\n      tdrResourceName: 'daily-quartet-sets',\n      firebaseDataCollectionName: 'quartetSets',\n    });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Quartet Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <>-</>\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={!isEmpty(data)}>\n            <ItemsSetsTable />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsQuartets;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n","import writeText from 'copy-to-clipboard';\nimport { useCallback } from 'react';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\nvar useCopyToClipboard = function () {\n    var isMounted = useMountedState();\n    var _a = useSetState({\n        value: undefined,\n        error: undefined,\n        noUserInteraction: true,\n    }), state = _a[0], setState = _a[1];\n    var copyToClipboard = useCallback(function (value) {\n        if (!isMounted()) {\n            return;\n        }\n        var noUserInteraction;\n        var normalizedValue;\n        try {\n            // only strings and numbers casted to strings can be copied to clipboard\n            if (typeof value !== 'string' && typeof value !== 'number') {\n                var error = new Error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            // empty strings are also considered invalid\n            else if (value === '') {\n                var error = new Error(\"Cannot copy empty string to clipboard.\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            normalizedValue = value.toString();\n            noUserInteraction = writeText(normalizedValue);\n            setState({\n                value: normalizedValue,\n                error: undefined,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n        catch (error) {\n            setState({\n                value: normalizedValue,\n                error: error,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n    }, []);\n    return [state, copyToClipboard];\n};\nexport default useCopyToClipboard;\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["ItemsSetsTable","data","useTDResource","sets","givenSets","Object","values","orderBy","s","removeDuplicates","itemsIds","filter","Boolean","length","title","pt","map","id","Number","copyToClipboard","useCopyToClipboardFunction","columns","dataIndex","key","render","record","gap","wrap","itemId","vertical","width","justify","onClick","en","selectedSet","setSelectedSet","useState","direction","checkedChildren","unCheckedChildren","defaultChecked","onChange","dataSource","state","useCopyToClipboard","message","App","useEffect","value","info","truncate","omission","success","ItemsQuartets","isLoading","error","isSaving","save","addEntryToUpdate","entriesToUpdate","isDirty","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","subtitle","hasSider","className","hasResponseData","isEmpty","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","options","debug","reselectPrevious","range","selection","mark","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","initialState","_a","set","useCallback","patch","prevState","assign","Function","isMounted","mountedRef","useRef","get","current","useMountedState","useSetState","undefined","noUserInteraction","setState","normalizedValue","toString","writeText","MutationObserver","Subscribable","constructor","client","super","this","setOptions","bindMethods","mutate","bind","reset","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","observer","mutationKey","hashKey","status","onUnsubscribe","hasListeners","removeObserver","onMutationUpdate","action","getCurrentResult","variables","build","addObserver","execute","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","context","onSuccess","onSettled","onError","listeners","forEach","listener","useMutation","queryClient","useQueryClient","React","result","onStoreChange","subscribe","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync"],"sourceRoot":""}