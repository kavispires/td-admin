{"version":3,"file":"static/js/Items.244281b9.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/LanguageFlag.tsx","components/Common/PaginationWrapper.tsx","components/Common/SaveButton.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/ResponseState.tsx","components/Items/ItemsTypeahead.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useGetFirebaseDoc.ts","hooks/useGridPagination.tsx","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","context/ItemsContext.tsx","components/Items/ItemCard.tsx","hooks/useItemUpdate.ts","components/Items/Listing/ItemListing.tsx","components/Items/Listing/AddNewItem.tsx","components/Items/Listing/ItemListingFilters.tsx","components/Items/Listing/ItemRandomizer.tsx","components/Items/Listing/ItemSearch.tsx","pages/Items/Items.tsx"],"sourcesContent":["import { Button, type ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | (() => PlainObject);\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, children, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      {children ?? 'Download JSON'}\n    </Button>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Pagination, Space, type SpaceProps, type TableProps } from 'antd';\nimport type { ReactNode } from 'react';\n\ntype PaginationWrapperProps = {\n  children: ReactNode;\n  pagination: TableProps['pagination'];\n} & SpaceProps;\n\nexport function PaginationWrapper({ children, pagination, ...spaceProps }: PaginationWrapperProps) {\n  const paginationComponent = <Pagination showQuickJumper {...pagination} className=\"fixed-pagination\" />;\n  return (\n    <Space direction=\"vertical\" {...spaceProps}>\n      {paginationComponent}\n      {children}\n      {paginationComponent}\n    </Space>\n  );\n}\n","import { Button, type ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { useGlobalContext } from 'context/GlobalContext';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  const { togglePendingSave } = useGlobalContext();\n\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  // biome-ignore lint/correctness/useExhaustiveDependencies: a function shouldn't retrigger the effect\n  useEffect(() => {\n    if (isDirty) {\n      togglePendingSave(true);\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      togglePendingSave(false);\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]);\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { Typography } from 'antd';\nimport type { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { AutoComplete, type AutoCompleteProps, Input } from 'antd';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useDebounce } from 'react-use';\nimport type { Item } from 'types';\n\ntype ItemsTypeaheadProps = {\n  items?: Dictionary<Item>;\n  isPending?: boolean;\n  onFinish: (id: string) => void;\n  onFinishMultiple?: (ids: string[]) => void;\n} & Omit<AutoCompleteProps, 'options'>;\n\nexport function ItemsTypeahead({\n  items,\n  isPending,\n  style,\n  size,\n  placeholder,\n  allowClear,\n  onFinish,\n  onFinishMultiple,\n  ...rest\n}: ItemsTypeaheadProps) {\n  const tdrItemsQuery = useTDResource<Item>('items', !items && !isPending);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  const { namesDict, options } = useMemo(() => {\n    console.log('Recomputing item names typeahead...');\n\n    const namesDict = Object.values(items ?? tdrItemsQuery.data ?? {}).reduce(\n      (acc: Dictionary<string>, entry) => {\n        const nameEn = `${entry.name.en} (${entry.id})`;\n        const namePt = `${entry.name.pt} (${entry.id})`;\n        acc[nameEn] = entry.id;\n        acc[namePt] = entry.id;\n        // Other names\n        if (entry.aliasesEn) {\n          entry.aliasesEn.forEach((alias) => {\n            acc[`${alias} (${entry.id})*`] = entry.id;\n          });\n        }\n        if (entry.aliasesPt) {\n          entry.aliasesPt.forEach((alias) => {\n            acc[`${alias} (${entry.id})*`] = entry.id;\n          });\n        }\n\n        return acc;\n      },\n      {},\n    );\n\n    const options = orderBy(Object.keys(namesDict), [(name) => name.toLowerCase()]).map((name) => ({\n      value: name,\n    }));\n\n    return { namesDict, options };\n  }, [items, isPending]);\n\n  const [filteredOptions, setFilteredOptions] = useState<{ value: string }[]>([]);\n  const [typedText, setTypedText] = useState('');\n\n  useDebounce(\n    () => {\n      if (typedText) {\n        handleSearch(typedText);\n      }\n    },\n    500,\n    [typedText],\n  );\n\n  const handleSearch = (searchText: string) => {\n    if (!searchText) {\n      setFilteredOptions([]);\n      return;\n    }\n\n    const SEARCH = searchText.trim().toUpperCase();\n\n    const filtered = options.filter((option) =>\n      String(option?.value ?? '')\n        .toUpperCase()\n        .includes(SEARCH),\n    );\n\n    const sorted = orderBy(filtered, [\n      (option) => {\n        const value = String(option?.value ?? '').toUpperCase();\n\n        // Exact match\n        if (value === SEARCH) return 0;\n\n        // Full ID match within parentheses\n        const idMatch = value.match(/\\((.*?)\\)/);\n        if (idMatch && idMatch[1] === SEARCH) return 1;\n\n        // Partial match at the beginning\n        const index = value.indexOf(SEARCH);\n        if (index === 0) return 2;\n\n        // Partial match elsewhere\n        if (index > 0) return 3;\n\n        // No match\n        return 4;\n      },\n    ]);\n\n    setFilteredOptions(sorted);\n  };\n\n  const handlePressEnter = () => {\n    if (filteredOptions.length > 0) {\n      const ids = filteredOptions.map((opt) => namesDict[opt.value]).filter(Boolean);\n      if (onFinishMultiple && ids.length > 0) {\n        onFinishMultiple(ids); // Call the new prop with all matches\n      } else if (namesDict[filteredOptions[0].value] !== undefined) {\n        onFinish(namesDict[filteredOptions[0].value]); // Fallback to single onFinish\n      }\n    }\n  };\n\n  const onSelect = (key: any) => {\n    if (namesDict[key] !== undefined) {\n      onFinish(namesDict[key]);\n    }\n  };\n\n  return (\n    <AutoComplete\n      options={filteredOptions}\n      style={{ width: 250, ...style }}\n      allowClear={allowClear ?? true}\n      placeholder={placeholder ?? 'Search by name or id...'}\n      filterOption={(inputValue, option) =>\n        String(option?.value ?? '')\n          .toUpperCase()\n          .indexOf(inputValue?.toUpperCase()) !== -1\n      }\n      onSearch={setTypedText}\n      notFoundContent={typedText.length > 0 ? 'No items found' : 'Type to search...'}\n      onSelect={onSelect}\n      {...rest}\n    >\n      <Input onPressEnter={handlePressEnter} />\n    </AutoComplete>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { type QueryKey, type UseQueryOptions, useQuery } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>,\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import type { TableProps } from 'antd';\nimport { useMemo } from 'react';\n\nimport { usePrevious } from 'react-use';\nimport { useQueryParams } from './useQueryParams';\n\n/**\n * Options for configuring table pagination.\n */\ntype UsePaginationOptions<TData> = {\n  /**\n   * The data array to be paginated.\n   */\n  data: TData[];\n  /**\n   * Only necessary if multiple tables are on the same page.\n   */\n  prefix?: string;\n  /**\n   * The default current page number.\n   */\n  defaultCurrent?: number;\n  /**\n   * The default number of items per page.\n   */\n  defaultPageSize?: number;\n  /**\n   * An array of available page size options.\n   */\n  pageSizeOptions?: number[];\n  /**\n   * The value that triggers the reset of the pagination.\n   */\n  resetter?: string;\n};\n\nexport function useGridPagination<TData>({\n  prefix = '',\n  data,\n  defaultCurrent = 1,\n  defaultPageSize = 64,\n  pageSizeOptions = [16, 32, 64, 128],\n  resetter,\n}: UsePaginationOptions<TData>): {\n  page: TData[];\n  pagination: TableProps['pagination'];\n} {\n  const { queryParams, addParam } = useQueryParams();\n  const currentPage = Number(queryParams.get(`${prefix}page`) ?? String(defaultCurrent));\n  const pageSize = Number(queryParams.get(`${prefix}pageSize`) ?? String(defaultPageSize));\n  const previous = usePrevious(resetter);\n\n  const page = useMemo(() => {\n    const start = (currentPage - 1) * pageSize;\n    const end = start + pageSize;\n    return data.slice(start, end);\n  }, [currentPage, pageSize, data]);\n\n  const onChange = (page: number) => {\n    addParam(`${prefix}page`, page.toString(), String(defaultCurrent));\n  };\n  const onShowSizeChange = (_: number, size: number) => {\n    addParam(`${prefix}pageSize`, size.toString(), String(defaultPageSize));\n  };\n\n  if (resetter !== previous) {\n    onChange(defaultCurrent);\n  }\n\n  return {\n    page,\n    pagination: {\n      current: currentPage,\n      pageSize,\n      onChange,\n      onShowSizeChange,\n      defaultCurrent,\n      defaultPageSize,\n      pageSizeOptions,\n      total: data.length,\n      hideOnSinglePage: true,\n    },\n  };\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffectOnce } from 'react-use';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffectOnce(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  });\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    },\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { type DocumentData, doc, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { type QueryKey, type UseMutationOptions, useMutation } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {},\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { useQueryParams } from 'hooks/useQueryParams';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { orderBy } from 'lodash';\nimport { type ReactNode, createContext, useContext, useMemo } from 'react';\nimport type { Item } from 'types';\n\nexport type ItemsContextType = {\n  items: Dictionary<Item>;\n  isLoading: boolean;\n  error: ResponseError;\n  hasResponseData: boolean;\n  decksDict: Dictionary<string>;\n  decks: { value: string }[];\n  listing: Item[];\n  isDirty: boolean;\n  addItemToUpdate: (id: string, item: Item) => void;\n  itemsToUpdate: Dictionary<Item>;\n  isSaving: boolean;\n  save: () => void;\n  newId: string;\n};\n\nconst ItemsContext = createContext<ItemsContextType>({\n  items: {},\n  isLoading: true,\n  error: null,\n  hasResponseData: false,\n  decksDict: {},\n  decks: [],\n  listing: [],\n  isDirty: false,\n  addItemToUpdate: () => {},\n  itemsToUpdate: {},\n  isSaving: false,\n  save: () => {},\n  newId: '-1',\n});\n\ntype ItemsProviderProps = {\n  children: ReactNode;\n};\n\nexport const ItemsProvider = ({ children }: ItemsProviderProps) => {\n  const { queryParams } = useQueryParams();\n\n  const {\n    data: items,\n    isLoading,\n    error,\n    isSaving,\n    save,\n    addEntryToUpdate: addItemToUpdate,\n    entriesToUpdate: itemsToUpdate,\n    isDirty,\n  } = useResourceFirebaseData<Item>({\n    tdrResourceName: 'items',\n    firebaseDataCollectionName: 'items',\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  const { decksDict, decks } = useMemo(() => {\n    console.log('Recomputing item decks typeahead...');\n    const decksDict: Dictionary<string> = {};\n    const duplicationCheckEn: Dictionary<string> = {};\n    const duplicationCheckPt: Dictionary<string> = {};\n    const duplicatedNames: string[][] = [];\n\n    Object.values(items).forEach((entry) => {\n      const nameEn = `${entry.name.en} (${entry.id})`;\n      const namePt = `${entry.name.pt} (${entry.id})`;\n\n      if (duplicationCheckEn[entry.name.en]) {\n        duplicatedNames.push([`${entry.name.en} (${duplicationCheckEn[entry.name.en]})`, nameEn]);\n      } else {\n        duplicationCheckEn[entry.name.en] = entry.id;\n      }\n      if (duplicationCheckPt[entry.name.pt]) {\n        duplicatedNames.push([`${entry.name.pt} (${duplicationCheckPt[entry.name.pt]})`, namePt]);\n      } else {\n        duplicationCheckPt[entry.name.pt] = entry.id;\n      }\n\n      entry?.decks?.forEach((deck) => {\n        decksDict[deck] = deck;\n      });\n    });\n\n    const decks = orderBy(Object.keys(decksDict)).map((name) => ({ value: name }));\n\n    if (duplicatedNames.length > 0) {\n      console.warn('Possible duplicated items', duplicatedNames);\n    }\n\n    return { decksDict, decks };\n  }, [items, isSaving, isLoading]);\n\n  const deck = queryParams.get('deck') ?? 'all';\n  const listing = useMemo(() => {\n    const orderedList = orderBy(Object.values(items), [(item) => Number(item.id)], 'asc');\n\n    switch (deck) {\n      case 'all':\n        return orderedList;\n      case '!all':\n        return orderedList.filter((item) => !item?.decks?.length || true);\n      case 'nsfw':\n        return orderedList.filter((item) => item.nsfw);\n      case '!nsfw':\n        return orderedList.filter((item) => !item.nsfw);\n      default:\n        if (deck.startsWith('!')) {\n          return orderedList.filter((item) => !item?.decks?.includes(deck.slice(1)));\n        }\n        return orderedList.filter((item) => item?.decks?.includes(deck));\n    }\n  }, [items, deck]);\n\n  // Handle id for new items\n  const newId = useMemo(() => {\n    const newIds = orderBy(Object.keys(itemsToUpdate), [(id) => Number(id)], 'asc');\n    const latestSavedId = listing[listing.length - 1]?.id;\n    const newestId = orderBy([...newIds, latestSavedId], [(id) => Number(id)], 'desc')[0];\n    return String(Number(newestId) + 1);\n  }, [listing, itemsToUpdate]);\n\n  return (\n    <ItemsContext.Provider\n      value={{\n        items,\n        listing,\n        isLoading,\n        error,\n        decksDict,\n        decks,\n        hasResponseData: listing.length > 0,\n        isDirty,\n        addItemToUpdate,\n        isSaving,\n        save,\n        itemsToUpdate,\n        newId,\n      }}\n    >\n      {children}\n    </ItemsContext.Provider>\n  );\n};\n\nexport const useItemsContext = () => useContext(ItemsContext);\n","import { Button, Card, Flex, Form, Input, Popover, Select, Space, Switch, Typography } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { useItemsContext } from 'context/ItemsContext';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { useItemUpdate } from 'hooks/useItemUpdate';\nimport { memoize, snakeCase } from 'lodash';\nimport type { Item as ItemT } from 'types';\n\nimport { EditOutlined, FireFilled, MenuOutlined, RollbackOutlined, SaveOutlined } from '@ant-design/icons';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { useToggle } from 'react-use';\n\ntype ItemCardProps = {\n  item: ItemT;\n  editMode?: boolean;\n  simplified?: boolean;\n};\n\nexport function ItemCard({ item, editMode = false, simplified }: ItemCardProps) {\n  const { decks } = useItemsContext();\n  const { isEditing, toggleEditMode, onEdit, isDirty, onModify, onReset, editableItem } = useItemUpdate(\n    item,\n    editMode,\n  );\n  const copyToClipboard = useCopyToClipboardFunction();\n  const { is } = useQueryParams();\n\n  return (\n    <Card\n      title={<Typography.Text onClick={() => copyToClipboard(item.id)}>{item.id}</Typography.Text>}\n      extra={<ItemPopoverOptions item={item} />}\n      style={{ maxWidth: 250 }}\n      size={simplified ? 'small' : 'default'}\n      actions={\n        simplified\n          ? undefined\n          : isDirty\n            ? [\n                <RollbackOutlined key=\"reset\" onClick={onReset} />,\n                <SaveOutlined key=\"save\" onClick={onModify} />,\n              ]\n            : [<EditOutlined key=\"edit\" onClick={toggleEditMode} />]\n      }\n    >\n      <Item id={item.id} width={simplified ? 75 : 125} title={`${item.name.en} | ${item.name.pt}`} />\n      <Space size=\"small\" direction=\"vertical\" className=\"my-4\">\n        <Input\n          prefix={<LanguageFlag language=\"en\" width=\"1em\" />}\n          placeholder=\"Name in EN\"\n          variant={isEditing ? 'outlined' : 'borderless'}\n          size=\"small\"\n          defaultValue={item.name.en}\n          readOnly={!isEditing}\n          key={`en-${item.name.en}`}\n          onChange={(e) => onEdit({ name: { ...editableItem.name, en: e.target.value } })}\n        />\n        <Input\n          prefix={<LanguageFlag language=\"pt\" width=\"1em\" />}\n          placeholder=\"Name in PT\"\n          variant={isEditing ? 'outlined' : 'borderless'}\n          size=\"small\"\n          defaultValue={item.name.pt}\n          readOnly={!isEditing}\n          key={`pt-${item.name.pt}`}\n          onChange={(e) => onEdit({ name: { ...editableItem.name, pt: e.target.value } })}\n        />\n        {!simplified && (\n          <>\n            {!is('simplified') && (\n              <>\n                <div>\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: '100%' }}\n                    placeholder=\"Select a deck\"\n                    defaultValue={item.decks}\n                    disabled={!isEditing}\n                    options={decks}\n                    variant={isEditing ? 'outlined' : 'borderless'}\n                    size=\"small\"\n                    key={String(item.decks)}\n                    onChange={(value) => onEdit({ decks: value.sort() })}\n                  />\n                </div>\n\n                <Flex gap={6}>\n                  <LanguageFlag language=\"en\" width=\"1em\" />\n                  <Select\n                    mode=\"tags\"\n                    style={{ width: '100%' }}\n                    placeholder=\"Other names EN\"\n                    defaultValue={item.aliasesEn}\n                    options={[]}\n                    size=\"small\"\n                    onChange={(aliasesEn) => onEdit({ aliasesEn: aliasesEn.sort() })}\n                  />\n                </Flex>\n\n                <Flex gap={6}>\n                  <LanguageFlag language=\"pt\" width=\"1em\" />\n                  <Select\n                    mode=\"tags\"\n                    style={{ width: '100%' }}\n                    placeholder=\"Other names PT\"\n                    defaultValue={item.aliasesPt}\n                    options={[]}\n                    size=\"small\"\n                    onChange={(aliasesPt) => onEdit({ aliasesPt: aliasesPt.sort() })}\n                  />\n                </Flex>\n              </>\n            )}\n\n            {is('showVerifyThing') && (\n              <div>\n                <VerifyIfThing item={item} />\n              </div>\n            )}\n            {(isEditing || item.nsfw) && (\n              <div>\n                <Form.Item label=\"nsfw\" valuePropName=\"checked\">\n                  <Switch\n                    checked={item.nsfw}\n                    onChange={(checked) => onEdit({ nsfw: checked })}\n                    size=\"small\"\n                    checkedChildren={<FireFilled style={{ color: 'hotpink' }} />}\n                    disabled={!isEditing}\n                  />\n                </Form.Item>\n              </div>\n            )}\n          </>\n        )}\n      </Space>\n    </Card>\n  );\n}\n\ntype VerifyIfThingProps = {\n  item: ItemT;\n};\n\nconst verifyIfThingCheck = memoize((item: ItemT) => {\n  const hasThing = !!item.decks?.includes('thing');\n  const hasManufactured = !!item.decks?.includes('manufactured');\n  const singleWordNameEn = item.name.en.split(' ').length === 1;\n  const singleWordNamePt = item.name.pt.split(' ').length === 1;\n\n  const result = {\n    en: hasThing || (singleWordNameEn && hasManufactured),\n    pt: hasThing || (singleWordNamePt && hasManufactured),\n  };\n\n  if (!result.pt && !result.en) return '';\n\n  return (\n    <>\n      {result.en && <LanguageFlag language=\"en\" width=\"1em\" />}\n      {result.pt && <LanguageFlag language=\"pt\" width=\"1em\" />}\n    </>\n  );\n});\n\nconst VerifyIfThing = ({ item }: VerifyIfThingProps) => {\n  const result = verifyIfThingCheck(item);\n\n  if (result) {\n    return <Flex gap={6}>Thing: {result}</Flex>;\n  }\n\n  return <></>;\n};\n\nexport type EscapeRoomItemCard = {\n  /**\n   * The unique identifier of the card.\n   * Usually used to verify the end game played cards condition.\n   */\n  id: string;\n  /**\n   * The type of the card.\n   */\n  type: 'item';\n  /**\n   * The header of the card\n   */\n  header: {\n    /**\n     * The title of the header in both languages.\n     */\n    title: DualLanguageValue;\n    /**\n     * Illustrative small icon in the header.\n     */\n    iconId?: string;\n  };\n  /**\n   * The metadata of the card.\n   */\n  metadata?: {\n    /**\n     * The level of the card to determine the difficulty.\n     */\n    level: 'basic';\n    /**\n     * When played, adds this keyword to the result.\n     */\n    keyword?: string;\n  };\n  content: {\n    /**\n     * The item id for the Item Sprite\n     */\n    itemId: string;\n    /**\n     * Descriptive text of the item, usually its name\n     */\n    caption?: DualLanguageValue;\n  };\n};\n\nconst buildEscapeRoomItemCard = (item: ItemT): EscapeRoomItemCard => ({\n  id: item.id,\n  type: 'item',\n  header: {\n    title: {\n      en: 'Item',\n      pt: 'Item',\n    },\n    iconId: '2077',\n  },\n  metadata: {\n    level: 'basic',\n    keyword: snakeCase(item.name.en).toUpperCase(),\n  },\n  content: {\n    itemId: item.id,\n    caption: item.name,\n  },\n});\n\nexport function ItemPopoverOptions({ item }: Pick<ItemCardProps, 'item'>) {\n  const [open, toggleOpen] = useToggle(false);\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <Popover\n      content={\n        <Space direction=\"vertical\">\n          <Button size=\"small\" onClick={() => copyToClipboard(JSON.stringify(item, null, 2))}>\n            Complete Item\n          </Button>\n          <Button size=\"small\" onClick={() => copyToClipboard(item.name.en)}>\n            EN Name\n          </Button>\n          <Button size=\"small\" onClick={() => copyToClipboard(item.name.pt)}>\n            PT Name\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={() => copyToClipboard(JSON.stringify(buildEscapeRoomItemCard(item), null, 2))}\n          >\n            Escape Room Item\n          </Button>\n        </Space>\n      }\n      title=\"Copy\"\n      trigger=\"click\"\n      open={open}\n      onOpenChange={toggleOpen}\n    >\n      <Button type=\"text\" icon={<MenuOutlined />} />\n    </Popover>\n  );\n}\n","import { useItemsContext } from 'context/ItemsContext';\nimport { cloneDeep } from 'lodash';\nimport { useState } from 'react';\nimport type { Item as ItemT } from 'types';\n\nexport function useItemUpdate(currentItem: ItemT, editMode = false) {\n  const { addItemToUpdate, itemsToUpdate } = useItemsContext();\n  const [isEditing, setEditing] = useState(editMode);\n  const [editableItem, setEditableItem] = useState<ItemT>(cloneDeep(currentItem));\n  const originalItem = itemsToUpdate[currentItem.id] ?? currentItem;\n\n  const onEdit = (change: Partial<ItemT>) => {\n    const newItem = { ...cloneDeep(editableItem), ...change };\n    if (Object.keys(change).includes('nsfw') && change.nsfw === false) {\n      newItem.nsfw = undefined;\n    }\n    setEditableItem(newItem);\n  };\n\n  const onModify = async () => {\n    addItemToUpdate(editableItem.id, editableItem);\n  };\n\n  const onReset = () => {\n    setEditableItem(cloneDeep(currentItem));\n    setEditing(false);\n  };\n\n  const isDirty = JSON.stringify(originalItem) !== JSON.stringify(editableItem);\n\n  return {\n    isEditing,\n    toggleEditMode: () => setEditing((e) => !e),\n    editableItem,\n    onEdit,\n    isDirty,\n    onModify,\n    onReset,\n  };\n}\n","import { Flex, Typography } from 'antd';\nimport { PaginationWrapper } from 'components/Common/PaginationWrapper';\nimport { useItemsContext } from 'context/ItemsContext';\nimport { useGridPagination } from 'hooks/useGridPagination';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { capitalize } from 'lodash';\nimport { ItemCard } from '../ItemCard';\n\nexport function ItemListing() {\n  const { queryParams } = useQueryParams();\n  const listingType = queryParams.get('deck') ?? 'all';\n  const { listing } = useItemsContext();\n\n  const { page, pagination } = useGridPagination({ data: listing, resetter: listingType });\n\n  const { is } = useQueryParams();\n  const isSimplified = is('simplified');\n\n  return (\n    <>\n      <Typography.Title level={2}>\n        Listing - {capitalize(listingType)} items ({listing.length})\n      </Typography.Title>\n\n      <PaginationWrapper pagination={pagination} className=\"full-width\">\n        <Flex gap={16} wrap=\"wrap\">\n          {page.map((item) => (\n            <ItemCard key={item.id} item={item} simplified={isSimplified} />\n          ))}\n        </Flex>\n      </PaginationWrapper>\n    </>\n  );\n}\n","import { Button, Modal } from 'antd';\nimport { useItemsContext } from 'context/ItemsContext';\nimport { cloneDeep } from 'lodash';\nimport { useState } from 'react';\nimport { ItemCard } from '../ItemCard';\n\nconst PLACEHOLDER_ITEM = {\n  id: '',\n  name: {\n    en: '',\n    pt: '',\n  },\n  groups: [],\n};\n\ntype NewItemModalProps = {\n  isModalOpen: boolean;\n  handleOk: () => void;\n  handleCancel: () => void;\n  newId: string;\n};\n\nfunction NewItemModal({ isModalOpen, handleOk, handleCancel, newId }: NewItemModalProps) {\n  const [newItem] = useState(cloneDeep({ ...PLACEHOLDER_ITEM, id: newId }));\n  return (\n    <Modal title=\"Add new item\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n      <ItemCard item={newItem} editMode />\n    </Modal>\n  );\n}\n\nexport function AddNewItem() {\n  const [isModalOpen, setOpenModal] = useState(false);\n\n  const { newId } = useItemsContext();\n\n  const showModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleOk = () => {\n    setOpenModal(false);\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <Button block onClick={showModal}>\n        Add New Item\n      </Button>\n      {isModalOpen && (\n        <NewItemModal\n          isModalOpen={isModalOpen}\n          handleOk={handleOk}\n          handleCancel={handleCancel}\n          newId={newId}\n          key={newId}\n        />\n      )}\n    </>\n  );\n}\n","import { OpenAIOutlined } from '@ant-design/icons';\nimport { Divider, Flex, Typography } from 'antd';\nimport { FilterSelect, FilterSwitch } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useItemsContext } from 'context/ItemsContext';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { capitalize, cloneDeep, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport type { Item } from 'types';\nimport { deepCleanObject, sortJsonKeys } from 'utils';\nimport { AddNewItem } from './AddNewItem';\n\nexport function ItemListingFilters() {\n  const { isDirty, save, items, decks, itemsToUpdate, isSaving } = useItemsContext();\n  const { queryParams, is, addParam } = useQueryParams();\n\n  const deckOptions = useMemo(() => {\n    const includingOptions = orderBy(\n      decks.map(({ value }) => ({ label: capitalize(value), value })),\n      'label',\n    );\n    const excludingOptions = includingOptions.map(({ label, value }) => ({\n      label: `NOT ${label}`,\n      value: `!${value}`,\n    }));\n    return [...includingOptions, ...excludingOptions];\n  }, [decks]);\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={6}>\n        <SaveButton\n          isDirty={isDirty}\n          dirt={JSON.stringify(itemsToUpdate)}\n          onSave={save}\n          isSaving={isSaving}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(items)}\n          fileName=\"items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider className=\"my-4\" />\n\n      <Typography.Text type=\"secondary\">Tools</Typography.Text>\n\n      <FilterSwitch\n        label=\"Show Search\"\n        value={!is('hideSearch')}\n        onChange={(v) => addParam('hideSearch', v ? '' : 'true', '')}\n        className=\"full-width m-0\"\n      />\n\n      <FilterSwitch\n        label=\"Show Randomizer\"\n        value={is('showRandomizer')}\n        onChange={(v) => addParam('showRandomizer', v ? 'true' : '', '')}\n        className=\"full-width m-0\"\n      />\n\n      <Typography.Text type=\"secondary\">Display</Typography.Text>\n\n      <FilterSwitch\n        label=\"Simplified UI\"\n        value={is('simplified')}\n        onChange={(v) => addParam('simplified', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Thing Verifier\"\n        value={is('showVerifyThing')}\n        onChange={(v) => addParam('showVerifyThing', v ? 'true' : '')}\n        className=\"full-width m-0\"\n        disabled={is('simplified')}\n      />\n      <FilterSwitch\n        label=\"Other Names\"\n        value={is('showOtherNames')}\n        onChange={(v) => addParam('showOtherNames', v ? 'true' : '')}\n        className=\"full-width m-0\"\n        disabled\n      />\n\n      <Divider className=\"my-4\" />\n\n      <FilterSelect\n        label=\"Deck\"\n        value={queryParams.get('deck') ?? 'all'}\n        onChange={(value) => addParam('deck', value, 'all')}\n        options={[\n          { label: 'All', value: 'all' },\n          { label: 'NSFW', value: 'nsfw' },\n          { label: 'SFW', value: '!nsfw' },\n          ...deckOptions,\n          { label: 'No decks', value: '!all' },\n        ]}\n      />\n\n      <Divider className=\"my-4\" />\n\n      <AddNewItem />\n\n      <Divider className=\"my-4\" />\n\n      <DownloadButton\n        data={() => prepareOpenAIFileForDownload(items)}\n        fileName=\"items-gpt.json\"\n        disabled={isDirty}\n        block\n        icon={<OpenAIOutlined />}\n      >\n        Open AI JSON\n      </DownloadButton>\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(items: Dictionary<Item>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(items);\n\n  Object.values(copy).reduce((acc: Dictionary<Item>, item) => {\n    // Sort deck\n    item.decks = (item?.decks ?? []).sort();\n\n    // Remove decks if no deck is present\n    if (item.decks.length === 0) {\n      item.decks = undefined;\n    }\n\n    acc[item.id] = item;\n    return acc;\n  }, {});\n\n  return sortJsonKeys(deepCleanObject(copy));\n}\n\ntype OpenAiItem = {\n  id: string;\n  names: {\n    'en-US': string;\n    'pt-BR': string;\n  };\n  aliases: {\n    'en-US'?: string[];\n    'pt-BR'?: string[];\n  };\n};\n\nfunction prepareOpenAIFileForDownload(items: Dictionary<Item>) {\n  return sortJsonKeys(\n    Object.values(cloneDeep(items)).reduce((acc: Dictionary<OpenAiItem>, item) => {\n      const entry = {\n        id: item.id,\n        names: {\n          'en-US': item.name.en,\n          'pt-BR': item.name.pt,\n        },\n        aliases: {\n          'en-US': item.aliasesEn,\n          'pt-BR': item.aliasesPt,\n        },\n      };\n\n      acc[entry.id] = entry;\n      return acc;\n    }, {}),\n  );\n}\n","import { Button, Divider, Dropdown, Flex, Form, InputNumber, Space, Typography } from 'antd';\nimport { useState } from 'react';\nimport type { Item as ItemT } from 'types';\n\nimport { CopyOutlined } from '@ant-design/icons';\nimport { useItemsContext } from 'context/ItemsContext';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { chunk, sampleSize } from 'lodash';\nimport { ItemCard } from '../ItemCard';\n\nexport function ItemRandomizer() {\n  const { listing } = useItemsContext();\n  const [randomItems, setRandomItems] = useState<ItemT[]>([]);\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  const [sampleQuantity, setSampleQuantity] = useState(5);\n\n  const onRandomSample = () => {\n    setRandomItems(sampleSize(listing, sampleQuantity));\n  };\n\n  const items = [\n    { label: 'Copy IDs', key: 'copy_ids' },\n    { label: 'Copy Names EN', key: 'copy_names_en' },\n    { label: 'Copy Names PT', key: 'copy_names_pt' },\n  ];\n\n  const onMenuClick = ({ key }: { key: string }) => {\n    if (key === 'copy_ids') {\n      const ids = randomItems.map((item) => item.id);\n      copyToClipboard(JSON.stringify(ids));\n      return;\n    }\n\n    if (key === 'copy_names_en') {\n      const names = randomItems.map((item) => item.name.en).join(', ');\n      copyToClipboard(names);\n      return;\n    }\n\n    if (key === 'copy_names_pt') {\n      const names = randomItems.map((item) => item.name.pt).join(', ');\n      copyToClipboard(names);\n      return;\n    }\n  };\n\n  const onGenerateMidjourneySample = () => {\n    const str = chunk(sampleSize(listing, sampleQuantity * 15), sampleQuantity)\n      .map((entries) => entries.filter((entry) => !entry.nsfw))\n      .map((entries) => entries.map((entry) => entry.name.en).join(', '))\n      .map((entry, index) => `${index + 1}) ${entry}`)\n      .join('\\n');\n    copyToClipboard(str);\n  };\n\n  return (\n    <div>\n      <Typography.Title level={2}>\n        Randomized Sample{' '}\n        <Button size=\"small\" icon={<CopyOutlined />} onClick={onGenerateMidjourneySample}>\n          MJ\n        </Button>\n      </Typography.Title>\n\n      <Flex gap={12}>\n        <Form.Item label=\"Quantity\"></Form.Item>\n        <div>\n          <InputNumber\n            min={3}\n            max={15}\n            value={sampleQuantity}\n            onChange={(v) => setSampleQuantity(Number(v))}\n            style={{ minWidth: '100px' }}\n          />\n        </div>\n        <Button onClick={onRandomSample} type=\"primary\">\n          Get Sample\n        </Button>\n\n        <Dropdown.Button\n          menu={{ items, onClick: onMenuClick }}\n          disabled={randomItems.length === 0}\n          onClick={() => copyToClipboard(JSON.stringify(randomItems, null, 2))}\n          icon={<CopyOutlined />}\n        >\n          Copy\n        </Dropdown.Button>\n      </Flex>\n\n      <Space wrap className=\"my-4\">\n        {randomItems.map((item) => (\n          <ItemCard key={item.id} item={item} simplified />\n        ))}\n      </Space>\n    </div>\n  );\n}\n","import { Button, Divider, Flex, Space, Typography } from 'antd';\nimport { Fragment, useState } from 'react';\nimport type { Item as ItemT } from 'types';\n\nimport { EnvironmentOutlined } from '@ant-design/icons';\nimport { useItemsContext } from 'context/ItemsContext';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { ItemCard } from '../ItemCard';\nimport { ItemsTypeahead } from '../ItemsTypeahead';\n\nexport function ItemSearch() {\n  const { items, isLoading, isSaving } = useItemsContext();\n  const [activeItems, setActiveItems] = useState<ItemT[] | null>(null);\n  const { queryParams, addParam } = useQueryParams();\n\n  const onFindInListing = (itemId: string) => {\n    const pageSize = Number(queryParams.get('pageSize') ?? 64);\n    const idNum = Number(itemId);\n    const page = Math.floor(idNum / pageSize) + 1;\n    addParam('page', page.toString());\n  };\n\n  return (\n    <Fragment key={`item-search-${isLoading}`}>\n      <Typography.Title level={2}>Search for an item</Typography.Title>\n\n      <div>\n        <ItemsTypeahead\n          items={items}\n          isPending={isLoading || isSaving}\n          onFinish={() => {}}\n          onFinishMultiple={(ids) => setActiveItems(ids.map((id) => items[id]))}\n        />\n      </div>\n\n      <Flex className=\"my-4\" gap={8}>\n        {activeItems?.map((item) => (\n          <Space direction=\"vertical\" className=\"my-4\" key={item.id}>\n            <ItemCard item={item} />\n            <Button onClick={() => onFindInListing(item.id)} block icon={<EnvironmentOutlined />}>\n              Find in listing\n            </Button>\n          </Space>\n        ))}\n      </Flex>\n    </Fragment>\n  );\n}\n","import { Divider, Layout, Space } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemListing } from 'components/Items/Listing/ItemListing';\nimport { ItemListingFilters } from 'components/Items/Listing/ItemListingFilters';\nimport { ItemRandomizer } from 'components/Items/Listing/ItemRandomizer';\nimport { ItemSearch } from 'components/Items/Listing/ItemSearch';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { ItemsProvider, useItemsContext } from 'context/ItemsContext';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\nfunction ItemsPage() {\n  const { isLoading, error, hasResponseData } = useItemsContext();\n  const { is } = useQueryParams();\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Listing\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemListingFilters />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            {!isLoading && (\n              <>\n                <Space size=\"large\" align=\"start\">\n                  {!is('hideSearch') && <ItemSearch />}\n                  {is('showRandomizer') && <ItemRandomizer />}\n                </Space>\n                <Divider />\n              </>\n            )}\n            <ItemListing />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nfunction Items() {\n  return (\n    <ItemsProvider>\n      <ItemsPage />\n    </ItemsProvider>\n  );\n}\n\nexport default Items;\n"],"names":["DownloadButton","data","fileName","loading","children","props","onClick","downloadObjectAsFile","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","PaginationWrapper","pagination","spaceProps","paginationComponent","showQuickJumper","className","direction","SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","togglePendingSave","useGlobalContext","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","disabled","danger","block","SectionTitle","level","rest","TransparentButton","active","activeClass","hoverType","clsx","TagState","isLoading","isIdle","error","isError","hasResponseData","color","ResponseState","label","ItemsTypeahead","items","isPending","style","placeholder","allowClear","onFinish","onFinishMultiple","tdrItemsQuery","useTDResource","namesDict","options","useMemo","Object","values","reduce","acc","entry","nameEn","name","en","id","namePt","pt","aliasesEn","forEach","alias","aliasesPt","orderBy","keys","toLowerCase","map","value","filteredOptions","setFilteredOptions","useState","typedText","setTypedText","useDebounce","handleSearch","searchText","SEARCH","trim","toUpperCase","filtered","filter","option","String","includes","sorted","idMatch","match","index","indexOf","width","filterOption","inputValue","onSearch","notFoundContent","length","onSelect","key","undefined","onPressEnter","ids","opt","Boolean","useCopyToClipboardFunction","state","copyToClipboard","useCopyToClipboard","App","info","truncate","omission","success","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","useQuery","queryKey","queryFn","useGridPagination","prefix","defaultCurrent","defaultPageSize","pageSizeOptions","resetter","queryParams","addParam","useQueryParams","currentPage","Number","get","pageSize","previous","usePrevious","page","start","end","slice","onChange","toString","current","onShowSizeChange","_","total","hideOnSinglePage","defaultParams","searchParams","setSearchParams","useSearchParams","defaultValue","delete","set","addParams","params","defaultValues","entries","removeParam","is","useEffectOnce","has","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","queryClient","useQueryClient","tdrQuery","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","mutation","useUpdateFirebaseDoc","onSuccess","refetchQueries","onError","description","isSuccess","cloneDeep","isEmpty","firebaseData","save","mutate","serializeFirebaseData","addEntryToUpdate","item","prev","entriesToUpdate","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","useTDResourceNonCollection","updateQueryFunction","updateDoc","useMutation","mutationFn","ItemsContext","createContext","decksDict","decks","listing","addItemToUpdate","itemsToUpdate","newId","ItemsProvider","duplicationCheckEn","duplicationCheckPt","duplicatedNames","push","deck","warn","orderedList","nsfw","startsWith","newIds","latestSavedId","newestId","Provider","useItemsContext","useContext","ItemCard","editMode","simplified","isEditing","toggleEditMode","onEdit","onModify","onReset","editableItem","currentItem","setEditing","setEditableItem","originalItem","change","newItem","JSON","stringify","e","useItemUpdate","title","extra","ItemPopoverOptions","maxWidth","actions","RollbackOutlined","SaveOutlined","EditOutlined","variant","readOnly","target","mode","sort","gap","VerifyIfThing","valuePropName","checked","checkedChildren","FireFilled","verifyIfThingCheck","memoize","hasThing","hasManufactured","singleWordNameEn","split","singleWordNamePt","result","open","toggleOpen","useToggle","content","header","iconId","metadata","keyword","snakeCase","itemId","caption","buildEscapeRoomItemCard","trigger","onOpenChange","MenuOutlined","ItemListing","listingType","isSimplified","capitalize","wrap","PLACEHOLDER_ITEM","groups","NewItemModal","isModalOpen","handleOk","handleCancel","onOk","onCancel","AddNewItem","setOpenModal","ItemListingFilters","deckOptions","includingOptions","excludingOptions","vertical","copy","sortJsonKeys","deepCleanObject","prepareFileForDownload","v","names","aliases","prepareOpenAIFileForDownload","OpenAIOutlined","ItemRandomizer","randomItems","setRandomItems","sampleQuantity","setSampleQuantity","CopyOutlined","str","chunk","sampleSize","join","min","max","minWidth","menu","ItemSearch","activeItems","setActiveItems","Fragment","idNum","Math","floor","onFindInListing","EnvironmentOutlined","ItemsPage","subtitle","hasSider","PageSider","DataLoadingWrapper","align"],"sourceRoot":""}