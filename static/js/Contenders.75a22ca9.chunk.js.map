{"version":3,"file":"static/js/Contenders.75a22ca9.chunk.js","mappings":"6LAMO,SAASA,EAAwCC,GAAiD,IAA5BC,EAA2B,uDAAJ,GAClG,MAAMC,EAAOC,OAAOD,KAClBC,OAAOC,OAAOJ,GAAMK,QAAO,CAACC,EAA0BC,KACpDJ,OAAOD,KAAKK,GAAOC,SAASC,IACrBH,EAAIG,IAASR,EAAWS,SAASD,KACpCH,EAAIG,IAAO,EACZ,IAGIH,IACN,CAAC,IAGAK,EAAyB,GACzBC,EAAyE,GAsB/E,OApBAV,EAAKM,SAASC,IACZ,MAAML,EAASD,OAAOC,OAAOJ,GAAMa,KAAKN,GAAUA,EAAME,KAClDK,EAAeC,MAAMC,KAAK,IAAIC,IAAIb,IAClCc,EAAmBJ,EAAaK,OAASf,EAAOe,OAElDD,GAAoB,KACtBP,EAAaS,KAAKX,GAGhBS,GAAoB,IACtBN,EAAQQ,KAAK,CACXC,MAAOZ,EACPa,QAAS,CACP,CAAED,MAAO,MAAOE,MAAO,OACpBT,EAAaU,OAAOX,KAAKU,IAAD,CAAcF,MAAOI,OAAOF,GAAQA,cAGpE,IAGI,CAAEX,UAASD,eACnB,CAOM,SAASe,EAAT,GAA6F,IAAD,QAAhD,KAAE1B,EAAF,WAAQC,EAAa,IAA2B,EACjG,MAAM,YAAE0B,EAAF,SAAeC,IAAaC,EAAAA,EAAAA,KAC5BjB,GAAUkB,EAAAA,EAAAA,UAAQ,IAAM/B,EAAiBC,EAAMC,IAAa,CAACD,EAAMC,IAEzE,OACE,UAAC,IAAD,CAAM8B,UAAQ,EAACC,MAAO,CAAEC,UAAW,QAAnC,UACGrB,EAAQA,QAAQC,KAAKqB,IAAD,aACnB,SAAC,KAAD,CAEEb,OAAOc,EAAAA,EAAAA,YAAWD,EAAOb,OACzBC,QAASY,EAAOZ,QAChBc,SAAWb,GAAUK,EAASM,EAAOb,MAAMgB,cAAed,GAC1DA,MAAK,UAAEI,EAAYW,IAAIJ,EAAOb,MAAMgB,sBAA/B,QAAiD,IAJjDH,EAAOb,MAFK,KAUrB,SAAC,KAAD,CACEA,MAAM,UACNC,QAASV,EAAQD,aAAaE,KAAKJ,IAAD,CAAYY,OAAOc,EAAAA,EAAAA,YAAW1B,GAAMc,MAAOd,MAC7E2B,SAAWb,GAAUK,EAAS,OAAQL,GACtCA,MAAK,UAAEI,EAAYW,IAAI,eAAlB,QAA6B,MAGpC,SAAC,KAAD,CACEjB,MAAM,QACNC,QAAS,CACP,CAAED,MAAO,YAAaE,MAAO,OAC7B,CAAEF,MAAO,aAAcE,MAAO,SAEhCa,SAAWb,GAAUK,EAAS,QAASL,GACvCA,MAAK,UAAEI,EAAYW,IAAI,gBAAlB,QAA8B,UAI1C,CAEM,SAASC,EAAkDvC,GAAsB,IAAD,EACrF,MAAM,YAAE2B,IAAgBE,EAAAA,EAAAA,KAClBjB,GAAUkB,EAAAA,EAAAA,UAAQ,IAAM/B,EAAiBC,IAAO,CAACA,IACjDwC,GAAoBV,EAAAA,EAAAA,UAAQ,IACzBf,MAAMC,KAAKW,EAAYc,WAC3BP,QAAO,IAAY,IAAVzB,GAAS,EACjB,OAAOG,EAAQA,QAAQ8B,MAAMR,GAAWA,EAAOb,MAAMgB,gBAAkB5B,GAAvE,IAEDJ,QAAO,CAACC,EAAD,KAAyC,IAAjBG,EAAKc,GAAW,EAE9C,OADAjB,EAAIG,GAAOc,EACJjB,CAAP,GACC,CAAC,IACL,CAACqB,EAAaf,IAEX+B,EAAO,UAAGhB,EAAYW,IAAI,eAAnB,QAA8B,KACrCM,EAAqC,SAA7BjB,EAAYW,IAAI,SAAsB,OAAS,MAE7D,OAAOR,EAAAA,EAAAA,UAAQ,KACb,MAEMe,EAFY1C,OAAOC,OAAOJ,GAEDkC,QAAQ3B,GAC9BJ,OAAOsC,QAAQD,GAAmBM,OAAM,IAAmB,IAAjBrC,EAAKc,GAAW,EAC/D,OAAOE,OAAOlB,EAAME,MAAUc,CAA9B,MAGJ,OAAOwB,EAAAA,EAAAA,SAAQF,EAAcF,EAASC,EAAtC,GACC,CAAC5C,EAAMwC,EAAmBG,EAASC,GACvC,C,wICtGM,SAASI,EAAT,GAA+F,IAAvE,KAAEhD,EAAF,SAAQiD,EAAR,QAAkBC,EAAlB,SAA2BC,GAA2C,EAA9BC,GAA8B,YACnG,OACE,SAAC,MAAD,gBACEC,QAAS,KAAMC,EAAAA,EAAAA,IAAqC,oBAATtD,EAAsBA,IAASA,EAAMiD,GAChFC,QAASA,GACLE,GAHN,oBAKGD,QALH,IAKGA,EAAAA,EAAY,kBAGlB,C,2NCfM,SAASI,EAAT,GAAiD,IAAlC,OAAEC,GAA+B,EAApBJ,GAAoB,YACrD,OAAO,SAAC,UAAD,QAAiBI,OAAM,OAAEA,QAAF,IAAEA,GAAAA,GAAoBJ,GACrD,CAOM,SAASK,EAAT,GAA0F,IAA3D,MAAElC,EAAF,SAASmC,GAAiD,EAApCC,GAAoC,YAC9F,OACE,SAAC,KAAD,QACEC,QAAQ,SAAC,IAAD,CAAcF,SAAUA,EAAUG,MAAM,QAChDC,YAAW,mBAAcJ,EAASK,eAClCC,aAAczC,EAAMmC,GACpBO,KAAK,SACDN,GAGT,CAMM,SAASO,EAAT,GAAyD,IAAtC,MAAE3C,GAAmC,EAAzB6B,GAAyB,YAC7D,OAAO,SAAC,KAAD,QAAQe,QAAS5C,EAAO6C,iBAAiB,SAAC,IAAD,CAAYpC,MAAO,CAAEqC,MAAO,cAAqBjB,GAClG,CAOM,SAASkB,EAAT,GAAiD,IAAhC,MAAE/C,EAAF,KAASgD,GAAsB,EACrD,MAAMC,GAAkBC,EAAAA,EAAAA,KACxB,OACE,2BACE,SAAC,IAAD,CACEb,OAAQW,GAAO,SAAC,IAAD,CAAYvC,MAAO,CAAEqC,MAAO,cAAkB,SAAC,IAAD,IAC7DP,YAAY,KACZY,QAAQ,aACRT,KAAK,QACL1C,MAAOA,EACPoD,UAAQ,EACRtB,QAAS,IAAMmB,EAAgBjD,MAItC,C,wFCvDD,SAASqD,EAAWxB,GAClB,OACE,iCAAKyB,MAAM,6BAA6BC,QAAQ,iBAAoB1B,GAApE,eACE,iBACE2B,KAAK,UACLC,EAAE,8HAEJ,iBACED,KAAK,UACLC,EAAE,mIAEJ,mBAAQC,GAAG,MAAMC,GAAG,QAAQC,EAAE,OAAOJ,KAAK,aAC1C,iBACEA,KAAK,UACLC,EAAE,mtDAIT,CAED,SAASI,EAAiBhC,GACxB,OACE,iCAAKyB,MAAM,6BAA6BC,QAAQ,kBAAqB1B,GAArE,eACE,iBACE2B,KAAK,UACLC,EAAE,mJAEJ,iBACED,KAAK,UACLC,EAAE,qFAEJ,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBAAMD,KAAK,UAAUC,EAAE,2BACvB,iBAAMD,KAAK,UAAUC,EAAE,mDACvB,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBACED,KAAK,UACLC,EAAE,sFAEJ,iBAAMD,KAAK,UAAUC,EAAE,yCACvB,iBACED,KAAK,UACLC,EAAE,0IAEJ,iBACED,KAAK,UACLC,EAAE,miPAIT,CAMM,SAASK,EAAT,GAAkE,IAA5C,SAAE3B,GAAyC,EAA5BN,GAA4B,YACtE,MAAoB,OAAbM,GAAoB,SAACkB,GAAD,UAAgBxB,KAAY,SAACgC,GAAD,UAAsBhC,GAC9E,C,yHClDM,SAASkC,EAAT,GAA6F,IAAlE,SAAEnC,EAAF,WAAYoC,GAAqD,EAAtCC,GAAsC,YACjG,MAAMC,GAAsB,SAAC,KAAD,gBAAYC,iBAAe,GAAKH,GAAhC,IAA4CI,UAAU,sBAClF,OACE,UAAC,KAAD,gBAAOC,UAAU,YAAeJ,GAAhC,cACGC,EACAtC,EACAsC,KAGN,C,kMCDM,SAASI,EAAT,GAOc,IAPM,QACzBC,EADyB,OAEzBC,EAFyB,SAGzBC,EAHyB,KAIzBC,EAJyB,SAKzBC,EAAW,KAEO,EADfC,GACe,YAClB,MAAM,kBAAEC,IAAsBC,EAAAA,EAAAA,MAGvB,CAAEC,EAAQC,IAASC,EAAAA,EAAAA,IAAa,KACjCV,GACFC,GACD,GACAG,GAiCH,OA7BAO,EAAAA,EAAAA,YAAU,KACJX,GACFM,GAAkB,GAClBM,QAAQC,IAAI,aAAcC,IAAOC,KAAKC,OAAOC,OAAO,wBACpDR,MAEAH,GAAkB,GAClBE,IACD,GACA,CAACR,EAASS,EAAOD,EAAQL,KAG5BQ,EAAAA,EAAAA,YAAU,KACR,MAAMO,EAAsBC,IAC1B,GAAInB,EAAS,CACX,MAAMoB,EAAU,4DAGhB,OADAD,EAAME,YAAcD,EACbA,CACR,GAKH,OAFAE,OAAOC,iBAAiB,eAAgBL,GAEjC,KACLI,OAAOE,oBAAoB,eAAgBN,EAA3C,CADF,GAGC,CAAClB,KAGF,SAAC,MAAD,gBACEyB,KAAK,UACLtD,KAAK,QACLuD,MAAM,SAAC,IAAD,IACNnE,QAAS0C,EACT0B,UAAW3B,EACX5C,QAAS8C,EACT0B,QAAM,EACNC,OAAK,GACDxB,GATN,sBAcH,C,4EC9CM,MAAMyB,EAAY,IAMF,IANG,GACxBC,EADwB,MAExBhE,EAAQ,IAFgB,UAGxB8B,EAAY,GAHY,QAIxBmC,GAAU,EAJc,cAKxBC,EAAgB,OACI,EACpB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,GAAW,UACxBC,EAAWL,EAAGM,QAAQ,KAAM,KAElC,OACE,gBAAKxC,WAAWyC,EAAAA,EAAAA,GAAK,aAAczC,GAAnC,UACE,SAAC,IAAD,CACE9B,MAAOA,EACPwE,IAAKL,EAAO,GAAD,OAAIE,EAAJ,YAAgBH,IAC3BO,SAAUN,EAAO,oBACjBF,QAASA,KANf,C,6ECtCK,SAASrD,IACd,MAAO8D,EAAO/D,IAAmBgE,EAAAA,EAAAA,MAC3B,QAAEtB,GAAYuB,EAAAA,EAAAA,SAYpB,OAVAhC,EAAAA,EAAAA,YAAU,KACJ8B,EAAMhH,QACJgH,EAAMhH,MAAMJ,OAAS,GACvB+F,EAAQwB,KAAR,gCAAqCC,EAAAA,EAAAA,UAASJ,EAAMhH,MAAO,CAAEJ,OAAQ,GAAIyH,SAAU,UAEnF1B,EAAQ2B,QAAQ,UAEnB,GACA,CAACN,EAAOrB,IAEJ1C,CACR,C,gGCdM,SAASsE,EAAkCC,EAAcC,GAC9D,OAAOC,UAAa,IAAD,EACjBvC,QAAQC,IAAR,qBAA0BoC,EAA1B,YAAkCC,EAAlC,4BAA0DE,EAAAA,EAAAA,OAAwB,eAClF,MAAMC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAD,UAAeN,EAAf,YAAuBC,IAEzC,wBAD4BM,EAAAA,EAAAA,IAAOH,IACbnJ,cAAtB,QAAgC,CAAC,CAAjC,CAEH,CAEM,SAASuJ,EACdR,EACAC,EACA1H,GAEA,OAAOkI,EAAAA,EAAAA,IAAQ,QACbC,SAAU,CAAC,WAAYV,EAAMC,GAC7BU,QAASZ,EAAkCC,EAAMC,IAC9C1H,GAEN,C,oECWM,SAASqI,EAAT,GAUJ,IAAD,QAVuC,OACvC/F,EAAS,GAD8B,KAEvC5D,EAFuC,eAGvC4J,EAAiB,EAHsB,gBAIvCC,EAAkB,GAJqB,gBAKvCC,EAAkB,CAAC,GAAI,GAAI,GAAI,KALQ,SAMvCC,GAIA,EACA,MAAM,YAAEpI,EAAF,SAAeC,IAAaC,EAAAA,EAAAA,KAC5BmI,EAAcC,OAAM,UAACtI,EAAYW,IAAZ,UAAmBsB,EAAnB,gBAAD,QAAqCnC,OAAOmI,IAChEM,EAAWD,OAAM,UAACtI,EAAYW,IAAZ,UAAmBsB,EAAnB,oBAAD,QAAyCnC,OAAOoI,IACjEM,GAAWC,EAAAA,EAAAA,GAAYL,GAEvBM,GAAOvI,EAAAA,EAAAA,UAAQ,KACnB,MAAMwI,GAASN,EAAc,GAAKE,EAC5BK,EAAMD,EAAQJ,EACpB,OAAOlK,EAAKwK,MAAMF,EAAOC,EAAzB,GACC,CAACP,EAAaE,EAAUlK,IAErBoC,EAAYiI,IAChBzI,EAAS,GAAD,OAAIgC,EAAJ,QAAkByG,EAAKI,WAAYhJ,OAAOmI,GAAlD,EAUF,OAJIG,IAAaI,GACf/H,EAASwH,GAGJ,CACLS,OACA9E,WAAY,CACVmF,QAASV,EACTE,WACA9H,WACAuI,iBAdqB,CAACC,EAAW3G,KACnCrC,EAAS,GAAD,OAAIgC,EAAJ,YAAsBK,EAAKwG,WAAYhJ,OAAOoI,GAAtD,EAcED,iBACAC,kBACAC,kBACAe,MAAO7K,EAAKmB,OACZ2J,kBAAkB,GAGvB,C,yDChFM,SAASjJ,IAAqE,IAAtDkJ,EAAqD,uDAAJ,CAAC,EAC/E,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,MAElCtJ,EAAW,CAACnB,EAAac,EAAgByC,UAC/BmH,IAAV5J,GAAiC,KAAVA,GAAgBA,IAAUyC,EACnDgH,EAAaI,OAAO3K,GAEpBuK,EAAaK,IAAI5K,EAAKgB,OAAOF,IAG/B0J,EAAgBD,EAAhB,EAGIM,EAAY,SAACC,GAAkF,IAAjDC,EAAgD,uDAAP,CAAC,EAC5FrL,OAAOsC,QAAQ8I,GAAQ/K,SAAQ,IAAmB,IAAjBC,EAAKc,GAAW,EAC3CiK,EAAc/K,KAASc,EACzByJ,EAAaI,OAAO3K,GAEpBuK,EAAaK,IAAI5K,EAAKgB,OAAOF,GAC9B,IAEH0J,EAAgBD,EACjB,EAEKS,EAAehL,IACnBuK,EAAaI,OAAO3K,GACpBwK,EAAgBD,EAAhB,EAGIU,EAAK,SAACjL,GAAD,IAAcc,EAAd,uDAAsB,OAAtB,OAAiCyJ,EAAa1I,IAAI7B,KAASgB,OAAOF,EAAlE,EAUX,OARAoK,EAAAA,EAAAA,IAAc,KACZxL,OAAOsC,QAAQsI,GAAevK,SAAQ,IAAmB,IAAjBC,EAAKc,GAAW,EACjDyJ,EAAaY,IAAInL,IACpBmB,EAASnB,EAAKc,EACf,GAHH,IAOK,CACLK,WACA0J,YACAG,cACA9J,YAAaqJ,EACbU,KAEH,C,+HCXM,SAASG,EAAT,GAIuE,IAJU,gBACtFC,EADsF,2BAEtFC,EAFsF,UAGtFC,GAC2E,EAC3E,MAAM,aAAEC,GAAiBxD,EAAAA,EAAAA,SACnByD,GAAcC,EAAAA,EAAAA,MAEdC,GAAWC,EAAAA,EAAAA,GAAuBP,GAClCQ,GAAgB/C,EAAAA,EAAAA,GACpB,MACAwC,EACA,CACEQ,OAAQP,EAAYQ,EAAAA,QAA0BrB,KAK3CsB,EAAiBC,IAAsBC,EAAAA,EAAAA,UAA8B,CAAC,GAEvEC,GAAWC,EAAAA,EAAAA,GAAqB,MAAOd,EAA4B,CACvEe,UAAW,KACTb,EAAapD,QAAQ,CACnB3B,QAAQ,GAAD,OAAK6E,EAAL,cAETG,EAAYa,eAAe,CACzBtD,SAAU,CAAC,WAAY,MAAOsC,KAEhCW,EAAmB,CAAC,EAApB,EAEFM,QAAUC,IACRhB,EAAagB,MAAM,CACjB/F,QAAQ,GAAD,OAAK6E,EAAL,kBACPmB,YAAaD,EAAM/F,SAFrB,IAOElH,GAAO8B,EAAAA,EAAAA,UAAQ,KAAO,IAAD,IACzB,OAAKsK,EAASe,WAAcb,EAAca,YAAaP,EAASQ,WAEhE1G,QAAQC,IAAR,oBAAyBmF,EAAzB,YAA4CC,EAA5C,YAAkF,gBAC3EsB,EAAAA,EAAAA,YAAU,0BAAD,QAAC,EACXjB,EAASpM,YADC,QACO,CAAC,GADR,UAEVsM,EAActM,YAFJ,QAEY,CAAC,GACxByM,KAN6E,CAAC,CAGnF,GAKC,CACDX,EACAC,EACAK,EAASpM,KACTsM,EAActM,KACdoM,EAASe,UACTb,EAAca,UACdP,EAASQ,UACTX,IAGI3G,IAAWwH,EAAAA,EAAAA,SAAQb,GAKnBc,EAAejB,EAActM,KAMnC,MAAO,CACLA,OACAwN,UAAWpB,EAASoB,WAAalB,EAAckB,UAC/CP,MAAOb,EAASa,OAASX,EAAcW,MACvCM,eACAvH,SAAU4G,EAASQ,UACnBK,KAVW,KACXb,EAASc,OAAO1B,GAAY2B,EAAAA,EAAAA,IAAsBlB,GAAmBA,EAArE,EAUAmB,iBAjBuB,CAAC/F,EAAYgG,KACpCnB,GAAoBoB,IAAD,QAAC,UAAeA,GAAhB,IAAsB,CAACjG,GAAKgG,KAA/C,EAiBAE,gBAAiBtB,EACjB3G,UAEH,C,qFChHM,SAASuG,EAAqB2B,GAAuC,IAAD,MAAhBC,IAAgB,yDACzE,MAAM,OAAEjG,IAAWC,EAAAA,EAAAA,GAAW,aAExBiG,GAAQ1E,EAAAA,EAAAA,GAA2C,CACvDC,SAAU,CAACuE,GACXtE,QAAST,UACP,MAAMkF,QAAYC,MAAMpG,EAAO,GAAD,OAAIgG,EAAJ,WAC9B,aAAcG,EAAIE,MAAlB,EAEFJ,YAEIK,IAAmBhB,EAAAA,EAAAA,SAAQY,EAAMlO,MAEvC,OAAO,kBACFkO,GADL,IAEElO,KAAI,UAAEkO,EAAMlO,YAAR,QAAiB,CAAC,EACtBsO,mBAEH,CAEM,SAASC,EAAkCP,GAAuC,IAAjBC,IAAgB,yDACtF,MAAM,OAAEjG,IAAWC,EAAAA,EAAAA,GAAW,aAExBiG,GAAQ1E,EAAAA,EAAAA,GAA+B,CAC3CC,SAAU,CAACuE,GACXtE,QAAST,UACP,MAAMkF,QAAYC,MAAMpG,EAAO,GAAD,OAAIgG,EAAJ,WAC9B,aAAcG,EAAIE,MAAlB,EAEFJ,YAEIK,IAAmBhB,EAAAA,EAAAA,SAAQY,EAAMlO,MAEvC,OAAO,kBACFkO,GADL,IAEElO,KAAMkO,EAAMlO,KACZsO,mBAEH,C,8ECvCM,SAASE,EAAyCzF,EAAcC,EAAehJ,GACpF0G,QAAQC,IAAR,qBAA0BoC,EAA1B,YAAkCC,EAAlC,kBAAyD,eACzD,MAAMG,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAD,UAAeN,EAAf,YAAuBC,IACzC,OAAOyF,EAAAA,EAAAA,IAAUtF,EAAQnJ,EAC1B,CAEM,SAAS6M,EACd9D,EACAC,GAEC,IADD1H,EACA,uDAD2D,CAAC,EAE5D,OAAOoN,EAAAA,EAAAA,IAAW,QAChBC,WAAY1F,SAAuBuF,EAA2BzF,EAAMC,EAAOhJ,IACxEsB,GAEN,C,8PCTM,MAAMsN,EAAQ,CACnB,CAAErN,MAAO,OAAQF,MAAO,QACxB,CAAEE,MAAO,QAASF,MAAO,SACzB,CAAEE,MAAO,MAAOF,MAAO,OACvB,CAAEE,MAAO,UAAWF,MAAO,WAC3B,CAAEE,MAAO,aAAcF,MAAO,cAC9B,CAAEE,MAAO,SAAUF,MAAO,UAC1B,CAAEE,MAAO,QAASF,MAAO,SACzB,CAAEE,MAAO,UAAWF,MAAO,WAC3B,CAAEE,MAAO,WAAYF,MAAO,YAC5B,CAAEE,MAAO,aAAcF,MAAO,cAC9B,CAAEE,MAAO,SAAUF,MAAO,UAC1B,CAAEE,MAAO,QAASF,MAAO,SACzB,CAAEE,MAAO,YAAaF,MAAO,aAC7B,CAAEE,MAAO,cAAeF,MAAO,eAC/B,CAAEE,MAAO,SAAUF,MAAO,UAC1B,CAAEE,MAAO,SAAUF,MAAO,UAC1B,CAAEE,MAAO,aAAcF,MAAO,cAC9B,CAAEE,MAAO,aAAcF,MAAO,cAC9B,CAAEE,MAAO,gBAAiBF,MAAO,kBAG7BwN,EAAoB,CAACC,EAAkBC,KAC3C,IAAKD,GAA0B,IAAjBA,EAAM3N,OAAc,MAAO,UAGzC,OADkB2N,EAAM5M,QAAQ8M,IAAUJ,EAAMlM,MAAMsC,GAAMA,EAAEzD,QAAUyN,MAC1D7N,OAAS,GAEnB4N,GAAeD,EAAMpO,SAAS,QAFD,aAEjC,CAEA,EAQK,SAASuO,EAAT,GAAqF,IAAD,UAAzD,UAAEC,EAAF,iBAAatB,GAA4C,EACzF,MAAMuB,EAAmB,CAAC5N,EAAe6N,EAA4B1L,KACnEkK,EACEsB,EAAUrH,IACVwH,EAAAA,EAAAA,OAAM,CAAE,CAACD,GAAQ,CAAEE,GAAI,GAAIC,GAAI,KAAQL,EAAW,CAAE,CAACE,GAAQ,CAAE,CAAC1L,GAAWnC,KAF7E,EAcF,OACE,UAAC,IAAD,CACEiO,WAAS,EACT,SAAQ,CAAE3L,MAAO,IAAK4L,SAAU,KAChCC,OAAO,SAAC9H,EAAA,EAAD,CAAWC,GAAIqH,EAAUrH,GAAIhE,MAAO,MAH7C,WAKE,SAAC,SAAD,CAEE8L,MAAOT,EAAUrH,GACjBqF,aACE,UAAC,IAAD,CAAMnL,UAAQ,EAAd,WACE,SAAC,KAAD,oBACA,SAAC,KAAD,CACER,MAAO2N,EAAUU,KACjBlM,SAAS,KACTtB,SAAWyN,GAAMV,EAAiBU,EAAEC,OAAOvO,MAAO,OAAQ,SAE5D,SAAC,KAAD,CACEA,MAAO2N,EAAUU,KACjBlM,SAAS,KACTtB,SAAWyN,GAAMV,EAAiBU,EAAEC,OAAOvO,MAAO,OAAQ,SAE5D,SAAC,KAAD,2BACA,SAAC,KAAD,CACEA,MAAK,UAAE2N,EAAUhC,mBAAZ,QAA2B6C,EAAAA,GAChCrM,SAAS,KACTtB,SAAWyN,GAAMV,EAAiBU,EAAEC,OAAOvO,MAAO,cAAe,SAEnE,SAAC,KAAD,CACEA,MAAK,UAAE2N,EAAUhC,mBAAZ,QAA2B6C,EAAAA,GAChCrM,SAAS,KACTtB,SAAWyN,GAAMV,EAAiBU,EAAEC,OAAOvO,MAAO,cAAe,SAEnE,SAAC,KAAD,qBACA,SAAC,IAAD,CACEyO,KAAK,WACLhM,aAAY,UAAEkL,EAAUJ,aAAZ,QAAqB,GACjC7K,KAAK,QACL3C,QAASsN,EACTxM,SAAWyN,IAAMI,OA3CN1O,EA2CoBsO,OA1CzCjC,EAAiBsB,EAAUrH,IAAX,QAAC,UAAmBqH,GAApB,IAA+BJ,OAAOoB,EAAAA,EAAAA,IAAiB3O,GAAOC,UADzDD,KAsCb,EAMES,MAAO,CAAEyN,SAAU,mBACnBU,OAAQtB,EAAkBK,EAAUJ,MAAOI,EAAUH,gBAEvD,UAAC,IAAD,CAAMqB,MAAM,SAAZ,WACE,SAAC,KAAD,mBAAoB,KACpB,SAAC,KAAD,CAAW7O,MAAO2N,EAAU3K,KAAMN,KAAK,QAAQ7B,SAAWyN,IAAMQ,OArDtD9O,EAqDmEsO,OApDvFjC,EAAiBsB,EAAUrH,IAAIwH,EAAAA,EAAAA,OAAMH,EAAW,CAAE3K,KAAMhD,KADpCA,KAqDV,QAEF,UAAC,IAAD,CAAM6O,MAAM,SAASE,IAAK,EAA1B,WACE,SAAC,KAAD,0BAA2B,KAC3B,SAACC,EAAD,CAAarB,UAAWA,EAAWtB,iBAAkBA,aAK7D,SAAC,SAAD,MAGL,CAED,SAAS2C,EAAT,GAA+E,IAA1D,UAAErB,EAAF,iBAAatB,GAA4C,EAC5E,MAIMtM,EAAU,CACd,CAAEC,MAAO,KAAMF,OAAO,SAACgE,EAAA,EAAD,CAAc3B,SAAS,KAAK1B,MAAO,CAAE6B,MAAO,OAClE,CAAEtC,MAAO,KAAMF,OAAO,SAACgE,EAAA,EAAD,CAAc3B,SAAS,KAAK1B,MAAO,CAAE6B,MAAO,OAClE,CAAEtC,MAAO,OAAQF,MAAO,SAGpBmP,GACJ,SAAC,IAAD,CAAMF,IAAK,EAAX,UACE,SAAC,WAAD,CACEhP,QAASA,EACTc,SAAWyN,IAAMY,OAdM/M,EAccmM,EAAEC,OAAOvO,WAblDqM,EAAiBsB,EAAUrH,IAAIwH,EAAAA,EAAAA,OAAMH,EAAW,CAAEH,YAAarL,KADpCA,KAYzB,EAGEnC,MAAK,OAAE2N,QAAF,IAAEA,OAAF,EAAEA,EAAWH,gBAKxB,OACE,UAAC,IAAD,CAAMuB,IAAK,EAAX,UAC8B,QAAlB,OAATpB,QAAS,IAATA,OAAA,EAAAA,EAAWH,eAAwB,SAAC1J,EAAA,EAAD,CAAc3B,SAAS,KAAK1B,MAAO,CAAE6B,MAAO,MACpD,QAAlB,OAATqL,QAAS,IAATA,OAAA,EAAAA,EAAWH,eAAwB,SAAC1J,EAAA,EAAD,CAAc3B,SAAS,KAAK1B,MAAO,CAAE6B,MAAO,QAC/E,OAACqL,QAAD,IAACA,GAAAA,EAAWH,cAAe,QAC5B,SAAC,IAAD,CAASY,MAAM,sBAAsBa,QAASA,EAASE,QAAQ,QAA/D,UACE,SAACC,EAAA,EAAD,QAIP,CChJM,SAASC,EAAT,GAAgF,IAArD,KAAE5Q,EAAF,iBAAQ4N,GAA4C,EACpF,MAAM/K,GAAeN,EAAAA,EAAAA,IAA2BvC,IAE1C,KAAEqK,EAAF,WAAQ9E,IAAeoE,EAAAA,EAAAA,GAAkB,CAC7C3J,KAAM6C,EACNkH,SAAU,GACVF,gBAAiB,KAEnB,OACE,+BACE,iCACE,UAAC,UAAD,CAAkBgH,MAAO,EAAzB,mCACyBhO,EAAa1B,OADtC,MACiDhB,OAAOC,OAAP,OAAcJ,QAAd,IAAcA,EAAAA,EAAQ,CAAC,GAAGmB,OAD3E,QAIA,SAACmE,EAAA,EAAD,CAAmBC,WAAYA,EAAYI,UAAU,aAArD,UACE,SAAC,IAAD,CAAM2K,IAAK,GAAIQ,KAAK,OAApB,SACGzG,EAAKxJ,KAAKN,IACT,SAAC0O,EAAD,CAAkCC,UAAW3O,EAAOqN,iBAAkBA,GAA9CrN,EAAMsH,cAO3C,C,gECtBM,SAASkJ,EAAT,GAMqB,IANM,KAChC/Q,EADgC,QAEhC8F,EAFgC,KAGhC2H,EAHgC,SAIhCzH,EAJgC,gBAKhC+H,GACyB,EACzB,OACE,iCACE,SAAC,KAAD,WACE,UAAC,IAAD,CAAMhM,UAAQ,EAACuO,IAAK,GAApB,WACE,SAACzK,EAAA,EAAD,CACEC,QAASA,EACTC,OAAQ0H,EACRzH,SAAUA,EACVC,KAAM+K,KAAKC,UAAUlD,MAGvB,SAAC/K,EAAA,EAAD,CACEhD,KAAM,IAmBlB,SAAgC+N,GAC9BrH,QAAQC,IAAI,kCACZ,MAAMuK,GAAO7D,EAAAA,EAAAA,WAAUU,GASvB,OAPA5N,OAAOC,OAAO8Q,GAAM1Q,SAASD,IAC3B,MAAMwO,EAAcxO,EAAMwO,iBACA5D,IAAtB5K,EAAMwO,aAA6C,SAAhBA,IACrCxO,EAAMwO,iBAAc5D,EACrB,KAGIgG,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAAgBF,GACrC,CA/BuBG,CAAuBrR,GACnCiD,SAAS,kBACTwE,SAAU3B,EACV6B,OAAK,UAKX,SAAC,KAAD,WACE,SAACjG,EAAA,GAAD,CAAa1B,KAAMA,EAAMC,WAAY,CAAC,oBAGxC,SAAC,KAAD,WACE,SAACqR,EAAD,CAAYtR,KAAMA,QAIzB,CAgBD,SAASsR,EAAT,GAAqE,IAAjD,KAAEtR,GAA8C,EAClE,MAAMuR,GAASzP,EAAAA,EAAAA,UAAQ,KACrB,IAAI0P,EAAqB,EACrBC,EAAwB,EACxBC,EAAkB,EACtB,MAAMC,EAAaxR,OAAOC,OAAOJ,GAAMK,QAAO,CAACC,EAAyB4O,KAAe,IAAD,EAcpF,OAbA,UAACA,EAAUJ,aAAX,QAAoB,IAAItO,SAASwO,IAC/B1O,EAAI0O,GAAQ1O,EAAI0O,GAAQ1O,EAAI0O,GAAQ,EAAI,CAAxC,IAE4B,OAA1BE,EAAUH,aACZyC,IAE4B,OAA1BtC,EAAUH,aACZ0C,IAEGvC,EAAUH,aACb2C,IAGKpR,CAAP,GACC,CAAC,GAIJ,MAAO,CAAEqR,aAAYC,aAFAzR,OAAOD,KAAKyR,GAAYzP,QAAQ8M,IAAUJ,EAAMlM,MAAMsC,GAAMA,EAAEzD,QAAUyN,MAE1DwC,qBAAoBC,wBAAuBC,kBAA9E,GACC,CAAC1R,IAEJ,OACE,UAAC,IAAD,CAAM+B,UAAQ,EAACuO,IAAK,EAApB,WACE,SAAC,SAAD,CAAiB9M,QAAM,EAAvB,0BAEA,SAAC,IAAD,CAAMzB,UAAQ,EAACuO,IAAK,EAAGtO,MAAO,CAAE6P,UAAW,QAAS5P,UAAW,QAA/D,SACG2M,EAAM/N,KAAKN,IAAD,aACT,UAAC,SAAD,WACGA,EAAMc,MADT,eACkBkQ,EAAOI,WAAWpR,EAAMgB,cAD1C,QACoD,IAD9BhB,EAAMgB,MADnB,OAOb,SAAC,IAAD,CAASoE,UAAU,UAEnB,SAAC,SAAD,CAAiBnC,QAAM,EAAvB,4BACA,SAAC,IAAD,CAAMzB,UAAQ,EAACuO,IAAK,EAAGtO,MAAO,CAAE6P,UAAW,QAAS5P,UAAW,QAA/D,SACGsP,EAAOK,aAAa/Q,KAAKmO,IACxB,SAAC,SAAD,UAA6BA,GAAPA,QAI1B,SAAC,IAAD,CAASrJ,UAAU,UAEnB,SAAC,SAAD,CAAiBnC,QAAM,EAAvB,0BACA,UAAC,IAAD,CAAMzB,UAAQ,EAACuO,IAAK,EAApB,WACE,UAAC,SAAD,uBAA2BiB,EAAOC,uBAClC,UAAC,SAAD,0BAA8BD,EAAOE,0BACrC,UAAC,SAAD,oBAAwBF,EAAOG,wBAItC,C,wBCjHM,SAASI,IACd,MAAMC,GAAkBlG,EAAAA,EAAAA,GAAuC,CAC7DC,gBAAiB,aACjBC,2BAA4B,aAC5BC,WAAW,IAGb,OACE,SAAC,KAAD,CAAY2D,MAAM,aAAaqC,SAAS,yCAAxC,UACE,UAAC,IAAD,CAAQC,UAAQ,EAAhB,WACE,SAACC,EAAA,EAAD,WACE,SAACnB,GAAD,UAAuBgB,OAGzB,SAAC,YAAD,CAAgBpM,UAAU,UAA1B,UACE,SAACwM,EAAA,EAAD,CACE3E,UAAWuE,EAAgBvE,UAC3BP,MAAO8E,EAAgB9E,MACvBqB,kBAAkBhB,EAAAA,EAAAA,SAAQyE,EAAgB/R,MAH5C,UAKE,SAAC4Q,GAAD,UAAuBmB,YAMlC,CAED,S","sources":["components/Common/DataFilters.tsx","components/Common/DownloadButton.tsx","components/Common/EditableFields.tsx","components/Common/LanguageFlag.tsx","components/Common/PaginationWrapper.tsx","components/Common/SaveButton.tsx","components/Images/ImageCard.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useGetFirebaseDoc.ts","hooks/useGridPagination.tsx","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","components/Contenders/ContenderEditCard.tsx","components/Contenders/ContendersContent.tsx","components/Contenders/ContendersFilters.tsx","pages/Contenders.tsx"],"sourcesContent":["import { Flex } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { capitalize, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { FilterSelect } from './FilterEntries';\n\nexport function buildDataFilters<T extends PlainObject>(data: Dictionary<T>, ignoreKeys: string[] = []) {\n  const keys = Object.keys(\n    Object.values(data).reduce((acc: Dictionary<boolean>, entry) => {\n      Object.keys(entry).forEach((key) => {\n        if (!acc[key] && !ignoreKeys.includes(key)) {\n          acc[key] = true;\n        }\n      });\n\n      return acc;\n    }, {}),\n  );\n\n  const sortableKeys: string[] = [];\n  const filters: { label: string; options: { label: string; value: any }[] }[] = [];\n\n  keys.forEach((key) => {\n    const values = Object.values(data).map((entry) => entry[key]);\n    const uniqueValues = Array.from(new Set(values));\n    const uniqueValueRatio = uniqueValues.length / values.length;\n\n    if (uniqueValueRatio >= 0.05) {\n      sortableKeys.push(key);\n    }\n\n    if (uniqueValueRatio <= 0.9) {\n      filters.push({\n        label: key,\n        options: [\n          { label: 'All', value: '' },\n          ...uniqueValues.sort().map((value) => ({ label: String(value), value })),\n        ],\n      });\n    }\n  });\n\n  return { filters, sortableKeys };\n}\n\ntype DataFiltersProps<T extends PlainObject> = {\n  data: Dictionary<T>;\n  ignoreKeys?: string[];\n};\n\nexport function DataFilters<T extends PlainObject>({ data, ignoreKeys = [] }: DataFiltersProps<T>) {\n  const { queryParams, addParam } = useQueryParams();\n  const filters = useMemo(() => buildDataFilters(data, ignoreKeys), [data, ignoreKeys]);\n\n  return (\n    <Flex vertical style={{ overflowY: 'auto' }}>\n      {filters.filters.map((filter) => (\n        <FilterSelect\n          key={filter.label}\n          label={capitalize(filter.label)}\n          options={filter.options}\n          onChange={(value) => addParam(filter.label.toLowerCase(), value)}\n          value={queryParams.get(filter.label.toLowerCase()) ?? ''}\n        />\n      ))}\n\n      <FilterSelect\n        label=\"Sort by\"\n        options={filters.sortableKeys.map((key) => ({ label: capitalize(key), value: key }))}\n        onChange={(value) => addParam('sort', value)}\n        value={queryParams.get('sort') ?? ''}\n      />\n\n      <FilterSelect\n        label=\"Order\"\n        options={[\n          { label: 'Ascending', value: 'asc' },\n          { label: 'Descending', value: 'desc' },\n        ]}\n        onChange={(value) => addParam('order', value)}\n        value={queryParams.get('order') ?? 'asc'}\n      />\n    </Flex>\n  );\n}\n\nexport function useFilterDataByDataFilters<T extends PlainObject>(data: Dictionary<T>) {\n  const { queryParams } = useQueryParams();\n  const filters = useMemo(() => buildDataFilters(data), [data]);\n  const activeQueryParams = useMemo(() => {\n    return Array.from(queryParams.entries())\n      .filter(([key]) => {\n        return filters.filters.some((filter) => filter.label.toLowerCase() === key);\n      })\n      .reduce((acc: Dictionary<any>, [key, value]) => {\n        acc[key] = value;\n        return acc;\n      }, {});\n  }, [queryParams, filters]);\n\n  const sortKey = queryParams.get('sort') ?? 'id';\n  const order = queryParams.get('order') === 'desc' ? 'desc' : 'asc';\n\n  return useMemo(() => {\n    const allValues = Object.values(data);\n\n    const filteredData = allValues.filter((entry) => {\n      return Object.entries(activeQueryParams).every(([key, value]) => {\n        return String(entry[key]) === value;\n      });\n    });\n    return orderBy(filteredData, sortKey, order);\n  }, [data, activeQueryParams, sortKey, order]);\n}\n","import { Button, type ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | (() => PlainObject);\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, children, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      {children ?? 'Download JSON'}\n    </Button>\n  );\n}\n","import { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { Input, type InputProps, Switch, type SwitchProps, Typography } from 'antd';\nimport type { TextProps } from 'antd/lib/typography/Text';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { LanguageFlag } from './LanguageFlag';\n\nexport function Label({ strong, ...props }: TextProps) {\n  return <Typography.Text strong={strong ?? true} {...props} />;\n}\n\ntype DualLanguageTextFieldProps = {\n  value: DualLanguageValue;\n  language: 'en' | 'pt';\n} & Omit<InputProps, 'name' | 'value'>;\n\nexport function DualLanguageTextField({ value, language, ...rest }: DualLanguageTextFieldProps) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Value in ${language.toUpperCase()}`}\n      defaultValue={value[language]}\n      size=\"small\"\n      {...rest}\n    />\n  );\n}\n\ntype NSFWFieldProps = {\n  value?: boolean;\n} & Omit<SwitchProps, 'checked' | 'checkedChildren'>;\n\nexport function NSFWField({ value, ...props }: NSFWFieldProps) {\n  return <Switch checked={value} checkedChildren={<FireFilled style={{ color: 'hotpink' }} />} {...props} />;\n}\n\ntype IdFieldProps = {\n  value: string;\n  nsfw?: boolean;\n} & Omit<InputProps, 'value'>;\n\nexport function IdField({ value, nsfw }: IdFieldProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={value}\n        readOnly\n        onClick={() => copyToClipboard(value)}\n      />\n    </span>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Pagination, Space, type SpaceProps, type TableProps } from 'antd';\nimport type { ReactNode } from 'react';\n\ntype PaginationWrapperProps = {\n  children: ReactNode;\n  pagination: TableProps['pagination'];\n} & SpaceProps;\n\nexport function PaginationWrapper({ children, pagination, ...spaceProps }: PaginationWrapperProps) {\n  const paginationComponent = <Pagination showQuickJumper {...pagination} className=\"fixed-pagination\" />;\n  return (\n    <Space direction=\"vertical\" {...spaceProps}>\n      {paginationComponent}\n      {children}\n      {paginationComponent}\n    </Space>\n  );\n}\n","import { Button, type ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { useGlobalContext } from 'context/GlobalContext';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  const { togglePendingSave } = useGlobalContext();\n\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  // biome-ignore lint/correctness/useExhaustiveDependencies: a function shouldn't retrigger the effect\n  useEffect(() => {\n    if (isDirty) {\n      togglePendingSave(true);\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      togglePendingSave(false);\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]);\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","// Ant Design Resources\nimport { Image, type ImageProps } from 'antd';\nimport clsx from 'clsx';\n\n// Hooks\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  width?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: ImageProps['preview'];\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  id,\n  width = 200,\n  className = '',\n  preview = true,\n  fileExtension = 'jpg',\n}: ImageCardProps) => {\n  const { getUrl } = useBaseUrl('images');\n  const imageURL = id.replace(/-/g, '/');\n\n  return (\n    <div className={clsx('image-card', className)}>\n      <Image\n        width={width}\n        src={getUrl(`${imageURL}.${fileExtension}`)}\n        fallback={getUrl('back/default.jpg')}\n        preview={preview}\n      />\n    </div>\n  );\n};\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { type QueryKey, type UseQueryOptions, useQuery } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>,\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import type { TableProps } from 'antd';\nimport { useMemo } from 'react';\n\nimport { usePrevious } from 'react-use';\nimport { useQueryParams } from './useQueryParams';\n\n/**\n * Options for configuring table pagination.\n */\ntype UsePaginationOptions<TData> = {\n  /**\n   * The data array to be paginated.\n   */\n  data: TData[];\n  /**\n   * Only necessary if multiple tables are on the same page.\n   */\n  prefix?: string;\n  /**\n   * The default current page number.\n   */\n  defaultCurrent?: number;\n  /**\n   * The default number of items per page.\n   */\n  defaultPageSize?: number;\n  /**\n   * An array of available page size options.\n   */\n  pageSizeOptions?: number[];\n  /**\n   * The value that triggers the reset of the pagination.\n   */\n  resetter?: string;\n};\n\nexport function useGridPagination<TData>({\n  prefix = '',\n  data,\n  defaultCurrent = 1,\n  defaultPageSize = 64,\n  pageSizeOptions = [16, 32, 64, 128],\n  resetter,\n}: UsePaginationOptions<TData>): {\n  page: TData[];\n  pagination: TableProps['pagination'];\n} {\n  const { queryParams, addParam } = useQueryParams();\n  const currentPage = Number(queryParams.get(`${prefix}page`) ?? String(defaultCurrent));\n  const pageSize = Number(queryParams.get(`${prefix}pageSize`) ?? String(defaultPageSize));\n  const previous = usePrevious(resetter);\n\n  const page = useMemo(() => {\n    const start = (currentPage - 1) * pageSize;\n    const end = start + pageSize;\n    return data.slice(start, end);\n  }, [currentPage, pageSize, data]);\n\n  const onChange = (page: number) => {\n    addParam(`${prefix}page`, page.toString(), String(defaultCurrent));\n  };\n  const onShowSizeChange = (_: number, size: number) => {\n    addParam(`${prefix}pageSize`, size.toString(), String(defaultPageSize));\n  };\n\n  if (resetter !== previous) {\n    onChange(defaultCurrent);\n  }\n\n  return {\n    page,\n    pagination: {\n      current: currentPage,\n      pageSize,\n      onChange,\n      onShowSizeChange,\n      defaultCurrent,\n      defaultPageSize,\n      pageSizeOptions,\n      total: data.length,\n      hideOnSinglePage: true,\n    },\n  };\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffectOnce } from 'react-use';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffectOnce(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  });\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    },\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { type DocumentData, doc, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { type QueryKey, type UseMutationOptions, useMutation } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {},\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { EditOutlined } from '@ant-design/icons';\nimport { Card, Flex, Popover, Radio, Select } from 'antd';\nimport { DualLanguageTextField, Label, NSFWField } from 'components/Common/EditableFields';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { ImageCard } from 'components/Images/ImageCard';\nimport type { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { merge } from 'lodash';\nimport type { ContenderCard } from 'types';\nimport { removeDuplicates } from 'utils';\nimport { PLACEHOLDER_DUAL_LANGUAGE_OBJECT } from 'utils/constants';\n\nexport const DECKS = [\n  { value: 'base', label: 'Base' },\n  { value: 'anime', label: 'Anime' },\n  { value: 'art', label: 'Art' },\n  { value: 'cartoon', label: 'Cartoon' },\n  { value: 'characters', label: 'Characters' },\n  { value: 'comics', label: 'Comics' },\n  { value: 'games', label: 'Games' },\n  { value: 'history', label: 'History' },\n  { value: 'internet', label: 'Internet' },\n  { value: 'literature', label: 'Literature' },\n  { value: 'movies', label: 'Movies' },\n  { value: 'music', label: 'Music' },\n  { value: 'mythology', label: 'Mythology' },\n  { value: 'pop-culture', label: 'Pop Culture' },\n  { value: 'random', label: 'Random' },\n  { value: 'sports', label: 'Sports' },\n  { value: 'television', label: 'Television' },\n  { value: 'special-td', label: 'Special TD' },\n  { value: 'special-td-bg', label: 'Special TD BG' },\n];\n\nconst checkInvalidDecks = (decks?: string[], exclusivity?: string) => {\n  if (!decks || decks.length === 0) return 'warning';\n\n  const isInvalid = decks.filter((deck) => !DECKS.some((d) => d.value === deck));\n  if (isInvalid.length > 0) return 'error';\n\n  if (exclusivity && decks.includes('base')) return 'error';\n\n  return undefined;\n};\n\ntype ContenderEditCardProps = {\n  contender: ContenderCard;\n  addEntryToUpdate: ReturnType<typeof useResourceFirebaseData<ContenderCard>>['addEntryToUpdate'];\n};\n\nexport function ContenderEditCard({ contender, addEntryToUpdate }: ContenderEditCardProps) {\n  const onUpdateDualText = (value: string, field: keyof ContenderCard, language: 'en' | 'pt') => {\n    addEntryToUpdate(\n      contender.id,\n      merge({ [field]: { en: '', pt: '' } }, contender, { [field]: { [language]: value } }),\n    );\n  };\n\n  const onUpdateNSFW = (value: boolean) => {\n    addEntryToUpdate(contender.id, merge(contender, { nsfw: value }));\n  };\n\n  const onUpdateDecks = (value: string[]) => {\n    addEntryToUpdate(contender.id, { ...contender, decks: removeDuplicates(value).sort() });\n  };\n\n  return (\n    <Card\n      hoverable\n      style-={{ width: 240, maxWidth: 240 }}\n      cover={<ImageCard id={contender.id} width={240} />}\n    >\n      <Card.Meta\n        // avatar={getGenderIcon(contender)}\n        title={contender.id}\n        description={\n          <Flex vertical>\n            <Label>Name</Label>\n            <DualLanguageTextField\n              value={contender.name}\n              language=\"en\"\n              onChange={(e) => onUpdateDualText(e.target.value, 'name', 'en')}\n            />\n            <DualLanguageTextField\n              value={contender.name}\n              language=\"pt\"\n              onChange={(e) => onUpdateDualText(e.target.value, 'name', 'pt')}\n            />\n            <Label>Description</Label>\n            <DualLanguageTextField\n              value={contender.description ?? PLACEHOLDER_DUAL_LANGUAGE_OBJECT}\n              language=\"en\"\n              onChange={(e) => onUpdateDualText(e.target.value, 'description', 'en')}\n            />\n            <DualLanguageTextField\n              value={contender.description ?? PLACEHOLDER_DUAL_LANGUAGE_OBJECT}\n              language=\"pt\"\n              onChange={(e) => onUpdateDualText(e.target.value, 'description', 'pt')}\n            />\n            <Label>Decks</Label>\n            <Select\n              mode=\"multiple\"\n              defaultValue={contender.decks ?? []}\n              size=\"small\"\n              options={DECKS}\n              onChange={(e) => onUpdateDecks(e)}\n              style={{ maxWidth: 'calc(100vw / 9)' }}\n              status={checkInvalidDecks(contender.decks, contender.exclusivity)}\n            />\n            <Flex align=\"center\">\n              <Label>NSFW</Label>{' '}\n              <NSFWField value={contender.nsfw} size=\"small\" onChange={(e) => onUpdateNSFW(e)} />\n            </Flex>\n            <Flex align=\"center\" gap={8}>\n              <Label>Exclusivity</Label>{' '}\n              <Exclusivity contender={contender} addEntryToUpdate={addEntryToUpdate} />\n            </Flex>\n          </Flex>\n        }\n      />\n      <Card.Meta />\n    </Card>\n  );\n}\n\nfunction Exclusivity({ contender, addEntryToUpdate }: ContenderEditCardProps) {\n  const onUpdateExclusivity = (language?: string) => {\n    addEntryToUpdate(contender.id, merge(contender, { exclusivity: language }));\n  };\n\n  const options = [\n    { value: 'en', label: <LanguageFlag language=\"en\" style={{ width: 24 }} /> },\n    { value: 'pt', label: <LanguageFlag language=\"pt\" style={{ width: 24 }} /> },\n    { value: 'none', label: 'None' },\n  ];\n\n  const content = (\n    <Flex gap={8}>\n      <Radio.Group\n        options={options}\n        onChange={(e) => onUpdateExclusivity(e.target.value)}\n        value={contender?.exclusivity}\n      />\n    </Flex>\n  );\n\n  return (\n    <Flex gap={8}>\n      {contender?.exclusivity === 'en' && <LanguageFlag language=\"en\" style={{ width: 24 }} />}\n      {contender?.exclusivity === 'pt' && <LanguageFlag language=\"pt\" style={{ width: 24 }} />}\n      {!contender?.exclusivity && 'None'}\n      <Popover title=\"Change exclusivity?\" content={content} trigger=\"click\">\n        <EditOutlined />\n      </Popover>\n    </Flex>\n  );\n}\n","import type { ContenderCard } from 'types';\nimport './Contenders.scss';\nimport { Flex, Typography } from 'antd';\nimport { useFilterDataByDataFilters } from 'components/Common/DataFilters';\nimport { PaginationWrapper } from 'components/Common/PaginationWrapper';\nimport { useGridPagination } from 'hooks/useGridPagination';\nimport type { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { ContenderEditCard } from './ContenderEditCard';\n\nexport type ContendersContentProps = ReturnType<typeof useResourceFirebaseData<ContenderCard>>;\n\nexport function ContendersContent({ data, addEntryToUpdate }: ContendersContentProps) {\n  const filteredData = useFilterDataByDataFilters(data);\n\n  const { page, pagination } = useGridPagination({\n    data: filteredData,\n    resetter: '',\n    defaultPageSize: 32,\n  });\n  return (\n    <>\n      <>\n        <Typography.Title level={2}>\n          Listing - Contenders ({filteredData.length} | {Object.values(data ?? {}).length})\n        </Typography.Title>\n\n        <PaginationWrapper pagination={pagination} className=\"full-width\">\n          <Flex gap={16} wrap=\"wrap\">\n            {page.map((entry) => (\n              <ContenderEditCard key={entry.id} contender={entry} addEntryToUpdate={addEntryToUpdate} />\n            ))}\n          </Flex>\n        </PaginationWrapper>\n      </>\n    </>\n  );\n}\n","import { Divider, Flex, Typography } from 'antd';\nimport { DataFilters } from 'components/Common/DataFilters';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport type { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { cloneDeep } from 'lodash';\nimport { useMemo } from 'react';\nimport type { ContenderCard } from 'types';\nimport { deepCleanObject, sortJsonKeys } from 'utils';\nimport { DECKS } from './ContenderEditCard';\n\nexport type ContendersFiltersProps = ReturnType<typeof useResourceFirebaseData<ContenderCard>>;\n\nexport function ContendersFilters({\n  data,\n  isDirty,\n  save,\n  isSaving,\n  entriesToUpdate,\n}: ContendersFiltersProps) {\n  return (\n    <>\n      <SiderContent>\n        <Flex vertical gap={12}>\n          <SaveButton\n            isDirty={isDirty}\n            onSave={save}\n            isSaving={isSaving}\n            dirt={JSON.stringify(entriesToUpdate)}\n          />\n\n          <DownloadButton\n            data={() => prepareFileForDownload(data)}\n            fileName=\"contenders.json\"\n            disabled={isDirty}\n            block\n          />\n        </Flex>\n      </SiderContent>\n\n      <SiderContent>\n        <DataFilters data={data} ignoreKeys={['description']} />\n      </SiderContent>\n\n      <SiderContent>\n        <DeckCounts data={data} />\n      </SiderContent>\n    </>\n  );\n}\n\nfunction prepareFileForDownload(entriesToUpdate: Dictionary<ContenderCard>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(entriesToUpdate);\n  // Remove any undefined values of any keys in each entry\n  Object.values(copy).forEach((entry) => {\n    const exclusivity = entry.exclusivity as string;\n    if (entry.exclusivity === undefined || exclusivity === 'none') {\n      entry.exclusivity = undefined;\n    }\n  });\n\n  return sortJsonKeys(deepCleanObject(copy));\n}\n\nfunction DeckCounts({ data }: Pick<ContendersFiltersProps, 'data'>) {\n  const counts = useMemo(() => {\n    let englishExclusivity = 0;\n    let portugueseExclusivity = 0;\n    let bothExclusivity = 0;\n    const deckCounts = Object.values(data).reduce((acc: Dictionary<number>, contender) => {\n      (contender.decks ?? []).forEach((deck) => {\n        acc[deck] = acc[deck] ? acc[deck] + 1 : 1;\n      });\n      if (contender.exclusivity === 'en') {\n        englishExclusivity++;\n      }\n      if (contender.exclusivity === 'pt') {\n        portugueseExclusivity++;\n      }\n      if (!contender.exclusivity) {\n        bothExclusivity++;\n      }\n\n      return acc;\n    }, {});\n\n    const invalidDecks = Object.keys(deckCounts).filter((deck) => !DECKS.some((d) => d.value === deck));\n\n    return { deckCounts, invalidDecks, englishExclusivity, portugueseExclusivity, bothExclusivity };\n  }, [data]);\n\n  return (\n    <Flex vertical gap={8}>\n      <Typography.Text strong>Deck Counts</Typography.Text>\n\n      <Flex vertical gap={8} style={{ maxHeight: '300px', overflowY: 'auto' }}>\n        {DECKS.map((entry) => (\n          <Typography.Text key={entry.value}>\n            {entry.label}: {counts.deckCounts[entry.value] ?? 0}\n          </Typography.Text>\n        ))}\n      </Flex>\n\n      <Divider className=\"my-2\" />\n\n      <Typography.Text strong>Invalid Decks</Typography.Text>\n      <Flex vertical gap={8} style={{ maxHeight: '300px', overflowY: 'auto' }}>\n        {counts.invalidDecks.map((deck) => (\n          <Typography.Text key={deck}>{deck}</Typography.Text>\n        ))}\n      </Flex>\n\n      <Divider className=\"my-2\" />\n\n      <Typography.Text strong>Exclusivity</Typography.Text>\n      <Flex vertical gap={8}>\n        <Typography.Text>English: {counts.englishExclusivity}</Typography.Text>\n        <Typography.Text>Portuguese: {counts.portugueseExclusivity}</Typography.Text>\n        <Typography.Text>Both: {counts.bothExclusivity}</Typography.Text>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Layout } from 'antd';\nimport { ContendersContent } from 'components/Contenders/ContendersContent';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\n\nimport { ContendersFilters } from 'components/Contenders/ContendersFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport type { ContenderCard } from 'types';\n\nexport function Contenders() {\n  const contendersQuery = useResourceFirebaseData<ContenderCard>({\n    tdrResourceName: 'contenders',\n    firebaseDataCollectionName: 'contenders',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Contenders\" subtitle=\"Characters, Celebrities, Personalities\">\n      <Layout hasSider>\n        <PageSider>\n          <ContendersFilters {...contendersQuery} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={contendersQuery.isLoading}\n            error={contendersQuery.error}\n            hasResponseData={!isEmpty(contendersQuery.data)}\n          >\n            <ContendersContent {...contendersQuery} />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default Contenders;\n"],"names":["buildDataFilters","data","ignoreKeys","keys","Object","values","reduce","acc","entry","forEach","key","includes","sortableKeys","filters","map","uniqueValues","Array","from","Set","uniqueValueRatio","length","push","label","options","value","sort","String","DataFilters","queryParams","addParam","useQueryParams","useMemo","vertical","style","overflowY","filter","capitalize","onChange","toLowerCase","get","useFilterDataByDataFilters","activeQueryParams","entries","some","sortKey","order","filteredData","every","orderBy","DownloadButton","fileName","loading","children","props","onClick","downloadObjectAsFile","Label","strong","DualLanguageTextField","language","rest","prefix","width","placeholder","toUpperCase","defaultValue","size","NSFWField","checked","checkedChildren","color","IdField","nsfw","copyToClipboard","useCopyToClipboardFunction","variant","readOnly","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","PaginationWrapper","pagination","spaceProps","paginationComponent","showQuickJumper","className","direction","SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","togglePendingSave","useGlobalContext","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","icon","disabled","danger","block","ImageCard","id","preview","fileExtension","getUrl","useBaseUrl","imageURL","replace","clsx","src","fallback","state","useCopyToClipboard","App","info","truncate","omission","success","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","useQuery","queryKey","queryFn","useGridPagination","defaultCurrent","defaultPageSize","pageSizeOptions","resetter","currentPage","Number","pageSize","previous","usePrevious","page","start","end","slice","toString","current","onShowSizeChange","_","total","hideOnSinglePage","defaultParams","searchParams","setSearchParams","useSearchParams","undefined","delete","set","addParams","params","defaultValues","removeParam","is","useEffectOnce","has","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","refetchQueries","onError","error","description","isSuccess","isPending","cloneDeep","isEmpty","firebaseData","isLoading","save","mutate","serializeFirebaseData","addEntryToUpdate","item","prev","entriesToUpdate","resourceName","enabled","query","res","fetch","json","hasResponseData","useTDResourceNonCollection","updateQueryFunction","updateDoc","useMutation","mutationFn","DECKS","checkInvalidDecks","decks","exclusivity","deck","ContenderEditCard","contender","onUpdateDualText","field","merge","en","pt","hoverable","maxWidth","cover","title","name","e","target","PLACEHOLDER_DUAL_LANGUAGE_OBJECT","mode","onUpdateDecks","removeDuplicates","status","align","onUpdateNSFW","gap","Exclusivity","content","onUpdateExclusivity","trigger","EditOutlined","ContendersContent","level","wrap","ContendersFilters","JSON","stringify","copy","sortJsonKeys","deepCleanObject","prepareFileForDownload","DeckCounts","counts","englishExclusivity","portugueseExclusivity","bothExclusivity","deckCounts","invalidDecks","maxHeight","Contenders","contendersQuery","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}