{"version":3,"file":"static/js/ItemsDiagramSets.ed32c500.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/SaveButton.tsx","components/Daily/utils/games/daily-teoria-de-conjuntos.ts","components/Daily/utils/utils.ts","components/Items/Diagram/utils.ts","hooks/useGetFirebaseDoc.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useTablePagination.tsx","hooks/useUpdateFirebaseDoc.tsx","components/Items/Diagram/ItemsDiagramFilters.tsx","components/Items/Diagram/EditThingModal.tsx","components/Items/Diagram/AddNewThingFlow.tsx","components/Items/Diagram/Thing.tsx","components/Items/Diagram/RulesByThing.tsx","components/Items/Diagram/ThingsByRule.tsx","components/Items/Diagram/ItemUpdateGuard.tsx","components/Items/Diagram/DiagramGameSample.tsx","components/Items/Diagram/GameSimulator.tsx","components/Items/Diagram/ItemsDiagramSetsContent.tsx","pages/Items/ItemsDiagramSets.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, children, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      {children ?? 'Download JSON'}\n    </Button>\n  );\n}\n","import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { useGlobalContext } from 'context/GlobalContext';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  const { togglePendingSave } = useGlobalContext();\n\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      togglePendingSave(true);\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      togglePendingSave(false);\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { DailyTeoriaDeConjuntosEntry, ParsedDailyHistoryEntry } from '../types';\nimport { cloneDeep, difference, intersection, sample, sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from '../utils';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { getIsThingOutdated, getLatestRuleUpdate } from 'components/Items/Diagram/utils';\n\nexport const buildDailyTeoriaDeConjuntosGames = (\n  batchSize: number,\n  history: ParsedDailyHistoryEntry,\n  rules: Dictionary<DailyDiagramRule>,\n  things: Dictionary<DailyDiagramItem>\n) => {\n  console.count('Creating Teoria de Conjuntos...');\n  let lastDate = history.latestDate;\n  const used: string[] = [...history.used];\n\n  const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n  const thingsByRules = (() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    Object.values(things).forEach((entry) => {\n      // Only use things that are not outdated\n      if (!getIsThingOutdated(entry, latestRuleUpdate)) {\n        entry.rules.forEach((ruleId) => {\n          dict[ruleId].push(entry.itemId);\n        });\n      }\n    });\n    return dict;\n  })();\n\n  const entries: Dictionary<DailyTeoriaDeConjuntosEntry> = {};\n  for (let i = 0; i < batchSize; i++) {\n    const id = getNextDay(lastDate);\n\n    lastDate = id;\n    entries[id] = {\n      id,\n      type: 'teoria-de-conjuntos',\n      number: history.latestNumber + i + 1,\n      ...getRuleSet(things, thingsByRules, rules, used, latestRuleUpdate),\n    };\n  }\n  return entries;\n};\n\nfunction getRuleSet(\n  things: Dictionary<DailyDiagramItem>,\n  thingsByRules: Record<string, string[]>,\n  rules: Dictionary<DailyDiagramRule>,\n  used: string[],\n  latestRuleUpdate: number\n) {\n  const availableThingsIds = shuffle(\n    Object.keys(things).filter(\n      (id) => !used.includes(id) && !getIsThingOutdated(things[id], latestRuleUpdate)\n    )\n  );\n\n  // Get one random initial thing\n  const initialThingId = sample(availableThingsIds);\n  if (!initialThingId) throw new Error('No available things to choose from');\n  used.push(initialThingId);\n\n  const intersectingThing = {\n    id: initialThingId,\n    name: things[initialThingId].name,\n  };\n\n  // Group rules by type than get a random pair of rules of different types\n  const thingsRulesByType = things[initialThingId].rules.reduce((acc: Record<string, string[]>, ruleId) => {\n    const type = rules[ruleId].type;\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(ruleId);\n    return acc;\n  }, {});\n  // Delete any rule with less than 2 rules\n  Object.keys(thingsRulesByType).forEach((type) => {\n    if (thingsRulesByType[type].length < 2) delete thingsRulesByType[type];\n  });\n\n  const twoRandomTypes = sampleSize(Object.keys(thingsRulesByType), 2);\n\n  if (twoRandomTypes.length !== 2) throw new Error('No types found for this thing');\n  const selectedRules = [\n    sample(thingsRulesByType[twoRandomTypes[0]]),\n    sample(thingsRulesByType[twoRandomTypes[1]]),\n  ];\n  if (!selectedRules[0] || !selectedRules[1]) throw new Error('No rules found for this thing');\n\n  const ruleId = [selectedRules[0], selectedRules[1]].sort().join('-');\n  used.push(ruleId);\n\n  const level = rules[selectedRules[0]].level + rules[selectedRules[1]].level - 1;\n\n  const availableThingsByRules = cloneDeep(thingsByRules);\n  // Removed the initial thing from the available things\n  delete availableThingsByRules[initialThingId];\n\n  const itemsOnlyInRule1 = shuffle(\n    difference(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]])\n  );\n\n  const itemsOnlyInRule2 = shuffle(\n    difference(thingsByRules[selectedRules[1]], thingsByRules[selectedRules[0]])\n  );\n\n  const commonItems = shuffle(intersection(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]]));\n\n  // Get one unique initial thing that only fits rule 1\n  const selectedInitialThingId1 = itemsOnlyInRule1.pop();\n  if (!selectedInitialThingId1) throw new Error('No only in rule 1 things to choose from');\n  const rule1 = {\n    id: selectedRules[0],\n    text: rules[selectedRules[0]].title,\n    level: rules[selectedRules[0]].level,\n    thing: {\n      id: selectedInitialThingId1,\n      name: things[selectedInitialThingId1].name,\n    },\n  };\n\n  // Get one unique initial thing that only fits rule 2\n  const selectedInitialThingId2 = itemsOnlyInRule2.pop();\n  if (!selectedInitialThingId2) throw new Error('No only in rule 2 things to choose from');\n  const rule2 = {\n    id: selectedRules[1],\n    text: rules[selectedRules[1]].title,\n    level: rules[selectedRules[1]].level,\n    thing: {\n      id: selectedInitialThingId2,\n      name: things[selectedInitialThingId2].name,\n    },\n  };\n\n  // Get up to 4 unique things that fit both rules, if possible\n  const sampleCommonThings = sampleSize(commonItems, 4);\n  const sampleRule1Things = sampleSize(itemsOnlyInRule1, 8);\n  const sampleRule2Things = sampleSize(itemsOnlyInRule2, 8);\n  const gabarito: Record<string, number> = {};\n  sampleCommonThings.forEach((id) => (gabarito[id] = 0));\n  sampleRule1Things.forEach((id) => (gabarito[id] = 1));\n  sampleRule2Things.forEach((id) => (gabarito[id] = 2));\n\n  // Sample 8 things among the options\n  const selectionIds = sampleSize([...sampleCommonThings, ...sampleRule1Things, ...sampleRule2Things], 8);\n\n  const selectedThings = selectionIds.map((id) => ({\n    id,\n    name: things[id].name,\n    rule: gabarito[id],\n  }));\n\n  // Build title\n  const TITLES: Record<string, string> = {\n    contains: 'Inclusão',\n    starts: 'Inicialização',\n    ends: 'Terminação',\n    grammar: 'Gramática',\n    order: 'Sequência',\n    count: 'Contagem',\n    comparison: 'Comparação',\n    repetition: 'Repetição',\n  };\n\n  const title = [\n    TITLES?.[rules[rule1.id].type] ?? 'Desconhecido',\n    TITLES?.[rules[rule2.id].type] ?? 'Desconhecido',\n  ].join(' vs ');\n  const setId = [rule1.id, rule2.id].sort().join('::');\n\n  // Create the DailyTeoriaDeConjuntosEntry object\n  const entry: Omit<DailyTeoriaDeConjuntosEntry, 'id' | 'type' | 'number'> = {\n    title,\n    setId,\n    level,\n    rule1,\n    rule2,\n    intersectingThing,\n    things: selectedThings,\n  };\n  return entry;\n}\n","import { sample } from 'lodash';\nimport moment from 'moment';\n\n/**\n * Returns the current date in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The current date in 'YYYY-MM-DD' format.\n */\nexport function getToday(): string {\n  return moment().format('YYYY-MM-DD');\n}\n\n/**\n * Returns the date of yesterday in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The date of yesterday in 'YYYY-MM-DD' format.\n */\nexport function getYesterday(): string {\n  return moment().subtract(1, 'days').format('YYYY-MM-DD');\n}\n\n/**\n * Calculates the next day based on the given date string.\n *\n * @param dateString - The date string in the format 'YYYY-MM-DD'.\n * @returns The next day in the format 'YYYY-MM-DD'.\n */\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n\n/**\n * Checks if a given date is a Saturday or Sunday.\n *\n * @param {string} dateString - The date in 'YYYY-MM-DD' format.\n * @returns {boolean} True if the date is a Saturday or Sunday, false otherwise.\n */\nexport function checkWeekend(dateString: string): boolean {\n  const date = moment(dateString, 'YYYY-MM-DD');\n  return [6, 0].includes(date.day()); // 0 represents Sunday and 6 represents Saturday in moment.js\n}\n\nconst THRESHOLD = 500;\nexport function getWordsWithUniqueLetters(words: string[]): string[] {\n  const selectedWords: string[] = [];\n  const usedLetters: BooleanDictionary = {};\n  let tries = 0;\n\n  while (selectedWords.length < 4 && tries < THRESHOLD) {\n    const word = sample(words) ?? '';\n    const splitWord = word.split('');\n    const isGood = splitWord.every((letter) => !usedLetters[letter]);\n    if (isGood) {\n      selectedWords.push(word);\n      splitWord.forEach((letter) => {\n        usedLetters[letter] = true;\n      });\n    } else {\n      tries++;\n    }\n  }\n  if (tries > THRESHOLD || selectedWords.length < 4) {\n    console.count('Could not find 4 words with unique letters');\n    while (selectedWords.length < 4) {\n      const word = sample(words) ?? '';\n      if (!selectedWords.includes(word)) {\n        selectedWords.push(word);\n      }\n    }\n  }\n\n  if (selectedWords.length < 4) {\n    console.error('Could not find 4 words with unique letters', selectedWords);\n  }\n\n  return selectedWords;\n}\n","import { memoize } from 'lodash';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { stringRemoveAccents } from 'utils';\n\nexport const SYLLABLE_SEPARATOR = '|';\nexport const LETTERS = 'abcdefghijklmnopqrstuvwxyz';\nexport const CONSONANTS = 'bcdfghjklmnpqrstvwxyz';\nexport const VOWELS = 'aeiou';\nexport const ACCENTS = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n\nconst cleanupWord = memoize((word: string) => {\n  return stringRemoveAccents(word).toLowerCase();\n});\n\nconst countLetters = (word: string) => {\n  return cleanupWord(word).length;\n};\n\nconst countVowels = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => VOWELS.includes(letter)).length;\n};\n\nconst countConsonants = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => CONSONANTS.includes(letter)).length;\n};\n\nconst countAccents = (word: string) => {\n  return word\n    .toLowerCase()\n    .split('')\n    .filter((letter) => ACCENTS.test(letter)).length;\n};\n\nconst countWords = (text: string) => {\n  return text.split(' ').length;\n};\n\nexport const verifiers: Record<string, (word: string) => boolean> = {\n  // The first two letters are in alphabetical order\n  'ddr-7-pt': (word: string) => {\n    return LETTERS.indexOf(cleanupWord(word)[0]) < LETTERS.indexOf(cleanupWord(word)[1]);\n  },\n  // has 4 or less letters\n  'ddr-8-pt': (word: string) => countLetters(word) <= 4,\n  // Has exactly 5 letters\n  'ddr-9-pt': (word: string) => countLetters(word) === 5,\n  // Has 6 letters\n  'ddr-10-pt': (word: string) => countLetters(word) === 6,\n  // Has between 7\n  'ddr-11-pt': (word: string) => countLetters(word) === 7,\n  // Has more than 8 letters\n  'ddr-12-pt': (word: string) => countLetters(word) > 7,\n  // Has more than 1 word\n  'ddr-13-pt': (word: string) => countWords(word) > 1,\n  // Has two or more different vowels\n  'ddr-14-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size >= 2;\n  },\n  // Has 4 or less unique letters\n  'ddr-15-pt': (word: string) => new Set(cleanupWord(word).split('')).size <= 4,\n  // Has more consonants than vowels\n  'ddr-16-pt': (word: string) => countConsonants(word) > countVowels(word),\n  // Has more vowels than consonants\n  'ddr-17-pt': (word: string) => countVowels(word) > countConsonants(word),\n  // The first letter is repeated at least once\n  'ddr-18-pt': (word: string) => {\n    const firstLetter = cleanupWord(word)[0];\n    return cleanupWord(word).slice(1).includes(firstLetter);\n  },\n  // has repeated letters\n  'ddr-19-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) =>\n        cleanupWord(word)\n          .slice(index + 1)\n          .includes(letter)\n      );\n  },\n  // has repeated vowels\n  'ddr-20-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          VOWELS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has repeated consonants\n  'ddr-21-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          CONSONANTS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has consecutive vowels\n  'ddr-22-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => VOWELS.includes(letter) && VOWELS.includes(word[index + 1]));\n  },\n  // starts with letters from A to M\n  'ddr-23-pt': (word: string) => 'abcdefghijklm'.includes(cleanupWord(word)[0]),\n  // starts with letters from N to Z\n  'ddr-24-pt': (word: string) => 'nopqrstuvwxyz'.includes(cleanupWord(word)[0]),\n  // starts with a vowel\n  'ddr-25-pt': (word: string) => VOWELS.includes(cleanupWord(word)[0]),\n  // starts with a consonant\n  'ddr-26-pt': (word: string) => CONSONANTS.includes(cleanupWord(word)[0]),\n  // Double consecutive consonants\n  'ddr-27-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => CONSONANTS.includes(letter) && word[index + 1] === letter);\n  },\n  // Has an A\n  'ddr-28-pt': (word: string) => cleanupWord(word).includes('a'),\n  // Has an E\n  'ddr-29-pt': (word: string) => cleanupWord(word).includes('e'),\n  // Has an U\n  'ddr-30-pt': (word: string) => cleanupWord(word).includes('u'),\n  // Has a Q or J\n  'ddr-31-pt': (word: string) => cleanupWord(word).includes('q'),\n  // Has a C or Ç\n  'ddr-32-pt': (word: string) => cleanupWord(word).includes('c') || cleanupWord(word).includes('ç'),\n  // Has an M or N followed by a consonant\n  'ddr-33-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (['m', 'n'].includes(letter) && CONSONANTS.includes(word[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has an H\n  'ddr-34-pt': (word: string) => cleanupWord(word).includes('h'),\n  // Has H preceded by a consonant\n  'ddr-35-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (letter === 'h' && CONSONANTS.includes(word[index - 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has K, W or Y\n  'ddr-36-pt': (word: string) =>\n    cleanupWord(word).includes('k') || cleanupWord(word).includes('w') || cleanupWord(word).includes('y'),\n  // Has an accent\n  'ddr-37-pt': (word: string) => countAccents(word) > 0,\n  // Ends with a vowel\n  'ddr-38-pt': (word: string) => {\n    return VOWELS.includes(cleanupWord(word).slice(-1));\n  },\n  // Ends with a consonant\n  'ddr-39-pt': (word: string) => CONSONANTS.includes(cleanupWord(word).slice(-1)),\n  // Ends with an S\n  'ddr-40-pt': (word: string) => cleanupWord(word).slice(-1) === 's',\n  // Has an I\n  'ddr-47-pt': (word: string) => cleanupWord(word).includes('i'),\n  // Has an O\n  'ddr-48-pt': (word: string) => cleanupWord(word).includes('o'),\n  // Has an X\n  'ddr-49-pt': (word: string) => cleanupWord(word).includes('x'),\n  // Has an J\n  'ddr-52-pt': (word: string) => cleanupWord(word).includes('j'),\n};\n\nexport const syllableDependencyVerifier: Record<\n  string,\n  (word: string, syllables: string, isAcronym: boolean) => boolean\n> = {\n  // Has 2 syllables\n  'ddr-3-pt': (word: string, syllables: string) =>\n    countWords(word) === 1 && syllables.split(SYLLABLE_SEPARATOR).length === 2,\n  // Has 3 syllables\n  'ddr-4-pt': (word: string, syllables: string) =>\n    countWords(word) === 1 && syllables.split(SYLLABLE_SEPARATOR).length === 3,\n  // Has 4 syllables\n  'ddr-22-pt': (word: string, syllables: string) =>\n    countWords(word) === 1 && syllables.split(SYLLABLE_SEPARATOR).length === 4,\n  // Has two consecutive vowels on the same syllable\n  'ddr-41-pt': (word: string, syllables: string) => {\n    return (\n      countWords(word) === 1 &&\n      syllables.split(SYLLABLE_SEPARATOR).some((syllable) => {\n        return syllable.split('').some((letter, index) => {\n          if (VOWELS.includes(letter) && VOWELS.includes(syllable[index + 1])) {\n            return true;\n          }\n          return false;\n        });\n      })\n    );\n  },\n  // Has two consecutive vowels on different syllables\n  'ddr-42-pt': (_: string, syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable, index) => {\n      if (index === 0) {\n        return false;\n      }\n      return syllable[0] === syllables.split(SYLLABLE_SEPARATOR)[index - 1].slice(-1);\n    });\n  },\n  // Single syllable word\n  'ddr-46-pt': (word: string, syllables: string, isAcronym: boolean) =>\n    countWords(word) === 1 && !isAcronym && syllables.split(SYLLABLE_SEPARATOR).length === 1,\n};\n\nexport const stressSyllableDependencyVerifier: Record<\n  string,\n  (word: string, syllables: string, stress: number) => boolean\n> = {\n  // The stress syllable is on the last syllable (oxitona)\n  'ddr-43-pt': (word: string, _, stress: number) => {\n    return countWords(word) === 1 && stress === 0;\n  },\n  // The stress syllable is on the second to last syllable (paroxitona)\n  'ddr-44-pt': (word: string, _, stress: number) => {\n    return countWords(word) === 1 && stress === 1;\n  },\n  // The stress syllable is on the third to last syllable (proparoxitona)\n  'ddr-45-pt': (word: string, _, stress: number) => {\n    return countWords(word) === 1 && stress === 2;\n  },\n};\n\nexport const getLatestRuleUpdate = (rules: Dictionary<DailyDiagramRule>) => {\n  return Object.values(rules).reduce((acc, rule) => {\n    return Math.max(acc, rule.updatedAt);\n  }, 0);\n};\n\nexport const getIsThingOutdated = (thing: DailyDiagramItem, latestRuleUpdate: number) => {\n  return latestRuleUpdate > thing.updatedAt;\n};\n\nconst checkIsVowel = (char: string) => VOWELS.includes(stringRemoveAccents(char));\nconst checkIsConsonant = (char: string) => CONSONANTS.includes(stringRemoveAccents(char));\nconst LMNRS = ['s', 'r', 'l', 'm', 'n'];\nconst DOUBLE_LETTERS = [\n  'rr',\n  'ss',\n  'st',\n  'sc',\n  'lm',\n  'ld',\n  'mp',\n  'mb',\n  'rn',\n  'rm',\n  'rt',\n  'rd',\n  'lt',\n  'ld',\n  'nt',\n  'nd',\n  'sp',\n  'ls',\n];\n/**\n * Guesses the separation of syllables in a given word.\n * @param word - The word for which to guess the syllables separation.\n * @returns The guessed syllables separation as a string.\n */\nexport const guessSyllablesSeparation = (word: string): string => {\n  let syllables: string[] = [];\n  let currentSyllable = '';\n\n  const stringWithoutAccents = stringRemoveAccents(word);\n\n  for (let i = 0; i < word.length; i++) {\n    const char = stringWithoutAccents[i];\n    // Space makes a syllable\n    if (char === ' ') {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n      continue;\n    }\n\n    // Hyphen makes a syllable\n    if (char === '-') {\n      syllables.push(currentSyllable + '-');\n      currentSyllable = '';\n      continue;\n    }\n\n    if (checkIsVowel(char) && i < stringWithoutAccents.length - 2) {\n      const nextChar = stringWithoutAccents[i + 1];\n      const nextNextChar = stringWithoutAccents[i + 2];\n      // If the next character is a consonant and the next next character is a consonant, the first pair is a syllable\n      if (LMNRS.includes(nextChar) && checkIsConsonant(nextNextChar)) {\n        currentSyllable += word[i] + word[i + 1];\n        i++; // Skip the next character\n        continue;\n      }\n    }\n\n    // Handle \"c\" followed by \"h\", \"r\", or \"l\"\n    if (\n      char === 'c' &&\n      i < stringWithoutAccents.length - 2 &&\n      ['h', 'r', 'l'].includes(stringWithoutAccents[i + 1]) &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle \"l\" or \"n\" followed by \"h\"\n    if (\n      ['l', 'n'].includes(char) &&\n      i < stringWithoutAccents.length - 2 &&\n      stringWithoutAccents[i + 1] === 'h' &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle consonant followed by vowel followed by consonant cluster\n    if (\n      checkIsConsonant(char) &&\n      i < stringWithoutAccents.length - 3 &&\n      checkIsVowel(stringWithoutAccents[i + 1]) &&\n      LMNRS.includes(stringWithoutAccents[i + 2]) &&\n      checkIsConsonant(stringWithoutAccents[i + 3])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    currentSyllable += word[i];\n\n    if (\n      checkIsVowel(char) &&\n      i < stringWithoutAccents.length - 1 &&\n      !checkIsVowel(stringWithoutAccents[i + 1]) &&\n      !['l', 'r', 'n'].includes(stringWithoutAccents[i + 1])\n    ) {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n    }\n  }\n\n  if (currentSyllable !== '') {\n    syllables.push(currentSyllable);\n  }\n\n  // As a final effort, if there are syllables with \"rr\" or \"ss\", split them but keep the characters. e.g. carro -> car:ro\n  syllables = syllables.map((syllable) => {\n    for (const doubleLetter of DOUBLE_LETTERS) {\n      if (syllable.includes(doubleLetter)) {\n        return syllable.split(doubleLetter).join(`${doubleLetter[0]}${SYLLABLE_SEPARATOR}${doubleLetter[1]}`);\n      }\n    }\n    return syllable;\n  });\n\n  return syllables.filter(Boolean).join(SYLLABLE_SEPARATOR);\n};\n\n/**\n * Separates the syllables of a given word.\n * @param word - The word to separate syllables from.\n * @returns The word with syllables separated by '|'.\n */\nexport function separateSyllables(word: string): string {\n  const syllablePattern =\n    /([^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*[aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]{1,3}[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*)(?=[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]|$)/gi;\n\n  const proposed = word.replace(syllablePattern, '$1|').slice(0, -1);\n\n  return proposed.replace(/\\s/g, '');\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { TableProps } from 'antd';\nimport { useQueryParams } from './useQueryParams';\n\n/**\n * Options for configuring table pagination.\n */\ntype UseTablePaginationOptions = {\n  /**\n   * Only necessary if multiple tables are on the same page.\n   */\n  prefix?: string;\n\n  /**\n   * The default current page number.\n   */\n  defaultCurrent?: number;\n\n  /**\n   * The default number of items per page.\n   */\n  defaultPageSize?: number;\n\n  /**\n   * An array of available page size options.\n   */\n  pageSizeOptions?: number[];\n\n  /**\n   * The total number of items in the table.\n   */\n  total: number;\n\n  /**\n   * Whether to show the quick jumper input.\n   */\n  showQuickJumper?: boolean;\n};\n\nexport function useTablePagination({\n  prefix = '',\n  defaultCurrent = 1,\n  defaultPageSize = 10,\n  pageSizeOptions = [10, 20, 50, 100],\n  total,\n  showQuickJumper,\n}: UseTablePaginationOptions): TableProps['pagination'] {\n  const { queryParams, addParam } = useQueryParams();\n  const currentPage = Number(queryParams.get(`${prefix}page`) ?? String(defaultCurrent));\n  const pageSize = Number(queryParams.get(`${prefix}pageSize`) ?? String(defaultPageSize));\n\n  const onChange = (page: number) => {\n    addParam(`${prefix}page`, page.toString(), String(defaultCurrent));\n  };\n  const onShowSizeChange = (_: number, size: number) => {\n    addParam(`${prefix}pageSize`, size.toString(), String(defaultPageSize));\n  };\n\n  return {\n    current: currentPage,\n    pageSize,\n    onChange,\n    onShowSizeChange,\n    defaultCurrent,\n    defaultPageSize,\n    pageSizeOptions,\n    total,\n    hideOnSinglePage: true,\n    showQuickJumper,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { ClusterOutlined, TableOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterSegments } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { cloneDeep } from 'lodash';\nimport { DailyDiagramItem } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nexport function ItemsDiagramFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n  entriesToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const { addParams, queryParams } = useQueryParams();\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(entriesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"daily-diagram-items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'rule'}\n        onChange={(mode) => addParams({ display: mode, page: 1 }, { page: 1 })}\n        options={[\n          {\n            title: 'By Rule',\n            icon: <ClusterOutlined />,\n            value: 'rule',\n          },\n          {\n            title: 'By Thing',\n            icon: <TableOutlined />,\n            value: 'thing',\n          },\n        ]}\n      />\n\n      <Divider />\n\n      <Button size=\"small\" block onClick={() => addParams({ display: 'simulator' })}>\n        Simulator\n      </Button>\n\n      <Typography.Paragraph type=\"secondary\" className=\"my-6\">\n        v2.0.1\n      </Typography.Paragraph>\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(diagramItems: Dictionary<DailyDiagramItem>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(diagramItems);\n  // Object.values(copy).forEach((item) => {\n  //   item.syllables = (item.syllables ?? '').replace(/·/g, SYLLABLE_SEPARATOR);\n  // });\n  // console.log(copy);\n\n  return sortJsonKeys(copy);\n}\n","import { Affix, Button, Flex, Form, Input, Modal, Radio, Switch } from 'antd';\nimport clsx from 'clsx';\nimport { Item } from 'components/Sprites';\nimport { orderBy } from 'lodash';\nimport { useEffect, useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\n\nimport {\n  separateSyllables,\n  stressSyllableDependencyVerifier,\n  SYLLABLE_SEPARATOR,\n  syllableDependencyVerifier,\n  verifiers,\n} from './utils';\n\nexport type ThingFormValues = Record<string, boolean | string | number>;\n\ntype EditThingModalProps = {\n  isModalOpen: boolean;\n  onSaveThing: (item: DailyDiagramItem) => void;\n  onCancel: () => void;\n  thing: DailyDiagramItem;\n  rules: Dictionary<DailyDiagramRule>;\n  width?: number | string;\n  itemAliases?: string[];\n  subtitle?: string;\n  okButtonText?: string;\n  onGiveAnotherThing?: () => void;\n};\n\nexport function EditThingModal({\n  isModalOpen,\n  onSaveThing,\n  onCancel,\n  thing,\n  rules,\n  width,\n  itemAliases,\n  subtitle,\n  okButtonText,\n  onGiveAnotherThing,\n}: EditThingModalProps) {\n  // Sort rules properly by type\n  const orderedRules = useMemo(() => {\n    return orderBy(Object.values(rules), [\n      // Not auto\n      (r) => {\n        const index = ['manual', 'dependency', 'auto'].indexOf(r.method);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by type\n      (r) => {\n        const index = ['grammar', 'comparison', 'order', 'count', 'contains', 'ends'].indexOf(r.type);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by partial title\n      (r) => r.title.slice(0, 7),\n      // Sort by id\n      (r) => Number(r.id.split('-')[1]),\n    ]);\n  }, [rules]);\n\n  // Build initial values\n  const [form] = Form.useForm();\n  const values = Form.useWatch([], form);\n  const hasUndefinedValues = !values || Object.values(values ?? {}).some((value) => value === undefined);\n\n  // Automation: If name is changed, recalculates all rules\n  const nameWatch = Form.useWatch('name', form);\n  useEffect(() => {\n    // If initial state where name is still undefined, ignore\n    if (!nameWatch) return;\n\n    if (thing.name && thing.syllables && nameWatch === thing.name) return;\n\n    // If name changes, recalculate all rules\n    const fields: Record<string, boolean | string | number | undefined> = {\n      syllables: separateSyllables(nameWatch),\n      stressedSyllable: (thing.stressedSyllable ?? nameWatch.includes(' ')) ? -1 : 0,\n    };\n    Object.keys(rules).forEach((ruleId) => {\n      if (verifiers[ruleId]) {\n        fields[ruleId] = verifiers[ruleId](nameWatch);\n      } else {\n        fields[ruleId] = thing.rules.length > 0 ? thing.rules.includes(ruleId) : undefined;\n      }\n    });\n    form.setFieldsValue(fields);\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Syllables\n  const syllables = Form.useWatch('syllables', form);\n  const isAcronym = form.getFieldValue('ddr-51-pt');\n\n  useEffect(() => {\n    if (isAcronym) {\n      form.setFieldsValue({ stressedSyllable: undefined });\n      form.setFieldsValue({ 'ddr-43-pt': false });\n      form.setFieldsValue({ 'ddr-44-pt': false });\n      form.setFieldsValue({ 'ddr-45-pt': false });\n      form.setFieldsValue({ 'ddr-46-pt': false });\n    }\n    if (isAcronym === undefined) {\n      form.setFieldsValue({ 'ddr-51-pt': false });\n    }\n  }, [isAcronym]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (syllables) {\n      const syllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (syllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = syllableDependencyVerifier[ruleId](nameWatch, syllables, isAcronym);\n        }\n        return acc;\n      }, {});\n      form.setFieldsValue({\n        ...syllableRulesUpdate,\n        stressedSyllable:\n          syllables === thing.syllables\n            ? thing.stressedSyllable\n            : (thing.stressedSyllable ?? nameWatch.includes(' '))\n              ? -1\n              : undefined,\n      });\n    }\n  }, [nameWatch, syllables, isAcronym]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Stressed syllable\n  const stressedSyllable = Form.useWatch('stressedSyllable', form);\n  useEffect(() => {\n    if (!isAcronym && stressedSyllable !== undefined) {\n      const stressSyllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (stressSyllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = stressSyllableDependencyVerifier[ruleId](nameWatch, syllables, stressedSyllable);\n        }\n        return acc;\n      }, {});\n\n      form.setFieldsValue({\n        ...stressSyllableRulesUpdate,\n      });\n    }\n  }, [stressedSyllable]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Male vs Female nouns vs Both genders\n  const rule1 = form.getFieldValue('ddr-1-pt');\n  const rule2 = form.getFieldValue('ddr-2-pt');\n  const rule5 = form.getFieldValue('ddr-50-pt');\n  useEffect(() => {\n    if (rule1 === true) {\n      form.setFieldsValue({ 'ddr-2-pt': false });\n      form.setFieldsValue({ 'ddr-50-pt': false });\n    }\n  }, [rule1]); // eslint-disable-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (rule2 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n      form.setFieldsValue({ 'ddr-50-pt': false });\n    }\n  }, [rule2]); // eslint-disable-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (rule5 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n      form.setFieldsValue({ 'ddr-2-pt': false });\n    }\n  }, [rule5]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: syllable count\n  const rule3 = form.getFieldValue('ddr-3-pt');\n  useEffect(() => {\n    if (rule3 === true) {\n      form.setFieldsValue({ 'ddr-4-pt': false });\n    }\n  }, [rule3]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule4 = form.getFieldValue('ddr-4-pt');\n  useEffect(() => {\n    if (rule4 === true) {\n      form.setFieldsValue({ 'ddr-3-pt': false });\n    }\n  }, [rule4]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: has hyphen\n  useEffect(() => {\n    const hasHyphen = nameWatch?.includes('-');\n    if (hasHyphen) {\n      form.setFieldsValue({ 'ddr-5-pt': true });\n    }\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFinish = (values: any) => {\n    const preparedThing = serializeThing(values);\n    onSaveThing(preparedThing);\n  };\n\n  const splitSyllables: string[] = useMemo(() => (syllables ?? '').split(SYLLABLE_SEPARATOR), [syllables]);\n\n  return (\n    <Modal\n      width={width}\n      title={\n        <>\n          Edit {thing.name} {subtitle && <small>{subtitle}</small>}\n        </>\n      }\n      open={isModalOpen}\n      onOk={form.submit}\n      onCancel={onCancel}\n      maskClosable={false}\n      okButtonProps={{ disabled: hasUndefinedValues, htmlType: 'submit', size: 'large' }}\n      okText={okButtonText ?? 'Add Item'}\n    >\n      <Form\n        form={form}\n        name={`new-item-${thing.itemId}`}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        initialValues={deserializeThing(thing, rules)}\n        layout=\"vertical\"\n        size=\"small\"\n        labelWrap\n      >\n        <div className=\"diagram-container\">\n          <div>\n            <Item id={thing.itemId} width={50} />\n          </div>\n\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"itemId\" label=\"Item\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Form.Item name=\"syllables\" label=\"Syllables\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"stressedSyllable\" label=\"Stressed Syllable\">\n            <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n              {splitSyllables.map((syllable, index) => (\n                <Radio key={index} value={splitSyllables.length - index - 1}>\n                  {syllable}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item name=\"updatedAt\" label=\"Updated At\">\n            <Input value={new Date(thing.updatedAt).toLocaleString()} readOnly />\n          </Form.Item>\n\n          {(itemAliases || onGiveAnotherThing) && (\n            <div>\n              {itemAliases && <span>Options: {itemAliases?.join(', ')}</span>}\n              {onGiveAnotherThing && (\n                <Button size=\"small\" onClick={onGiveAnotherThing} type=\"dashed\" className=\"mt-2\">\n                  Give me another thing\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div>\n            <Affix offsetTop={50}>\n              <Flex justify=\"center\" align=\"center\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={hasUndefinedValues}>\n                  {okButtonText ?? 'Add Item'}\n                </Button>\n              </Flex>\n            </Affix>\n          </div>\n        </div>\n        <div className=\"diagram-container\">\n          {orderedRules.map((rule) => {\n            if (rule.method === 'auto' && verifiers[rule.id]) {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            if (rule.method === 'dependency') {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item\n                key={rule.id}\n                name={rule.id}\n                label={rule.title}\n                className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n              >\n                <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n                  <Radio value={true}>✅</Radio>\n                  <Radio value={false}>❌</Radio>\n                </Radio.Group>\n              </Form.Item>\n            );\n          })}\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n\nconst deserializeThing = (\n  thing: DailyDiagramItem,\n  rules: Dictionary<DailyDiagramRule>\n): Record<string, boolean | string | number> => {\n  let wasAnyRuleUpdated = false;\n  return {\n    name: thing.name,\n    itemId: thing.itemId,\n    syllables: thing.syllables ?? separateSyllables(thing.name),\n    stressedSyllable: thing.stressedSyllable ?? 0,\n\n    ...Object.keys(rules).reduce((acc: Record<string, boolean | undefined>, ruleId) => {\n      // Only re-verify if rule is older than the last update\n      if (thing.updatedAt < rules[ruleId].updatedAt) {\n        if (verifiers[ruleId]) {\n          const reVerify = verifiers[ruleId](thing.name);\n          if (reVerify && thing.rules.includes(ruleId)) {\n            wasAnyRuleUpdated = true;\n          }\n          acc[ruleId] = reVerify;\n        } else {\n          acc[ruleId] = undefined;\n        }\n      } else {\n        acc[ruleId] = thing.rules.includes(ruleId);\n      }\n\n      return acc;\n    }, {}),\n    updatedAt: wasAnyRuleUpdated ? Date.now() : thing.updatedAt,\n  };\n};\n\nconst serializeThing = (values: Record<string, boolean | string | number>): DailyDiagramItem => {\n  const { itemId, name, updatedAt, syllables, stressedSyllable, ...thingRules } = values;\n\n  return {\n    itemId: itemId as string,\n    name: name as string,\n    updatedAt: Date.now(),\n    syllables: syllables as string,\n    stressedSyllable: stressedSyllable as number,\n    rules: Object.keys(thingRules).filter((key) => thingRules[key] === true),\n  };\n};\n","import { App, Button } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { sample } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { wait } from 'utils';\nimport { EditThingModal } from './EditThingModal';\n\ntype AddNewThingFlowProps = {\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  width: number;\n};\n\nexport function AddNewThingFlow({ addEntryToUpdate, availableThings, rules, width }: AddNewThingFlowProps) {\n  const { notification } = App.useApp();\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  const onActivateThing = () => {\n    const randomItem = sample(availableThings);\n    if (randomItem) {\n      setActiveThing({\n        itemId: randomItem.id,\n        name: chooseNameThatIsASingleWord(randomItem),\n        updatedAt: Date.now(),\n        syllables: '',\n        stressedSyllable: 0,\n        rules: [],\n      });\n    } else {\n      setActiveThing(null);\n    }\n  };\n\n  const aliases = useMemo(() => {\n    if (!activeThing) return [];\n    const item = availableThings.find((thing) => thing.id === activeThing.itemId);\n    return [item?.name.pt, ...(item?.aliasesPt ?? [])].filter(Boolean);\n  }, [activeThing, availableThings]);\n\n  const onAddItem = async (newThing: DailyDiagramItem) => {\n    if (!activeThing) return;\n    if (!newThing.name || !newThing.itemId) {\n      notification.error({ message: 'Name and Item ID are required' });\n    }\n\n    addEntryToUpdate(newThing.itemId, newThing);\n\n    console.log('COMPLETED SAVE');\n\n    setActiveThing(null);\n\n    await wait(250);\n\n    onActivateThing();\n  };\n\n  const onGiveAnotherThing = async () => {\n    setActiveThing(null);\n    await wait(100);\n    onActivateThing();\n  };\n\n  return (\n    <>\n      <Button size=\"large\" onClick={onActivateThing}>\n        Classify New Item\n      </Button>\n      {!!activeThing && (\n        <EditThingModal\n          isModalOpen={activeThing !== null}\n          onSaveThing={onAddItem}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          width={width * 0.9}\n          itemAliases={aliases as string[]}\n          onGiveAnotherThing={onGiveAnotherThing}\n        />\n      )}\n    </>\n  );\n}\n\nconst chooseNameThatIsASingleWord = (item: ItemT) => {\n  if (item.name.pt.split(' ').length === 1) return item.name.pt;\n\n  if (item.aliasesPt) {\n    return item.aliasesPt.find((alias) => alias.split(' ').length === 1) ?? item.name.pt;\n  }\n  return item.name.pt;\n};\n","import { Flex, Typography } from 'antd';\nimport { TransparentButton } from 'components/Common';\nimport { Item } from 'components/Sprites';\nimport { DailyDiagramItem } from 'types';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n};\n\nexport function Thing({ itemId, name, width = 50 }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\">\n      <Item id={itemId} width={width} />\n      <Typography.Text code key={itemId}>\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n\ntype ThingButtonProps = {\n  thing: DailyDiagramItem;\n  onActivateThing: (thing: DailyDiagramItem) => void;\n  width?: number;\n};\n\nexport function ThingButton({ thing, width = 50, onActivateThing }: ThingButtonProps) {\n  return (\n    <TransparentButton onClick={() => onActivateThing(thing)}>\n      <Thing itemId={thing.itemId} name={thing.name} width={width} />\n    </TransparentButton>\n  );\n}\n","import { Divider, Flex, Space, Table, TableColumnsType, Tag, Tooltip, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { useMemo } from 'react';\nimport { ThingButton } from './Thing';\nimport { useTablePagination } from 'hooks/useTablePagination';\n\ntype RulesByThingProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n  setActiveThing: React.Dispatch<React.SetStateAction<DailyDiagramItem | null>>;\n};\n\nexport function RulesByThing({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  setActiveThing,\n  thingsByRules,\n}: RulesByThingProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  const rows = useMemo(() => Object.values(things), [things]);\n\n  const paginationProps = useTablePagination({ total: rows.length, showQuickJumper: true });\n\n  const columns: TableColumnsType<DailyDiagramItem> = [\n    {\n      title: 'ItemId',\n      dataIndex: 'itemId',\n      key: 'itemId',\n      sorter: (a, b) => Number(a.itemId) - Number(b.itemId),\n      render: (itemId: string) => <Tag>{itemId}</Tag>,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n      render: (name: string) => <Typography.Text>{name}</Typography.Text>,\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'itemId',\n      key: 'sprite',\n      render: (itemId: string) => (\n        <ThingButton key={`i-${itemId}`} thing={things[itemId]} onActivateThing={setActiveThing} />\n      ),\n    },\n    {\n      title: 'Rules',\n      dataIndex: 'rules',\n      key: 'rules',\n      render: (itemRules: string[], record) => (\n        <Space wrap>\n          {itemRules.map((ruleId) => (\n            <Tooltip title={rules[ruleId].title} key={ruleId}>\n              <Tag color={rules[ruleId].updatedAt > record.updatedAt ? 'red' : undefined}>{ruleId}</Tag>\n            </Tooltip>\n          ))}\n        </Space>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'rules',\n      key: 'count',\n      sorter: (a, b) => a.rules.length - b.rules.length,\n      render: (rules: string[]) => rules.length,\n    },\n  ];\n\n  const duplicatedThings = useMemo(() => {\n    const dict: Dictionary<string[]> = {};\n\n    Object.values(things).forEach((item) => {\n      if (!dict[item.name]) {\n        dict[item.name] = [];\n      }\n      dict[item.name].push(item.itemId);\n    });\n    return Object.values(dict).filter((ids) => ids.length > 1);\n  }, [things]);\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>\n        Rules By Items <Divider type=\"vertical\" /> Added: <Tag>{Object.keys(things).length}</Tag> Available to\n        add <Tag>{availableThings.length}</Tag>\n      </Typography.Title>\n\n      <AddNewThingFlow\n        addEntryToUpdate={addEntryToUpdate}\n        availableThings={availableThings}\n        rules={rules}\n        width={containerWidth}\n      />\n\n      <Divider />\n\n      <Table dataSource={rows} columns={columns} rowKey=\"itemId\" pagination={paginationProps} />\n\n      <Divider />\n\n      <Typography.Title level={5}>Duplicated Things</Typography.Title>\n      <Space wrap>\n        {duplicatedThings.length === 0 && <Typography.Text>No duplicated things</Typography.Text>}\n        {duplicatedThings.map((ids) => (\n          <Flex key={ids[0]} align=\"center\">\n            <Tag color=\"red\">{ids.length}</Tag>\n            {ids.map((itemId) => (\n              <ThingButton key={`i-${itemId}`} thing={things[itemId]} onActivateThing={setActiveThing} />\n            ))}\n          </Flex>\n        ))}\n      </Space>\n    </Space>\n  );\n}\n","import { Divider, Rate, Space, Switch, Table, TableColumnsType, Tag, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\n\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { ThingButton } from './Thing';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { useTablePagination } from 'hooks/useTablePagination';\n\ntype ThingsByRuleProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n  setActiveThing: React.Dispatch<React.SetStateAction<DailyDiagramItem | null>>;\n  containerWidth: number;\n};\n\nexport function ThingsByRule({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n  setActiveThing,\n  containerWidth,\n}: ThingsByRuleProps) {\n  const { is, addParam } = useQueryParams();\n\n  const rows = useMemo(\n    () =>\n      Object.values(rules).map((r) => ({\n        ...r,\n        thingsCount: thingsByRules[r.id].length,\n      })),\n    [rules, thingsByRules]\n  );\n\n  const paginationProps = useTablePagination({ total: rows.length, showQuickJumper: true });\n\n  const stats = useMemo(() => {\n    const quantities = Object.values(thingsByRules).map((things) => things.length);\n\n    return {\n      maxThings: Math.max(...quantities),\n      minThings: Math.min(...quantities),\n      averageThings: Math.round(\n        Object.values(thingsByRules).reduce((sum, things) => sum + things.length, 0) /\n          Object.keys(thingsByRules).length\n      ),\n    };\n  }, [thingsByRules]);\n\n  const columns: TableColumnsType<DailyDiagramRule & { thingsCount: number }> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => Number(a.id.split('-')[1]) - Number(b.id.split('-')[1]),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Rule',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a, b) => a.title.localeCompare(b.title),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: (a, b) => a.type.localeCompare(b.type),\n    },\n    {\n      title: 'Method',\n      dataIndex: 'method',\n      key: 'method',\n      sorter: (a, b) => a.method.localeCompare(b.method),\n    },\n    {\n      title: 'Things',\n      dataIndex: 'thingsCount',\n      key: 'thingsCount',\n      render: (thingsCount: number, record) => (\n        <Space size=\"small\">\n          <Tag>{thingsCount}</Tag>\n          {is('showThings') ? (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 20).map((itemId) => (\n                <ThingButton\n                  key={`${record.id}-${itemId}`}\n                  thing={things[itemId]}\n                  onActivateThing={setActiveThing}\n                />\n              ))}\n              {thingsByRules[record.id].length > 20 && (\n                <Typography.Text>+{thingsCount - 20} more</Typography.Text>\n              )}\n            </Space>\n          ) : (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 5).map((itemId) => (\n                <ThingButton\n                  key={`${record.id}-${itemId}`}\n                  thing={things[itemId]}\n                  onActivateThing={setActiveThing}\n                />\n              ))}\n              {thingsByRules[record.id].length > 5 && (\n                <Typography.Text>+{thingsCount - 5} more</Typography.Text>\n              )}\n            </Space>\n          )}\n        </Space>\n      ),\n      sorter: (a, b) => a.thingsCount - b.thingsCount,\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      sorter: (a, b) => a.level - b.level,\n      render: (level: number) => <Rate value={level} count={3} disabled />,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Title level={4}>\n        Things By Rule (Added: {Object.keys(things).length} | {availableThings.length}){' '}\n      </Typography.Title>\n\n      <Space split={<Divider type=\"vertical\" />} wrap>\n        <AddNewThingFlow\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          width={containerWidth}\n        />\n\n        <Typography.Text strong>\n          Average Things: <Tag>{stats.averageThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Max Things: <Tag>{stats.maxThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Min Things: <Tag>{stats.minThings}</Tag>\n        </Typography.Text>\n\n        <Switch\n          checked={is('showThings')}\n          onChange={(e) => addParam('showThings', e)}\n          checkedChildren=\"Hide things\"\n          unCheckedChildren=\"Show things\"\n        />\n      </Space>\n\n      <Table dataSource={rows} columns={columns} pagination={paginationProps} />\n    </Space>\n  );\n}\n","import { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { EditThingModal } from './EditThingModal';\nimport { wait } from 'utils';\nimport { getLatestRuleUpdate, SYLLABLE_SEPARATOR } from './utils';\n\ntype ItemUpdateGuardProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  rules: Dictionary<DailyDiagramRule>;\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  children: ReactNode;\n};\n\nexport function ItemUpdateGuard({ children, things, rules, addEntryToUpdate }: ItemUpdateGuardProps) {\n  // If any rules has been added or updated AFTER the last time the user has updated the item, the user will be warned to update the item\n  const toUpdateThings = useMemo(() => {\n    const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n    return Object.values(things).filter((item) => {\n      const latestThingUpdate = item.updatedAt;\n\n      // Prevent updating items that have the syllables field but it's not correct\n      if (\n        item.syllables &&\n        item.syllables.split(SYLLABLE_SEPARATOR).join('') !== item.name.replace(/\\s/g, '')\n      ) {\n        console.log('❗️ Name and syllables do not match', item.name, item.syllables);\n        return true;\n      }\n\n      // if (item.syllables.endsWith('ie') && item.updatedAt < 1724527674296) {\n      //   return true;\n      // }\n\n      return latestRuleUpdate > latestThingUpdate;\n    });\n  }, [things, rules]);\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  useEffect(() => {\n    const updateThings = async (i: DailyDiagramItem) => {\n      console.log('Found things that need to update...');\n      setActiveThing(null);\n\n      // Await the wait function here\n      await wait(250);\n\n      if (toUpdateThings.length > 0) {\n        setActiveThing(toUpdateThings[0]);\n      }\n    };\n\n    console.count('Checking for things that need to update...');\n    if (toUpdateThings.length > 0) {\n      updateThings(toUpdateThings[0]);\n    }\n  }, [toUpdateThings]);\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <>\n      {activeThing && (\n        <EditThingModal\n          subtitle={`(${toUpdateThings.length} left to update)`}\n          isModalOpen={activeThing !== null}\n          onSaveThing={onUpdateThing}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          okButtonText=\"Update\"\n          width=\"90vw\"\n        />\n      )}\n      <>{children}</>\n    </>\n  );\n}\n","import { Collapse, Rate, Space, Typography } from 'antd';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { Thing } from './Thing';\nimport { ReactNode, useState } from 'react';\nimport { TransparentButton } from 'components/Common';\n\ntype DiagramGameSampleProps = {\n  game: DailyTeoriaDeConjuntosEntry;\n};\n\ntype TThing = {\n  id: string;\n  name: string;\n  rule: number;\n};\n\nexport function DiagramGameSample({ game }: DiagramGameSampleProps) {\n  const [leftRing, setLeftRing] = useState<TThing[]>([\n    {\n      id: game.rule1.thing.id,\n      name: game.rule1.thing.name,\n      rule: 1,\n    },\n  ]);\n  const [rightRing, setRightRing] = useState<TThing[]>([\n    {\n      id: game.rule2.thing.id,\n      name: game.rule2.thing.name,\n      rule: 2,\n    },\n  ]);\n  const [intersection, setIntersection] = useState<TThing[]>([\n    {\n      id: game.intersectingThing.id,\n      name: game.intersectingThing.name,\n      rule: 0,\n    },\n  ]);\n\n  const [playerOptions, setPlayerOptions] = useState<TThing[]>(game.things.slice(0, 4));\n\n  const [selectedThing, setSelectedThing] = useState<TThing | null>(game.things[0]);\n\n  // const\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Typography.Title level={4}>Game Sample</Typography.Title>\n      <Typography.Title level={5}>\"{game.title}\"</Typography.Title>\n      <Rate value={game.level} count={game.level} disabled />\n      <Typography.Paragraph style={{ maxWidth: '500px' }}>\n        O círculo amarelo tem uma regra gramatical secreta e o circulo vermelho tem outra regra gramatical\n        secreta. O quadrado do meio representa a interseção entre a regra amarela e a regra vermelha.\n      </Typography.Paragraph>\n\n      <Space>\n        <VennDiagram\n          width={600}\n          leftCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {leftRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          rightCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {rightRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          intersectionChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {intersection.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n        />\n      </Space>\n      <Typography.Text>Coloque os objetos nos círculos corretos:</Typography.Text>\n      <Space className=\"space--center\">\n        {playerOptions.map((thing) => (\n          <TransparentButton\n            style={thing.id === selectedThing?.id ? { outline: '3px solid hotPink' } : {}}\n            onClick={() => setSelectedThing(thing)}\n          >\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} />\n          </TransparentButton>\n        ))}\n      </Space>\n\n      <Collapse\n        items={[\n          {\n            key: '1',\n            label: 'Resposta',\n            children: (\n              <Space direction=\"vertical\">\n                <Typography.Text strong>Regra Amarela</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule1.text}</Typography.Text>\n                  </li>\n                </ul>\n\n                <Typography.Text strong>Regra Vermelha</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule2.text}</Typography.Text>\n                  </li>\n                </ul>\n              </Space>\n            ),\n          },\n        ]}\n      />\n\n      <div style={{ height: '200px' }}></div>\n    </Space>\n  );\n}\n\ntype VennDiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nfunction VennDiagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: VennDiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import { Button, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\nimport './GameSimulator.scss';\n\ntype GameSimulatorProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n};\n\nexport function GameSimulator({ things, rules }: GameSimulatorProps) {\n  const [ref] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  const onGenerateDemoGames = () => {\n    let demos: any = null;\n    try {\n      demos = buildDailyTeoriaDeConjuntosGames(\n        25,\n        {\n          latestDate: '2023/01/01',\n          latestNumber: 0,\n          used: [],\n        },\n        rules,\n        things\n      );\n\n      console.log(demos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>Game Simulator</Typography.Title>\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      <Button size=\"large\" onClick={onGenerateDemoGames}>\n        Generate Demos (log)\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} key={JSON.stringify(simulation)} />}\n    </Space>\n  );\n}\n","import { Typography } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\n\nimport { RulesByThing } from './RulesByThing';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ThingsByRule } from './ThingsByRule';\nimport { orderBy } from 'lodash';\nimport { ItemUpdateGuard } from './ItemUpdateGuard';\nimport { GameSimulator } from './GameSimulator';\nimport { EditThingModal } from './EditThingModal';\nimport { useMeasure } from 'react-use';\n\nexport function ItemsDiagramSetsContent({\n  data,\n  addEntryToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n  const tdrItemsQuery = useTDResource<ItemT>('items');\n  const tdrDiagramRulesQuery = useTDResource<DailyDiagramRule>('daily-diagram-rules');\n\n  const availableThings = useMemo(() => {\n    return Object.values(tdrItemsQuery.data ?? {}).filter((item) => {\n      if (data && data[item.id] !== undefined) return false;\n      if (item.nsfw) return false;\n      const isNameSingleWord = item.name.pt.split(' ').length === 1;\n\n      if (item.decks?.includes('thing')) return true;\n      if (item.decks?.includes('alien') && isNameSingleWord) return true;\n      if (item.decks?.includes('manufactured') && isNameSingleWord) return true;\n\n      return false;\n    });\n  }, [data, tdrItemsQuery.data]);\n\n  const rules = useMemo(() => {\n    return tdrDiagramRulesQuery.data ?? {};\n  }, [tdrDiagramRulesQuery.data]);\n\n  const thingsByRules = useMemo(() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    orderBy(Object.values(data), ['updatedAt'], ['desc']).forEach((entry) => {\n      entry.rules.forEach((ruleId) => {\n        dict[ruleId].push(entry.itemId);\n      });\n    });\n    return dict;\n  }, [data, rules]);\n\n  const { is, queryParams } = useQueryParams();\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  if (tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading) {\n    return <Typography.Text>Loading...</Typography.Text>;\n  }\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <DataLoadingWrapper\n      isLoading={tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading}\n      hasResponseData={tdrItemsQuery.hasResponseData || tdrDiagramRulesQuery.hasResponseData}\n    >\n      <div ref={ref}>\n        <ItemUpdateGuard things={data} rules={rules} addEntryToUpdate={addEntryToUpdate}>\n          {activeThing && (\n            <EditThingModal\n              isModalOpen={activeThing !== null}\n              onSaveThing={(at) => {\n                onUpdateThing(at);\n                setActiveThing(null);\n              }}\n              onCancel={() => setActiveThing(null)}\n              thing={activeThing}\n              rules={rules}\n              okButtonText=\"Update\"\n              width={containerWidth}\n            />\n          )}\n\n          {(is('display', 'rule') || !queryParams.has('display')) && (\n            <ThingsByRule\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n              thingsByRules={thingsByRules}\n              setActiveThing={setActiveThing}\n              containerWidth={containerWidth}\n            />\n          )}\n\n          {is('display', 'thing') && (\n            <RulesByThing\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n              thingsByRules={thingsByRules}\n              setActiveThing={setActiveThing}\n            />\n          )}\n\n          {is('display', 'simulator') && (\n            <GameSimulator\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n            />\n          )}\n        </ItemUpdateGuard>\n      </div>\n    </DataLoadingWrapper>\n  );\n}\n","import { Flex, Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsDiagramFilters } from 'components/Items/Diagram/ItemsDiagramFilters';\nimport { ItemsDiagramSetsContent } from 'components/Items/Diagram/ItemsDiagramSetsContent';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyDiagramItem } from 'types';\n\nexport function ItemsDiagramSets() {\n  const diagramData = useResourceFirebaseData<DailyDiagramItem>({\n    tdrResourceName: 'daily-diagram-items',\n    firebaseDataCollectionName: 'diagramItems',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Diagram Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsDiagramFilters {...diagramData} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={diagramData.isLoading || diagramData.isSaving}\n            error={diagramData.error}\n            hasResponseData={!isEmpty(diagramData.data)}\n          >\n            <Flex vertical gap={24}>\n              <ItemsDiagramSetsContent {...diagramData} />\n            </Flex>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiagramSets;\n"],"names":["DownloadButton","data","fileName","loading","children","props","onClick","downloadObjectAsFile","SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","togglePendingSave","useGlobalContext","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","disabled","danger","block","buildDailyTeoriaDeConjuntosGames","batchSize","history","rules","things","count","lastDate","latestDate","used","latestRuleUpdate","getLatestRuleUpdate","thingsByRules","dict","Object","values","reduce","acc","rule","id","forEach","entry","getIsThingOutdated","ruleId","push","itemId","entries","i","getNextDay","number","latestNumber","getRuleSet","availableThingsIds","shuffle","keys","filter","includes","initialThingId","sample","Error","intersectingThing","name","thingsRulesByType","length","twoRandomTypes","sampleSize","selectedRules","sort","join","level","cloneDeep","itemsOnlyInRule1","difference","itemsOnlyInRule2","commonItems","intersection","selectedInitialThingId1","pop","rule1","text","title","thing","selectedInitialThingId2","rule2","sampleCommonThings","sampleRule1Things","sampleRule2Things","gabarito","selectedThings","map","TITLES","contains","starts","ends","grammar","order","comparison","repetition","setId","getYesterday","subtract","dateString","add","checkWeekend","date","day","SYLLABLE_SEPARATOR","LETTERS","CONSONANTS","VOWELS","ACCENTS","cleanupWord","memoize","word","stringRemoveAccents","toLowerCase","countLetters","countVowels","split","letter","countConsonants","countWords","verifiers","indexOf","vowels","Set","firstLetter","slice","some","index","test","countAccents","syllableDependencyVerifier","syllables","syllable","_","isAcronym","stressSyllableDependencyVerifier","stress","Math","max","updatedAt","separateSyllables","replace","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","options","useQuery","queryKey","queryFn","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","value","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","removeParam","is","get","has","queryParams","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","App","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","success","refetchQueries","onError","error","description","useMemo","isSuccess","isPending","isEmpty","firebaseData","isLoading","save","mutate","serializeFirebaseData","addEntryToUpdate","item","prev","entriesToUpdate","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","hasResponseData","useTDResourceNonCollection","useTablePagination","prefix","defaultCurrent","defaultPageSize","pageSizeOptions","total","showQuickJumper","current","Number","pageSize","onChange","page","toString","onShowSizeChange","hideOnSinglePage","updateQueryFunction","updateDoc","useMutation","mutationFn","ItemsDiagramFilters","vertical","gap","JSON","stringify","diagramItems","copy","sortJsonKeys","prepareFileForDownload","label","mode","display","ClusterOutlined","TableOutlined","className","EditThingModal","isModalOpen","onSaveThing","onCancel","width","itemAliases","subtitle","okButtonText","onGiveAnotherThing","orderedRules","orderBy","r","method","Infinity","form","Form","hasUndefinedValues","nameWatch","fields","stressedSyllable","setFieldsValue","getFieldValue","syllableRulesUpdate","stressSyllableRulesUpdate","rule5","rule3","rule4","splitSyllables","open","onOk","submit","maskClosable","okButtonProps","htmlType","okText","onFinish","preparedThing","serializeThing","autoComplete","initialValues","deserializeThing","layout","labelWrap","readOnly","optionType","buttonStyle","toLocaleString","offsetTop","justify","align","valuePropName","clsx","checkedChildren","unCheckedChildren","wasAnyRuleUpdated","reVerify","thingRules","AddNewThingFlow","availableThings","activeThing","setActiveThing","onActivateThing","randomItem","chooseNameThatIsASingleWord","aliases","find","pt","aliasesPt","Boolean","newThing","wait","alias","Thing","code","ThingButton","RulesByThing","ref","containerWidth","useMeasure","rows","paginationProps","columns","dataIndex","sorter","a","b","render","localeCompare","itemRules","record","wrap","color","duplicatedThings","ids","direction","dataSource","rowKey","pagination","ThingsByRule","thingsCount","stats","quantities","maxThings","minThings","min","averageThings","round","sum","strong","checked","e","ItemUpdateGuard","toUpdateThings","latestThingUpdate","updateThings","DiagramGameSample","game","leftRing","setLeftRing","rightRing","setRightRing","setIntersection","playerOptions","setPlayerOptions","selectedThing","setSelectedThing","style","maxWidth","VennDiagram","leftCircleChildren","height","arr","rightCircleChildren","intersectionChildren","outline","items","xmlns","viewBox","fill","stroke","strokeMiterlimit","strokeWidth","d","x","y","GameSimulator","simulation","setSimulation","demos","ItemsDiagramSetsContent","tdrItemsQuery","tdrDiagramRulesQuery","nsfw","isNameSingleWord","decks","DataLoadingWrapper","at","ItemsDiagramSets","diagramData","hasSider","PageSider"],"sourceRoot":""}