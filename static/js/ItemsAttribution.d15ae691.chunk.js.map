{"version":3,"file":"static/js/ItemsAttribution.d15ae691.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/LanguageFlag.tsx","components/Common/ResponseState.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/Items/ItemsTypeahead.tsx","hooks/useGetFirebaseDoc.ts","hooks/useUpdateFirebaseDoc.tsx","hooks/useItemQueryParams.ts","hooks/useItemsAttribution.ts","context/ItemsAttributeValuesContext.tsx","components/Items/AttributionValueButtons.tsx","components/Items/ItemAttributeDescription.tsx","components/Common/Stat.tsx","components/Items/ItemAttributeStats.tsx","components/Items/ItemBuildingBlocks.tsx","components/Items/ItemAttributionCard.tsx","components/Items/ItemAttributionNavigation.tsx","components/Items/ItemSamplerCard.tsx","hooks/useItemSampler.ts","components/Common/GoToTopButton.tsx","components/Items/ItemGroupingCard.tsx","hooks/useItemGrouping.ts","components/Items/ItemComparatorCard.tsx","hooks/useItemsComparator.ts","components/Items/ItemAttributionPageContent.tsx","components/Items/ItemAttributionFilersSections.tsx","components/Items/ItemAttributionFilters.tsx","pages/Images/ItemsAttribution.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, InputNumber, Select, Switch } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n};\n\nexport function FilterSwitch({ label, value, onChange, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" />\n    </Form.Item>\n  );\n}\n","import { AutoComplete, AutoCompleteProps, Input } from 'antd';\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item } from 'types';\n\ntype ItemsTypeaheadProps = {\n  items: Dictionary<Item>;\n  isPending: boolean;\n  onFinish: (id: string) => void;\n} & Omit<AutoCompleteProps, 'options'>;\n\nexport function ItemsTypeahead({\n  items,\n  isPending,\n  style,\n  size,\n  placeholder,\n  allowClear,\n  onFinish,\n  ...rest\n}: ItemsTypeaheadProps) {\n  const { namesDict, options } = useMemo(() => {\n    console.log('Recomputing item names typeahead...');\n\n    const namesDict = Object.values(items).reduce((acc: Dictionary<string>, entry) => {\n      const nameEn = `${entry.name.en} (${entry.id})`;\n      const namePt = `${entry.name.pt} (${entry.id})`;\n      acc[nameEn] = entry.id;\n      acc[namePt] = entry.id;\n\n      return acc;\n    }, {});\n\n    const options = orderBy(Object.keys(namesDict), [(name) => name.toLowerCase()]).map((name) => ({\n      value: name,\n    }));\n\n    return { namesDict, options };\n  }, [items, isPending]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [filteredOptions, setFilteredOptions] = useState<{ value: string }[]>([]);\n\n  const handleSearch = (searchText: string) => {\n    setFilteredOptions(\n      options.filter(\n        (option) =>\n          String(option?.value ?? '')\n            .toUpperCase()\n            .indexOf(searchText?.toUpperCase()) !== -1\n      )\n    );\n  };\n\n  const handlePressEnter = () => {\n    if (filteredOptions.length > 0) {\n      const key = filteredOptions[0].value;\n      if (namesDict[key] !== undefined) {\n        onFinish(namesDict[key]);\n      }\n    }\n  };\n\n  const onSelect = (key: any) => {\n    if (namesDict[key] !== undefined) {\n      onFinish(namesDict[key]);\n    }\n  };\n\n  return (\n    <AutoComplete\n      options={options}\n      style={{ width: 250, ...style }}\n      allowClear={allowClear ?? true}\n      placeholder={placeholder ?? 'Search by name or id...'}\n      filterOption={(inputValue, option) =>\n        String(option?.value ?? '')\n          .toUpperCase()\n          .indexOf(inputValue?.toUpperCase()) !== -1\n      }\n      onSearch={handleSearch}\n      notFoundContent=\"No items found\"\n      onSelect={onSelect}\n      {...rest}\n    >\n      <Input onPressEnter={handlePressEnter} />\n    </AutoComplete>\n  );\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { useSearchParams } from 'react-router-dom';\n\nexport function useItemQueryParams() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addQueryParam = (key: string, value: string) => {\n    searchParams.set(key, `${value}`);\n    setSearchParams(searchParams);\n  };\n\n  const removeQueryParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  return {\n    view: searchParams.get('view') ?? 'classifier',\n    setView: (value: string) => setSearchParams({ view: value }),\n    addQueryParam,\n    removeQueryParam,\n    searchParams,\n  };\n}\n","import { App } from 'antd';\nimport { isEmpty, mapKeys, merge, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { getNewItem, getNewItemAttributeValues } from 'utils';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\n/**\n * This is to avoid new items being generated and unused just for the sake of placeholders.\n */\nconst globalNewItemsAttributesValues: Dictionary<ItemAtributesValues> = {};\n\nexport function useItemsAttribution() {\n  const { notification, message } = App.useApp();\n  const queryClient = useQueryClient();\n\n  // Gather basic item data\n  const tdrItemsQuery = useTDResource<Item>('items');\n  const tdrAttributesQuery = useTDResource<ItemAttribute>('items-attributes');\n  const tdrItemsAttributesValuesQuery = useTDResource<ItemAtributesValues>('items-attribute-values');\n  const firebaseItemsAttributeValuesQuery = useGetFirebaseDoc<\n    Dictionary<string>,\n    Dictionary<ItemAtributesValues>\n  >('data', 'itemsAttributeValues', {\n    select: parseItemsAttributeValuesData,\n  });\n\n  const [modifiedAttributeValues, setModifiedAttributeValues] = useState<Dictionary<ItemAtributesValues>>({});\n\n  const mutation = useUpdateFirebaseDoc('data', 'itemsAttributeValues', {\n    onSuccess: () => {\n      notification.success({\n        message: 'itemsAttributeValues updated',\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'data', 'itemsAttributeValues'],\n      });\n      setModifiedAttributeValues({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: 'itemsAttributeValues update failed',\n        description: error.message,\n      });\n    },\n  });\n\n  const savedItemsAttributeValues = useMemo(() => {\n    return {\n      ...(tdrItemsAttributesValuesQuery.data ?? {}),\n      ...(firebaseItemsAttributeValuesQuery.data ?? {}),\n    };\n  }, [tdrItemsAttributesValuesQuery.data, firebaseItemsAttributeValuesQuery.data]);\n\n  const isDirty = !isEmpty(modifiedAttributeValues);\n  const addAttributesToUpdate = (id: string, item: ItemAtributesValues) => {\n    setModifiedAttributeValues((prev) => ({ ...prev, [id]: { ...item, updatedAt: Date.now() } }));\n  };\n  const addMultipleAttributesToUpdate = (itemsArr: ItemAtributesValues[]) => {\n    setModifiedAttributeValues((prev) => ({\n      ...prev,\n      ...mapKeys(\n        itemsArr.map((item) => ({ ...item, updatedAt: Date.now() })),\n        'id'\n      ),\n    }));\n  };\n\n  const firebaseData = firebaseItemsAttributeValuesQuery.data;\n\n  const save = () => {\n    mutation.mutate(stringifyItemsAttributeValuesData({ ...firebaseData, ...modifiedAttributeValues }));\n  };\n\n  // Filter items that have the alien group only\n  const availableItemIds = useMemo(() => {\n    const items = tdrItemsQuery.data ?? {};\n    return orderBy(\n      Object.keys(items).filter((id) => {\n        return (items[id]?.groups ?? []).includes('alien');\n      }),\n      (id) => Number(id),\n      'asc'\n    );\n  }, [tdrItemsQuery.data]);\n\n  const getItem = (id: string) => {\n    if ((tdrItemsQuery.data ?? {})?.[id]) {\n      return tdrItemsQuery.data[id];\n    }\n    if (id) {\n      message.info(`Item ${id} not found in TDR. Creating a new item...`);\n    }\n    return getNewItem({ id });\n  };\n\n  const getItemAttributeValues = (id: string) => {\n    const storedValue = savedItemsAttributeValues?.[id] ?? {};\n    const modifiedValue = modifiedAttributeValues[id] ?? {};\n\n    if (isEmpty(storedValue) && isEmpty(modifiedValue)) {\n      globalNewItemsAttributesValues[id] = getNewItemAttributeValues({ id });\n      return globalNewItemsAttributesValues[id];\n    }\n\n    return merge(globalNewItemsAttributesValues?.[id] ?? {}, storedValue, modifiedValue);\n  };\n\n  return {\n    availableItemIds,\n    getItem,\n    getItemAttributeValues,\n    attributes: tdrAttributesQuery.data ?? {},\n    isLoading:\n      tdrItemsQuery.isLoading ||\n      tdrAttributesQuery.isLoading ||\n      tdrItemsAttributesValuesQuery.isLoading ||\n      firebaseItemsAttributeValuesQuery.isLoading,\n    error:\n      tdrItemsQuery.error ||\n      tdrAttributesQuery.error ||\n      tdrItemsAttributesValuesQuery.error ||\n      firebaseItemsAttributeValuesQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addAttributesToUpdate,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate: modifiedAttributeValues,\n    isDirty,\n  };\n}\n\nconst parseItemsAttributeValuesData = (data: Dictionary<string>) => {\n  return Object.keys(data).reduce((acc: Dictionary<ItemAtributesValues>, key) => {\n    acc[key] = JSON.parse(data[key]);\n    return acc;\n  }, {});\n};\n\nconst stringifyItemsAttributeValuesData = (data: Dictionary<ItemAtributesValues>) => {\n  return Object.keys(data).reduce((acc: Dictionary<string>, key) => {\n    acc[key] = JSON.stringify(data[key]);\n    return acc;\n  }, {});\n};\n","import { App } from 'antd';\nimport { useItemsAttribution } from 'hooks/useItemsAttribution';\nimport { isEmpty, orderBy, random } from 'lodash';\nimport { ReactNode, useContext, createContext, useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { getNewItem, getNewItemAttributeValues, sortJsonKeys } from 'utils';\n\nexport type ItemsAttributeValuesContextType = {\n  getItem: (itemId: string) => Item;\n  getItemAttributeValues: (itemId: string) => ItemAtributesValues;\n  isLoading: boolean;\n  error: ResponseError;\n  hasResponseData: boolean;\n  isDirty: boolean;\n  itemAttributeValues: ItemAtributesValues;\n  prepareItemsAttributesFileForDownload: () => Dictionary<ItemAtributesValues>;\n  jumpToItem: (direction: string, itemId?: string) => void;\n  activeItem: Item;\n  onAttributeChange: (attributeId: string, value: number) => void;\n  isSaving: boolean;\n  save: () => void;\n  attributesList: ItemAttribute[];\n  availableItemIds: string[];\n  addAttributesToUpdate: (itemId: string, attributes: ItemAtributesValues) => void;\n  addMultipleAttributesToUpdate: (itemsArr: ItemAtributesValues[]) => void;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nconst ItemsAttributeValuesContext = createContext<ItemsAttributeValuesContextType>({\n  getItem: () => getNewItem(),\n  getItemAttributeValues: () => getNewItemAttributeValues(),\n  isLoading: true,\n  error: null,\n  hasResponseData: false,\n  isDirty: false,\n  jumpToItem: () => {},\n  activeItem: getNewItem(),\n  itemAttributeValues: getNewItemAttributeValues(),\n  onAttributeChange: () => {},\n  isSaving: false,\n  save: () => {},\n  attributesList: [],\n  availableItemIds: [],\n  addAttributesToUpdate: () => {},\n  addMultipleAttributesToUpdate: () => {},\n  prepareItemsAttributesFileForDownload: () => ({}),\n  attributes: {},\n});\n\ntype ItemsAttributeValuesProviderProps = {\n  children: ReactNode;\n};\n\nexport const ItemsAttributeValuesProvider = ({ children }: ItemsAttributeValuesProviderProps) => {\n  const {\n    getItem,\n    getItemAttributeValues,\n    availableItemIds,\n    isLoading,\n    error,\n    isSaving,\n    save,\n    addAttributesToUpdate,\n    isDirty,\n    attributes,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttribution();\n  const { message } = App.useApp();\n\n  const [itemIndex, setItemIndex] = useState(random(0, availableItemIds.length - 1));\n  const activeItem = getItem(availableItemIds[itemIndex]);\n  const itemAttributeValues = getItemAttributeValues(activeItem.id);\n\n  const jumpToItem = (direction: string, itemId?: string) => {\n    if (direction === 'next') {\n      setItemIndex((prev) => (prev + 1) % availableItemIds.length);\n    }\n    if (direction === 'previous') {\n      setItemIndex((prev) => (prev - 1 + availableItemIds.length) % availableItemIds.length);\n    }\n    if (direction === 'random') {\n      setItemIndex(random(0, availableItemIds.length - 1));\n    }\n\n    if (direction === 'first') {\n      setItemIndex(0);\n    }\n    if (direction === 'last') {\n      setItemIndex(availableItemIds.length - 1);\n    }\n    if (direction === 'next10') {\n      setItemIndex((prev) => (prev + 10) % availableItemIds.length);\n    }\n    if (direction === 'previous10') {\n      setItemIndex((prev) => (prev - 10 + availableItemIds.length) % availableItemIds.length);\n    }\n\n    if (direction === 'goTo' && itemId !== undefined) {\n      const index = availableItemIds.indexOf(itemId);\n      if (index !== -1) {\n        setItemIndex(index);\n      } else {\n        message.error(`Item ${itemId} is not available for attribution.`);\n      }\n    }\n  };\n\n  const attributesList = useMemo(() => orderBy(Object.values(attributes), 'name.en', 'asc'), [attributes]);\n\n  const onAttributeChange = (attributeId: string, value: number) => {\n    addAttributesToUpdate(activeItem.id, {\n      ...itemAttributeValues,\n      attributes: {\n        ...itemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const prepareItemsAttributesFileForDownload = () => {\n    return sortJsonKeys(\n      availableItemIds.reduce((acc: Dictionary<ItemAtributesValues>, itemId) => {\n        // Get items and only the ones with attributes\n        const item = getItemAttributeValues(itemId);\n\n        if (isEmpty(item.attributes)) {\n          return acc;\n        }\n\n        // Assess item completion\n        if (Object.keys(item.attributes).length === attributesList.length) {\n          item.complete = true;\n        } else {\n          delete item.complete;\n        }\n\n        acc[item.id] = item;\n\n        return acc;\n      }, {})\n    );\n  };\n\n  return (\n    <ItemsAttributeValuesContext.Provider\n      value={{\n        getItem,\n        getItemAttributeValues,\n        availableItemIds,\n        isLoading,\n        error,\n        hasResponseData: availableItemIds.length > 0 && !isEmpty(attributes),\n        isDirty,\n        itemAttributeValues,\n        jumpToItem,\n        activeItem,\n        onAttributeChange,\n        isSaving,\n        save,\n        attributes,\n        attributesList,\n        addAttributesToUpdate,\n        addMultipleAttributesToUpdate,\n        prepareItemsAttributesFileForDownload,\n      }}\n    >\n      {children}\n    </ItemsAttributeValuesContext.Provider>\n  );\n};\n\nexport const useItemsAttributeValuesContext = () => useContext(ItemsAttributeValuesContext);\n","import { Radio, Tooltip } from 'antd';\nimport { ItemAttribute } from 'types';\n\nimport { CheckCircleFilled, QuestionCircleOutlined } from '@ant-design/icons';\n\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nconst attributeOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC },\n];\n\nconst attributeLimitedOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC, disabled: true },\n];\n\ntype AttributionValueButtonsProps = {\n  attribute: ItemAttribute;\n  value?: number;\n  onChange: (attributeId: string, value: number) => void;\n  onlyButtons?: boolean;\n};\n\nexport function AttributionValueButtons({\n  attribute,\n  value,\n  onChange,\n  onlyButtons,\n}: AttributionValueButtonsProps) {\n  if (!attribute) return <></>;\n\n  if (onlyButtons) {\n    return (\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n    );\n  }\n\n  return (\n    <div key={attribute.id} className=\"attribute-button-container__row\">\n      <span className=\"attribute-button-container__label\">\n        {attribute.name.en}{' '}\n        <Tooltip title={attribute.description.en}>\n          <QuestionCircleOutlined />\n        </Tooltip>\n      </span>\n\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n\n      <span>\n        <CheckCircleFilled style={{ color: value && value > 7 ? 'green' : 'transparent' }} />\n      </span>\n    </div>\n  );\n}\n","import { Flex } from 'antd';\nimport clsx from 'clsx';\nimport { FilterSwitch } from 'components/Common';\nimport { AlienSign } from 'components/Sprites';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { filterMessage, getItemAttributePriorityResponse, parseAttribute } from 'utils';\n\ntype ItemAttributeDescriptionProps = {\n  itemAttributeValues: ItemAtributesValues;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nexport function ItemAttributeDescription({ itemAttributeValues, attributes }: ItemAttributeDescriptionProps) {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const filteredResponse = useMemo(\n    () =>\n      filterMessage(\n        getItemAttributePriorityResponse(itemAttributeValues, attributes),\n        showUnclear,\n        showUnrelated\n      ),\n    [itemAttributeValues, attributes, showUnclear, showUnrelated]\n  );\n\n  const Component = searchParams.get('signs') === 'true' ? AttributeSprite : AttributeText;\n\n  return (\n    <Flex gap={6} vertical>\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Alien Sings\"\n        value={searchParams.get('signs') === 'true'}\n        onChange={(v) => addQueryParam('signs', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <Flex gap={6} wrap=\"wrap\" className=\"item-attribute-value-statement\">\n        {filteredResponse.map((keyVariant, index, arr) => (\n          <Component\n            key={keyVariant}\n            keyVariant={keyVariant}\n            attributes={attributes}\n            firstElement={index === 0}\n            lastElement={index === arr.length - 1}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  );\n}\n\ntype AttributeSpriteProps = {\n  keyVariant: string;\n  attributes: Dictionary<ItemAttribute>;\n  firstElement: boolean;\n  lastElement: boolean;\n};\n\nexport function AttributeSprite({\n  keyVariant,\n  attributes,\n  withText,\n}: AttributeSpriteProps & { withText?: boolean }) {\n  const { key, className, text } = parseAttribute(keyVariant);\n\n  return (\n    <Flex vertical align=\"center\">\n      <AlienSign\n        width={50}\n        id={attributes[key].spriteId}\n        className={clsx('item-attribute-alien-sign', `item-attribute-alien-sign--${className}`)}\n      />\n      {withText && (\n        <Flex\n          wrap=\"wrap\"\n          justify=\"center\"\n          align=\"center\"\n          style={{ maxWidth: 50, textAlign: 'center', wordBreak: 'break-word' }}\n        >\n          {text} {attributes[key].name.en.toLowerCase()}\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nfunction AttributeText({ keyVariant, attributes, firstElement, lastElement }: AttributeSpriteProps) {\n  const { key, text } = parseAttribute(keyVariant);\n\n  const prefix = firstElement ? \"It's \" : '';\n  const suffix = lastElement ? '.' : ', ';\n\n  return (\n    <>\n      {prefix}\n      {text} {attributes[key].name.en.toLowerCase()}\n      {suffix}\n    </>\n  );\n}\n","import { Tag, Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StatProps = {\n  label: ReactNode;\n  children: ReactNode;\n};\n\nexport function Stat({ label, children }: StatProps) {\n  return (\n    <Typography.Text>\n      {label} <Tag>{children}</Tag>\n    </Typography.Text>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\nimport { Flex, Progress, Typography } from 'antd';\nimport { Stat } from 'components/Common/Stat';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\ntype ItemAttributeStatsProps = {\n  attributesList: ItemAttribute[];\n  itemAttributeValues: ItemAtributesValues;\n};\n\nexport function ItemAttributeStats({ attributesList, itemAttributeValues }: ItemAttributeStatsProps) {\n  const { completion, isDeterministic, value, isOpposing, relevancy } = useMemo(() => {\n    const total = attributesList.length;\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n    const completion = Math.floor((completed / total) * 100);\n\n    let isDeterministic = false;\n    let isOpposing = false;\n    let unclearCount = 0;\n    const value = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n      if (v <= 0) {\n        if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n          unclearCount += 1;\n        }\n        if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n          isOpposing = true;\n        }\n        return acc;\n      }\n      if (v === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        isDeterministic = true;\n      }\n\n      return acc + v;\n    }, 0);\n\n    const relevancy = Math.floor(((completed - unclearCount) / total) * 100);\n\n    return { completion, isDeterministic, value, isOpposing, relevancy };\n  }, [attributesList, itemAttributeValues.attributes]);\n\n  return (\n    <div>\n      <Typography.Text strong>Completion</Typography.Text>\n      <Progress percent={completion} size=\"small\" />\n      <Typography.Text strong>Stats</Typography.Text>\n      <Flex vertical>\n        <Stat label=\"Deterministic\">\n          {isDeterministic ? (\n            <CheckCircleFilled style={{ color: 'green' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red' }} />\n          )}\n        </Stat>\n        <Stat label=\"Opposing\">\n          {isOpposing ? (\n            <CheckCircleFilled style={{ color: 'CornflowerBlue' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'grey' }} />\n          )}\n        </Stat>\n        <Stat label=\"Value\">{value}</Stat>\n        <Stat label=\"Reliability\">{relevancy}%</Stat>\n      </Flex>\n    </div>\n  );\n}\n","import { Button, Input } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { Item as ItemT } from 'types';\n\nimport { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype ItemBlockProps = {\n  item: ItemT;\n};\n\ntype ItemBlocksAdditionalProps = {\n  className?: string;\n  width: number;\n  language: 'en' | 'pt';\n  to: string;\n};\n\nexport function ItemSprite({\n  item,\n  width,\n  className,\n}: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'width' | 'className'>) {\n  return (\n    <Item id={item.id} width={width} title={`${item.name.en} | ${item.name.pt}`} className={className} />\n  );\n}\n\nexport function ItemId({ item }: ItemBlockProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={item.nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={item.id}\n        readOnly\n        style={{ width: '8ch' }}\n        onClick={() => copyToClipboard(item.id)}\n      />\n    </span>\n  );\n}\n\nexport function ItemName({ item, language }: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'language'>) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Name in ${language.toUpperCase()}`}\n      variant=\"borderless\"\n      size=\"small\"\n      value={item.name[language]}\n      readOnly\n    />\n  );\n}\n\nexport function ItemGoTo({ item }: ItemBlockProps) {\n  const [, setSearchParams] = useSearchParams();\n  const onGoTo = () => {\n    setSearchParams({ itemId: item.id, view: 'classifier' });\n  };\n\n  return (\n    <span>\n      <Button size=\"small\" shape=\"round\" onClick={onGoTo}>\n        Go to\n      </Button>\n    </span>\n  );\n}\n","import { Affix, Button, Card, Divider, Flex, Space, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useEffect, useMemo } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemAttributeDescription } from './ItemAttributeDescription';\nimport { ItemAttributeStats } from './ItemAttributeStats';\nimport { ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemAttributionCard() {\n  const { activeItem, attributesList, itemAttributeValues, onAttributeChange, jumpToItem, attributes } =\n    useItemsAttributeValuesContext();\n  const { searchParams, removeQueryParam } = useItemQueryParams();\n  const queryParamsItemId = searchParams.get('itemId');\n\n  useEffect(() => {\n    if (queryParamsItemId) {\n      removeQueryParam('itemId');\n      jumpToItem('goTo', queryParamsItemId);\n    }\n  }, [queryParamsItemId, jumpToItem, removeQueryParam]);\n\n  const showOnlyUnset = searchParams.get('scope') === 'unset';\n  const filteredAttributesList = useMemo(\n    () =>\n      showOnlyUnset\n        ? attributesList.filter((attribute) => !itemAttributeValues.attributes[attribute.id])\n        : attributesList,\n    [showOnlyUnset, activeItem.id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (!activeItem)\n    return (\n      <Card>\n        <Typography.Text type=\"secondary\">\n          No item selected.{' '}\n          <Button size=\"small\" type=\"primary\" onClick={() => jumpToItem('random')}>\n            Random Item\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n\n  return (\n    <Card>\n      <div className=\"item-attribution-card\" key={`${activeItem.id}`}>\n        <Affix offsetTop={120} className=\"item-attribution-card__item\">\n          <Flex vertical gap={6}>\n            <ItemSprite item={activeItem} width={150} />\n            <ItemId item={activeItem} />\n            <ItemName item={activeItem} language=\"en\" />\n            <ItemName item={activeItem} language=\"pt\" />\n\n            <Divider className=\"my-2\" />\n            <ItemAttributeStats attributesList={attributesList} itemAttributeValues={itemAttributeValues} />\n            <Divider className=\"my-2\" />\n            <Typography.Text type=\"secondary\">\n              <ItemAttributeDescription itemAttributeValues={itemAttributeValues} attributes={attributes} />\n            </Typography.Text>\n          </Flex>\n        </Affix>\n\n        <Space size=\"small\" direction=\"vertical\" className=\"my-4 attribute-button-container\" wrap>\n          {filteredAttributesList.map((attribute, index) => (\n            <AttributionValueButtons\n              key={attribute.id}\n              attribute={attribute}\n              value={itemAttributeValues.attributes[attribute.id]}\n              onChange={onAttributeChange}\n            />\n          ))}\n        </Space>\n      </div>\n    </Card>\n  );\n}\n","import { Button, Popover } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { Item } from 'types';\n\nimport {\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  LeftOutlined,\n  RightOutlined,\n  VerticalLeftOutlined,\n  VerticalRightOutlined,\n} from '@ant-design/icons';\n\nimport { ItemsTypeahead } from './ItemsTypeahead';\n\nexport function ItemAttributionNavigation() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return (\n    <Button.Group className=\"my-4\">\n      <Button onClick={() => jumpToItem('first')} icon={<VerticalRightOutlined />}>\n        First\n      </Button>\n      <Button onClick={() => jumpToItem('previous10')} icon={<DoubleLeftOutlined />}>\n        Previous 10\n      </Button>\n      <Button onClick={() => jumpToItem('previous')} icon={<LeftOutlined />}>\n        Previous\n      </Button>\n      <Button onClick={() => jumpToItem('next')}>\n        Next <RightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('next10')}>\n        Next 10 <DoubleRightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('last')}>\n        Last <VerticalLeftOutlined />\n      </Button>\n      <Popover content={<GoToItemPopOverContent />} title=\"Title\">\n        <Button>Go To</Button>\n      </Popover>\n    </Button.Group>\n  );\n}\n\nfunction GoToItemPopOverContent() {\n  const tdrItemsQuery = useTDResource<Item>('items');\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return (\n    <ItemsTypeahead\n      items={tdrItemsQuery.data ?? {}}\n      isPending={false}\n      onFinish={(itemId) => jumpToItem('goTo', itemId)}\n    />\n  );\n}\n","import { Button, Card, Divider, Flex, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemSampler } from 'hooks/useItemSampler';\nimport { isEmpty } from 'lodash';\nimport { Fragment } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemSamplerCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { sampleIds, attribute, onGetSample, updateAttributeValue } = useItemSampler();\n\n  if (isEmpty(sampleIds) && isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">\n          No sample has been generated. Tweak options and{' '}\n          <Button size=\"small\" type=\"primary\" onClick={onGetSample}>\n            Get Sample\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={<Typography.Text>{attribute?.name.en}</Typography.Text>}\n      actions={[\n        <Button type=\"primary\" block ghost onClick={onGetSample}>\n          Get New Sample\n        </Button>,\n      ]}\n      extra={\n        <Button type=\"primary\" size=\"small\" onClick={onGetSample}>\n          Get New Sample\n        </Button>\n      }\n    >\n      <Flex vertical gap={6}>\n        {sampleIds.map((itemId) => {\n          const itemAttributes = getItemAttributeValues(itemId);\n          const item = getItem(itemId);\n\n          return (\n            <Fragment key={`${itemId}-${itemAttributes.updatedAt}`}>\n              <Flex gap={6}>\n                <ItemSprite item={item} width={75} />\n                <Flex vertical gap={6}>\n                  <Flex gap={6}>\n                    <ItemId item={item} />\n                    <ItemGoTo item={item} />\n                  </Flex>\n                  <ItemName item={item} language=\"en\" />\n                  <ItemName item={item} language=\"pt\" />\n                </Flex>\n                <AttributionValueButtons\n                  attribute={attribute!}\n                  value={itemAttributes.attributes[attribute!.id]}\n                  onChange={(attributeId: string, value: number) =>\n                    updateAttributeValue(item.id, attributeId, value)\n                  }\n                />\n              </Flex>\n              <Divider className=\"my-1\" />\n            </Fragment>\n          );\n        })}\n      </Flex>\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { sample as lodashSample, shuffle } from 'lodash';\nimport { useState } from 'react';\nimport { ItemAttribute } from 'types';\n\nimport { useItemQueryParams } from './useItemQueryParams';\n\nexport function useItemSampler() {\n  const { attributesList, availableItemIds, addAttributesToUpdate, getItemAttributeValues } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n\n  const [sampleIds, setSampleIds] = useState<string[]>([]);\n  const [attribute, setAttribute] = useState<ItemAttribute>();\n\n  // Create sample\n  const onGetSample = () => {\n    const attributeKey = searchParams.get('attribute') ?? lodashSample(attributesList)?.id ?? 'ali';\n    const selectedAttribute =\n      attributesList.find((a) => a.id === attributeKey) ?? lodashSample(attributesList);\n    const sampleSize = Number(searchParams.get('size')) || 9;\n\n    const selected: string[] = [];\n    const options = shuffle(availableItemIds);\n\n    for (let i = 0; i < options.length; i++) {\n      if (selected.length === sampleSize) break;\n\n      const itemId = options[i];\n      const currentAttributeValues = getItemAttributeValues(itemId).attributes;\n\n      if (!currentAttributeValues[attributeKey]) {\n        selected.push(itemId);\n      }\n    }\n\n    setAttribute(selectedAttribute);\n    setSampleIds(selected);\n  };\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  return {\n    sampleIds,\n    attribute,\n    onGetSample,\n    updateAttributeValue,\n  };\n}\n","import { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport { useEffect, useState } from 'react';\n\nexport function GoToTopButton(props: ButtonProps) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const handleScroll = () => {\n    setIsVisible(window.pageYOffset > 300);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <Button\n      className={`go-to-top-button ${isVisible ? 'visible' : ''}`}\n      onClick={scrollToTop}\n      icon={<VerticalAlignTopOutlined />}\n      {...props}\n    >\n      Go to Top\n    </Button>\n  );\n}\n","import { Button, Card, Flex, Pagination, Popconfirm, Typography } from 'antd';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemGrouping } from 'hooks/useItemGrouping';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMedia } from 'react-use';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemGroupingCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { attribute, pageIds, group, updateAttributeValue, updatePageItemsAsUnrelated, pagination } =\n    useItemGrouping();\n  const { searchParams } = useItemQueryParams();\n  const isNarrow = useMedia('(max-width: 1024px)');\n\n  if (isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">No group attribute has been selected.</Typography.Text>\n      </Card>\n    );\n  }\n\n  const paginationComponent = (\n    <Pagination\n      key=\"pagination\"\n      onChange={pagination.onChange}\n      current={pagination.current}\n      total={pagination.total}\n      pageSizeOptions={pagination.pageSizeOptions}\n      pageSize={pagination.pageSize}\n      onShowSizeChange={pagination.onShowSizeChange}\n    />\n  );\n\n  const isUnsetSet = searchParams.get('scope') === 'unset' || !searchParams.get('scope');\n  const unrelateButton = isUnsetSet && (\n    <Popconfirm\n      key=\"unrelate-button\"\n      title={`Are you sure everything is unrelated to ${attribute.name.en}?`}\n      onConfirm={updatePageItemsAsUnrelated}\n    >\n      <Button type=\"primary\" danger disabled={pageIds.length === 0}>\n        Unrelate Unset Items on Page\n      </Button>\n    </Popconfirm>\n  );\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} ({group.length})\n        </Typography.Text>\n      }\n      extra={paginationComponent}\n      actions={[unrelateButton, <GoToTopButton key=\"go-to-top\" />, paginationComponent].filter(Boolean)}\n    >\n      {pageIds.map((itemId) => {\n        const itemAttributes = getItemAttributeValues(itemId);\n        const item = getItem(itemId);\n\n        return (\n          <Card.Grid\n            key={`${itemId}-${itemAttributes.updatedAt}`}\n            style={{ width: isNarrow ? '50%' : '25%' }}\n          >\n            <Flex gap={6}>\n              <Flex vertical gap={6}>\n                <ItemSprite item={item} width={75} />\n                <ItemId item={item} />\n                <ItemGoTo item={item} />\n                <ItemName item={item} language=\"en\" />\n                <ItemName item={item} language=\"pt\" />\n              </Flex>\n              <AttributionValueButtons\n                attribute={attribute!}\n                value={itemAttributes.attributes[attribute!.id]}\n                onlyButtons\n                onChange={(attributeId: string, value: number) =>\n                  updateAttributeValue(item.id, attributeId, value)\n                }\n              />\n            </Flex>\n          </Card.Grid>\n        );\n      })}\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useMemo, useState } from 'react';\n\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport { orderBy } from 'lodash';\n\nexport function useItemGrouping() {\n  const {\n    attributesList,\n    addAttributesToUpdate,\n    getItemAttributeValues,\n    availableItemIds,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  const attributeKey = searchParams.get('attribute') ?? 'ali';\n  const scope = searchParams.get('scope') ?? 'unset';\n\n  const page = searchParams.get('page') ?? '1';\n  const pageSize = searchParams.get('pageSize') ?? '12';\n\n  const [previousAttribute, setPreviousAttribute] = useState<string>('ali');\n  const [previousScope, setPreviousScope] = useState<string>('unset');\n\n  const group = useMemo(() => {\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    const scopeValue =\n      scope === 'unset' ? undefined : ATTRIBUTE_VALUE[scope.toUpperCase() as keyof typeof ATTRIBUTE_VALUE];\n\n    const filteredItemIds = itemsAttributes\n      .filter((item) => item.attributes?.[attributeKey] === scopeValue)\n      .map((item) => item.id);\n\n    return orderBy(\n      filteredItemIds,\n      [(id) => getItemAttributeValues(id)?.updatedAt, (id) => Number(id)],\n      ['desc', 'asc']\n    );\n  }, [attributeKey, scope]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const pageIds = useMemo(() => {\n    if (previousAttribute !== attributeKey || previousScope !== scope) {\n      setPreviousAttribute(attributeKey);\n      setPreviousScope(scope);\n      addQueryParam('page', '1');\n      return group.slice(0, Number(pageSize));\n    }\n\n    const start = (Number(page) - 1) * Number(pageSize);\n    const end = start + Number(pageSize);\n\n    return group.slice(start, end);\n  }, [page, pageSize, group]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const attribute = attributesList.find((a) => a.id === attributeKey);\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const updatePageItemsAsUnrelated = () => {\n    addMultipleAttributesToUpdate(\n      pageIds.map((id) => {\n        const prev = getItemAttributeValues(id);\n        if (!prev.attributes[attributeKey]) {\n          prev.attributes[attributeKey] = ATTRIBUTE_VALUE.UNRELATED;\n        }\n\n        return prev;\n      })\n    );\n  };\n\n  return {\n    group,\n    pageIds,\n    attribute,\n    updateAttributeValue,\n    updatePageItemsAsUnrelated,\n    pagination: {\n      total: group.length,\n      current: Number(page),\n      pageSize: Number(pageSize),\n      onChange: (page: number) => addQueryParam('page', String(page)),\n      onShowSizeChange: (_: number, pageSize: number) => addQueryParam('pageSize', String(pageSize)),\n      pageSizeOptions: [12, 24, 48, 96],\n    },\n  };\n}\n","import { Flex, Table, TableColumnsType, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { ItemMessageObject, useItemsComparator } from 'hooks/useItemsComparator';\nimport { Item } from 'types';\n\nimport { AttributeSprite } from './ItemAttributeDescription';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemComparatorCard() {\n  const { attributes } = useItemsAttributeValuesContext();\n  const { itemMessages, grouping } = useItemsComparator();\n\n  const columns: TableColumnsType<ItemMessageObject> = [\n    {\n      title: 'Item Id',\n      dataIndex: 'item',\n      key: 'id',\n      render: (item: Item) => (\n        <div>\n          <ItemId item={item} />\n          <ItemGoTo item={item} />\n        </div>\n      ),\n      sorter: (a, b) => Number(a.item.id) - Number(b.item.id),\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'item',\n      key: 'sprite',\n      render: (item: Item) => <ItemSprite item={item} width={75} />,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'item',\n      key: 'name',\n      render: (item: Item) => (\n        <>\n          <ItemName item={item} language=\"en\" />\n          <ItemName item={item} language=\"pt\" />\n        </>\n      ),\n      sorter: (a, b) => a.item.name.en.localeCompare(b.item.name.en),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'message',\n      key: 'message',\n      render: (message: string[], { item }) => (\n        <Flex gap={6}>\n          {message.map((keyVariant, index, arr) => (\n            <AttributeSprite\n              key={`${keyVariant}-${item.id}`}\n              keyVariant={keyVariant}\n              attributes={attributes}\n              firstElement={index === 0}\n              lastElement={index === arr.length - 1}\n              withText\n            />\n          ))}\n        </Flex>\n      ),\n      sorter: (a, b) => a.message.join(' ').localeCompare(b.message.join(' ')),\n    },\n    {\n      title: 'Complete',\n      dataIndex: 'itemAttributesValues',\n      key: 'complete',\n      render: (itemAttributesValues: { complete: boolean }) => (itemAttributesValues.complete ? 'Yes' : 'No'),\n    },\n    {\n      title: 'Identical',\n      dataIndex: 'message',\n      key: 'identical',\n      render: (message: string[]) => {\n        const group = grouping[message.join(' ')] ?? [];\n        return <>{group.length > 1 ? group.length : ''}</>;\n      },\n      sorter: (a, b) => {\n        const groupA = grouping[a.message.join(' ')] ?? [];\n        const groupB = grouping[b.message.join(' ')] ?? [];\n        return groupB.length - groupA.length;\n      },\n    },\n  ];\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Item Comparator</Typography.Title>\n      <Table dataSource={itemMessages} columns={columns} />\n    </div>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keyBy, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { filterMessage, getItemAttributePriorityResponse } from 'utils';\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { Item, ItemAtributesValues } from 'types';\n\nexport type ItemMessageObject = {\n  item: Item;\n  itemAttributesValues: ItemAtributesValues;\n  message: string[];\n  fullMessage: string[];\n};\n\nexport function useItemsComparator() {\n  const { attributes, getItemAttributeValues, availableItemIds, getItem, isLoading } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n  const showComplete = searchParams.get('showComplete') === 'true';\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const { itemMessages, itemMessagesDict, grouping } = useMemo(() => {\n    if (isLoading) {\n      const itemMessages: ItemMessageObject[] = [];\n      return {\n        itemMessages,\n        itemMessagesDict: {},\n        grouping: {},\n      };\n    }\n    console.log('useItemsComparator');\n\n    const itemMessages = orderBy(\n      availableItemIds\n        .map((id) => {\n          const itemAttributesValues = getItemAttributeValues(id);\n          const itemMessage = getItemAttributePriorityResponse(itemAttributesValues, attributes);\n          return {\n            item: getItem(id),\n            itemAttributesValues,\n            message: filterMessage(itemMessage, showUnclear, showUnrelated),\n            fullMessage: itemMessage,\n          };\n        })\n        .filter(({ itemAttributesValues }) => (showComplete ? itemAttributesValues.complete : true)),\n      ['message'],\n      ['asc']\n    );\n\n    const grouping = itemMessages.reduce((acc: Dictionary<string[]>, { message, item: { id } }) => {\n      const key = message.join(' ');\n\n      if (acc[key] === undefined) {\n        acc[key] = [];\n      }\n      acc[key].push(id);\n\n      return acc;\n    }, {});\n\n    const moreThanOne = Object.values(grouping).filter((ids) => ids.length > 1);\n    if (moreThanOne.length > 0) {\n      console.log('More than one', moreThanOne);\n    }\n    console.log(grouping);\n\n    return {\n      itemMessages,\n      itemMessagesDict: keyBy(itemMessages, 'item.id'),\n      grouping,\n    };\n  }, [\n    attributes,\n    availableItemIds,\n    getItemAttributeValues,\n    getItem,\n    isLoading,\n    showComplete,\n    showUnclear,\n    showUnrelated,\n  ]);\n\n  return {\n    itemMessages,\n    itemMessagesDict,\n    grouping,\n  };\n}\n","import { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAttributionCard } from './ItemAttributionCard';\nimport { ItemAttributionNavigation } from './ItemAttributionNavigation';\nimport { Empty, Flex } from 'antd';\nimport { ItemSamplerCard } from './ItemSamplerCard';\nimport { ItemGroupingCard } from './ItemGroupingCard';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { ItemComparatorCard } from './ItemComparatorCard';\n\nexport function ItemAttributionPageContent() {\n  const { view } = useItemQueryParams();\n\n  if (view === 'classifier') {\n    return (\n      <>\n        <ItemAttributionNavigation />\n        <ItemAttributionCard />\n        <Flex justify=\"flex-end\" className=\"my-4\">\n          <GoToTopButton />\n        </Flex>\n      </>\n    );\n  }\n\n  if (view === 'sampler') {\n    return <ItemSamplerCard />;\n  }\n\n  if (view === 'grouping') {\n    return <ItemGroupingCard />;\n  }\n\n  if (view === 'comparator') {\n    return <ItemComparatorCard />;\n  }\n\n  return <Empty className=\"my-10\" description=\"Unknown view has been selected\" />;\n}\n","import { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterNumber, FilterSelect, FilterSwitch } from 'components/Common';\nimport { Stat } from 'components/Common/Stat';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMemo } from 'react';\nimport { ATTRIBUTE_GROUP_VALUES } from 'utils/constants';\n\nexport function ItemAttributionStats() {\n  const { getItemAttributeValues, availableItemIds, attributesList } = useItemsAttributeValuesContext();\n\n  const {\n    total,\n    complete,\n    completionPercentage,\n    hasDataCount,\n    initiatedPercentage,\n    progress,\n    progressTotal,\n    currentProgress,\n  } = useMemo(() => {\n    const total = availableItemIds.length;\n    let someData = 0;\n    let complete = 0;\n    let currentProgress = 0;\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    itemsAttributes.forEach(({ complete: isComplete, attributes }) => {\n      if (!isEmpty(attributes)) {\n        someData += 1;\n      }\n      if (Object.values(attributes).length === attributesList.length) {\n        complete += 1;\n      }\n\n      currentProgress += Object.values(attributes).length;\n    });\n\n    const progressTotal = Object.values(attributesList).length * availableItemIds.length;\n\n    return {\n      total,\n      complete,\n      completionPercentage: total > 0 ? ((complete / total) * 100).toFixed(1) : 0,\n      hasDataCount: someData,\n      initiatedPercentage: total > 0 ? Math.floor((someData / total) * 100) : 0,\n      progress: ((currentProgress / progressTotal) * 100).toFixed(1),\n      currentProgress,\n      progressTotal,\n    };\n  }, [attributesList, availableItemIds, getItemAttributeValues]);\n\n  return (\n    <>\n      <Flex vertical>\n        <Typography.Text strong className=\"mb-2\">\n          Items Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{total}</Stat>\n        <Stat label=\"Complete\">\n          {complete} ({completionPercentage}%)\n        </Stat>\n        <Stat label=\"Initiated\">\n          {hasDataCount} ({initiatedPercentage}%)\n        </Stat>\n        <Typography.Text strong className=\"mt-4 mb-2\">\n          Attributes Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{progressTotal}</Stat>\n        <Stat label=\"Set\">{currentProgress}</Stat>\n        <Stat label=\"Progress\">{progress}%</Stat>\n      </Flex>\n      <Divider />\n    </>\n  );\n}\n\nexport function ItemAttributionClassifierFilters() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  return (\n    <>\n      <Button block onClick={() => jumpToItem('random')} type=\"primary\">\n        Random Item\n      </Button>\n      <FilterSwitch\n        label=\"Unset Only\"\n        value={searchParams.get('scope') === 'unset'}\n        onChange={(value) => addQueryParam('scope', value ? 'unset' : '')}\n        className=\"mt-4\"\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionSamplerFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return [\n      { label: 'Random Attribute', value: 'random' },\n      ...attributesList.map(({ id, name }) => ({ label: name.en, value: id })),\n    ];\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Sampler Attribute\"\n        value={searchParams.get('attribute') || 'random'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n      <FilterNumber\n        label=\"Sample Size\"\n        value={Number(searchParams.get('size') || 9)}\n        onChange={(v) => addQueryParam('size', String(v))}\n        min={3}\n        max={21}\n        step={3}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionGroupingFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return attributesList.map(({ id, name }) => ({ label: name.en, value: id }));\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Attribute\"\n        value={searchParams.get('attribute') || 'ali'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n\n      <FilterSelect\n        label=\"Scope\"\n        value={searchParams.get('scope') || 'unset'}\n        onChange={(v) => addQueryParam('scope', v)}\n        options={[{ value: 'unset', label: 'Unset' }, ...ATTRIBUTE_GROUP_VALUES]}\n      />\n\n      <FilterSelect\n        label=\"Results per page\"\n        value={searchParams.get('pageSize') || 12}\n        onChange={(v) => addQueryParam('pageSize', v)}\n        options={[12, 24, 48, 96]}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionComparatorFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  return (\n    <>\n      <FilterSwitch\n        label=\"Only Complete\"\n        value={searchParams.get('showComplete') === 'true'}\n        onChange={(v) => addQueryParam('showComplete', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n    </>\n  );\n}\n","import { Button, Divider, Flex } from 'antd';\nimport { FilterSelect } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SiderContent } from 'components/Layout';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\n\nimport {\n  ItemAttributionClassifierFilters,\n  ItemAttributionComparatorFilters,\n  ItemAttributionGroupingFilters,\n  ItemAttributionSamplerFilters,\n  ItemAttributionStats,\n} from './ItemAttributionFilersSections';\n\nexport function ItemAttributionFilters() {\n  const { isDirty, save, prepareItemsAttributesFileForDownload } = useItemsAttributeValuesContext();\n\n  const { view, setView } = useItemQueryParams();\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <Button block danger type=\"primary\" disabled={!isDirty} onClick={save} size=\"large\">\n          Save\n        </Button>\n        <DownloadButton\n          data={() => prepareItemsAttributesFileForDownload()}\n          fileName=\"items-attribute-values.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider />\n\n      <ItemAttributionStats />\n\n      <FilterSelect\n        label=\"View\"\n        value={view}\n        onChange={setView}\n        options={['classifier', 'sampler', 'grouping', 'comparator']}\n      />\n      <Divider />\n\n      {view === 'classifier' && <ItemAttributionClassifierFilters />}\n      {view === 'sampler' && <ItemAttributionSamplerFilters />}\n      {view === 'grouping' && <ItemAttributionGroupingFilters />}\n      {view === 'comparator' && <ItemAttributionComparatorFilters />}\n    </SiderContent>\n  );\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemAttributionPageContent } from 'components/Items/ItemAttributionPageContent';\nimport { ItemAttributionFilters } from 'components/Items/ItemAttributionFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport {\n  ItemsAttributeValuesProvider,\n  useItemsAttributeValuesContext,\n} from 'context/ItemsAttributeValuesContext';\n\nfunction ItemsAttributionPage() {\n  const { isLoading, error, hasResponseData } = useItemsAttributeValuesContext();\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Attribution\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemAttributionFilters />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            <ItemAttributionPageContent />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nfunction ItemsAttribution() {\n  return (\n    <ItemsAttributeValuesProvider>\n      <ItemsAttributionPage />\n    </ItemsAttributeValuesProvider>\n  );\n}\n\nexport default ItemsAttribution;\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","label","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","value","onChange","options","placeholder","style","minWidth","disabled","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","size","ItemsTypeahead","items","isPending","allowClear","onFinish","namesDict","useMemo","console","log","Object","values","reduce","acc","nameEn","name","en","id","namePt","pt","orderBy","keys","toLowerCase","filteredOptions","setFilteredOptions","useState","filterOption","inputValue","option","String","toUpperCase","indexOf","onSearch","searchText","filter","notFoundContent","onSelect","key","undefined","onPressEnter","length","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","useQuery","queryKey","queryFn","updateQueryFunction","updateDoc","useUpdateFirebaseDoc","useMutation","mutationFn","useItemQueryParams","searchParams","setSearchParams","useSearchParams","view","get","setView","addQueryParam","set","removeQueryParam","delete","globalNewItemsAttributesValues","parseItemsAttributeValuesData","JSON","parse","stringifyItemsAttributeValuesData","stringify","ItemsAttributeValuesContext","createContext","getItem","getNewItem","getItemAttributeValues","getNewItemAttributeValues","jumpToItem","activeItem","itemAttributeValues","onAttributeChange","isSaving","save","attributesList","availableItemIds","addAttributesToUpdate","addMultipleAttributesToUpdate","prepareItemsAttributesFileForDownload","attributes","ItemsAttributeValuesProvider","notification","message","App","queryClient","useQueryClient","tdrItemsQuery","useTDResource","tdrAttributesQuery","tdrItemsAttributesValuesQuery","firebaseItemsAttributeValuesQuery","select","modifiedAttributeValues","setModifiedAttributeValues","mutation","onSuccess","success","refetchQueries","onError","description","savedItemsAttributeValues","isEmpty","firebaseData","groups","includes","Number","info","storedValue","modifiedValue","merge","mutate","item","prev","updatedAt","Date","now","itemsArr","mapKeys","attributesToUpdate","useItemsAttribution","itemIndex","setItemIndex","random","Provider","direction","itemId","index","attributeId","sortJsonKeys","complete","useItemsAttributeValuesContext","useContext","attributeOptions","ATTRIBUTE_VALUE","attributeLimitedOptions","AttributionValueButtons","attribute","onlyButtons","limited","target","optionType","buttonStyle","title","QuestionCircleOutlined","CheckCircleFilled","ItemAttributeDescription","showUnclear","showUnrelated","filteredResponse","filterMessage","getItemAttributePriorityResponse","Component","AttributeSprite","AttributeText","gap","vertical","wrap","keyVariant","arr","firstElement","lastElement","withText","text","parseAttribute","align","spriteId","justify","maxWidth","textAlign","wordBreak","prefix","suffix","Stat","ItemAttributeStats","completion","isDeterministic","isOpposing","relevancy","total","completed","Math","floor","unclearCount","strong","percent","CloseCircleOutlined","ItemSprite","ItemId","copyToClipboard","useCopyToClipboardFunction","nsfw","FireFilled","IdcardOutlined","variant","readOnly","ItemName","ItemGoTo","shape","ItemAttributionCard","queryParamsItemId","useEffect","showOnlyUnset","filteredAttributesList","offsetTop","type","ItemAttributionNavigation","icon","VerticalRightOutlined","DoubleLeftOutlined","LeftOutlined","RightOutlined","DoubleRightOutlined","VerticalLeftOutlined","content","GoToItemPopOverContent","ItemSamplerCard","sampleIds","onGetSample","updateAttributeValue","setSampleIds","setAttribute","attributeKey","lodashSample","selectedAttribute","find","a","sampleSize","selected","shuffle","i","push","currentItemAttributeValues","useItemSampler","actions","block","ghost","extra","itemAttributes","Fragment","GoToTopButton","isVisible","setIsVisible","handleScroll","window","pageYOffset","addEventListener","removeEventListener","scrollTo","top","behavior","VerticalAlignTopOutlined","ItemGroupingCard","pageIds","group","updatePageItemsAsUnrelated","pagination","scope","page","pageSize","previousAttribute","setPreviousAttribute","previousScope","setPreviousScope","itemsAttributes","scopeValue","filteredItemIds","slice","start","end","current","onShowSizeChange","_","pageSizeOptions","useItemGrouping","isNarrow","useMedia","paginationComponent","unrelateButton","onConfirm","danger","Boolean","ItemComparatorCard","itemMessages","grouping","showComplete","itemMessagesDict","itemAttributesValues","itemMessage","fullMessage","join","moreThanOne","ids","keyBy","useItemsComparator","columns","dataIndex","render","sorter","b","localeCompare","groupA","dataSource","ItemAttributionPageContent","ItemAttributionStats","completionPercentage","hasDataCount","initiatedPercentage","progress","progressTotal","currentProgress","someData","forEach","isComplete","toFixed","ItemAttributionClassifierFilters","ItemAttributionSamplerFilters","ItemAttributionGroupingFilters","ATTRIBUTE_GROUP_VALUES","ItemAttributionComparatorFilters","ItemAttributionFilters","ItemsAttributionPage","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}