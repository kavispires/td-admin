{"version":3,"file":"static/js/ItemsDiagramSets.13779394.chunk.js","mappings":"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","sources":["components/Common/FilterEntries.tsx","components/Common/SaveButton.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/ResponseState.tsx","components/Daily/utils/games/daily-teoria-de-conjuntos.ts","components/Daily/utils/utils.ts","components/Items/Diagram/utils.ts","hooks/useGetFirebaseDoc.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useTablePagination.tsx","hooks/useUpdateFirebaseDoc.tsx","components/Items/Diagram/ItemsDiagramFilters.tsx","components/Items/Diagram/EditThingModal.tsx","components/Items/Diagram/AddNewThingFlow.tsx","components/Items/Diagram/Thing.tsx","components/Items/Diagram/RulesByThing.tsx","components/Items/Diagram/ThingsByRule.tsx","components/Items/Diagram/ItemUpdateGuard.tsx","components/Items/Diagram/DiagramGameSample.tsx","components/Items/Diagram/GameSimulator.tsx","components/Items/Diagram/ItemsDiagramSetsContent.tsx","pages/Items/ItemsDiagramSets.tsx"],"sourcesContent":["import { Checkbox, Form, InputNumber, Segmented, Select, Switch, Tooltip } from 'antd';\nimport { SegmentedValue } from 'antd/es/segmented';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport function FilterSwitch({ label, value, onChange, className, disabled }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" disabled={disabled} />\n    </Form.Item>\n  );\n}\n\nexport function FilterCheckBox({ label, value, onChange, disabled, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Checkbox checked={value} onChange={(e) => onChange(e.target.checked)} disabled={disabled} />\n    </Form.Item>\n  );\n}\n\ntype FilterSegmentsProps = {\n  label: ReactNode;\n  value?: string;\n  onChange: (mode: SegmentedValue) => void;\n  options: { value: string; title: string; icon: ReactNode }[];\n};\n\nexport function FilterSegments({ value, label, onChange, options }: FilterSegmentsProps) {\n  return (\n    <Form.Item label={label} layout={options.length > 2 ? 'vertical' : 'horizontal'}>\n      <Segmented\n        block\n        value={value}\n        onChange={onChange}\n        options={options.map((option) => ({\n          label: (\n            <Tooltip arrow trigger=\"hover\" title={option.title}>\n              {option.icon}\n            </Tooltip>\n          ),\n          value: option.value,\n        }))}\n      />\n    </Form.Item>\n  );\n}\n","import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { useGlobalContext } from 'context/GlobalContext';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  const { togglePendingSave } = useGlobalContext();\n\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      togglePendingSave(true);\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      togglePendingSave(false);\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { DailyTeoriaDeConjuntosEntry, ParsedDailyHistoryEntry } from '../types';\nimport { cloneDeep, difference, intersection, sample, sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from '../utils';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { getIsThingOutdated, getLatestRuleUpdate } from 'components/Items/Diagram/utils';\n\nexport const buildDailyTeoriaDeConjuntosGames = (\n  batchSize: number,\n  history: ParsedDailyHistoryEntry,\n  rules: Dictionary<DailyDiagramRule>,\n  things: Dictionary<DailyDiagramItem>\n) => {\n  console.count('Creating Teoria de Conjuntos...');\n  let lastDate = history.latestDate;\n  const used: string[] = [...history.used];\n\n  const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n  const thingsByRules = (() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    Object.values(things).forEach((entry) => {\n      // Only use things that are not outdated\n      if (!getIsThingOutdated(entry, latestRuleUpdate)) {\n        entry.rules.forEach((ruleId) => {\n          dict[ruleId].push(entry.itemId);\n        });\n      }\n    });\n    return dict;\n  })();\n\n  const entries: Dictionary<DailyTeoriaDeConjuntosEntry> = {};\n  for (let i = 0; i < batchSize; i++) {\n    const id = getNextDay(lastDate);\n\n    lastDate = id;\n    entries[id] = {\n      id,\n      type: 'teoria-de-conjuntos',\n      number: history.latestNumber + i + 1,\n      ...getRuleSet(things, thingsByRules, rules, used, latestRuleUpdate),\n    };\n  }\n  return entries;\n};\n\nfunction getRuleSet(\n  things: Dictionary<DailyDiagramItem>,\n  thingsByRules: Record<string, string[]>,\n  rules: Dictionary<DailyDiagramRule>,\n  used: string[],\n  latestRuleUpdate: number\n) {\n  const availableThingsIds = shuffle(\n    Object.keys(things).filter(\n      (id) => !used.includes(id) && !getIsThingOutdated(things[id], latestRuleUpdate)\n    )\n  );\n\n  // Get one random initial thing\n  const initialThingId = sample(availableThingsIds);\n  if (!initialThingId) throw new Error('No available things to choose from');\n  used.push(initialThingId);\n\n  const intersectingThing = {\n    id: initialThingId,\n    name: things[initialThingId].name,\n  };\n\n  // Group rules by type than get a random pair of rules of different types\n  const thingsRulesByType = things[initialThingId].rules.reduce((acc: Record<string, string[]>, ruleId) => {\n    const type = rules[ruleId].type;\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(ruleId);\n    return acc;\n  }, {});\n  // Delete any rule with less than 2 rules\n  Object.keys(thingsRulesByType).forEach((type) => {\n    if (thingsRulesByType[type].length < 2) delete thingsRulesByType[type];\n  });\n\n  const twoRandomTypes = sampleSize(Object.keys(thingsRulesByType), 2);\n\n  if (twoRandomTypes.length !== 2) throw new Error('No types found for this thing');\n  const selectedRules = [\n    sample(thingsRulesByType[twoRandomTypes[0]]),\n    sample(thingsRulesByType[twoRandomTypes[1]]),\n  ];\n  if (!selectedRules[0] || !selectedRules[1]) throw new Error('No rules found for this thing');\n\n  const ruleId = [selectedRules[0], selectedRules[1]].sort().join('-');\n  used.push(ruleId);\n\n  const level = rules[selectedRules[0]].level + rules[selectedRules[1]].level - 1;\n\n  const availableThingsByRules = cloneDeep(thingsByRules);\n  // Removed the initial thing from the available things\n  delete availableThingsByRules[initialThingId];\n\n  const itemsOnlyInRule1 = shuffle(\n    difference(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]])\n  );\n\n  const itemsOnlyInRule2 = shuffle(\n    difference(thingsByRules[selectedRules[1]], thingsByRules[selectedRules[0]])\n  );\n\n  const commonItems = shuffle(intersection(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]]));\n\n  // Get one unique initial thing that only fits rule 1\n  const selectedInitialThingId1 = itemsOnlyInRule1.pop();\n  if (!selectedInitialThingId1) throw new Error('No only in rule 1 things to choose from');\n  const rule1 = {\n    id: selectedRules[0],\n    text: rules[selectedRules[0]].title,\n    level: rules[selectedRules[0]].level,\n    thing: {\n      id: selectedInitialThingId1,\n      name: things[selectedInitialThingId1].name,\n    },\n  };\n\n  // Get one unique initial thing that only fits rule 2\n  const selectedInitialThingId2 = itemsOnlyInRule2.pop();\n  if (!selectedInitialThingId2) throw new Error('No only in rule 2 things to choose from');\n  const rule2 = {\n    id: selectedRules[1],\n    text: rules[selectedRules[1]].title,\n    level: rules[selectedRules[1]].level,\n    thing: {\n      id: selectedInitialThingId2,\n      name: things[selectedInitialThingId2].name,\n    },\n  };\n\n  // Get up to 4 unique things that fit both rules, if possible\n  const sampleCommonThings = sampleSize(commonItems, 4);\n  const sampleRule1Things = sampleSize(itemsOnlyInRule1, 8);\n  const sampleRule2Things = sampleSize(itemsOnlyInRule2, 8);\n  const gabarito: Record<string, number> = {};\n  sampleCommonThings.forEach((id) => (gabarito[id] = 0));\n  sampleRule1Things.forEach((id) => (gabarito[id] = 1));\n  sampleRule2Things.forEach((id) => (gabarito[id] = 2));\n\n  // Sample 8 things among the options\n  const selectionIds = sampleSize([...sampleCommonThings, ...sampleRule1Things, ...sampleRule2Things], 8);\n\n  const selectedThings = selectionIds.map((id) => ({\n    id,\n    name: things[id].name,\n    rule: gabarito[id],\n  }));\n\n  // Build title\n  const TITLES: Record<string, string> = {\n    contains: 'Inclusão',\n    starts: 'Inicialização',\n    ends: 'Terminação',\n    grammar: 'Gramática',\n    order: 'Sequência',\n    count: 'Contagem',\n    comparison: 'Comparação',\n    repetition: 'Repetição',\n  };\n\n  const title = [\n    TITLES?.[rules[rule1.id].type] ?? 'Desconhecido',\n    TITLES?.[rules[rule2.id].type] ?? 'Desconhecido',\n  ].join(' vs ');\n  const setId = [rule1.id, rule2.id].sort().join('::');\n\n  // Create the DailyTeoriaDeConjuntosEntry object\n  const entry: Omit<DailyTeoriaDeConjuntosEntry, 'id' | 'type' | 'number'> = {\n    title,\n    setId,\n    level,\n    rule1,\n    rule2,\n    intersectingThing,\n    things: selectedThings,\n  };\n  return entry;\n}\n","import { sample } from 'lodash';\nimport moment from 'moment';\n\n/**\n * Returns the current date in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The current date in 'YYYY-MM-DD' format.\n */\nexport function getToday(): string {\n  return moment().format('YYYY-MM-DD');\n}\n\n/**\n * Returns the date of yesterday in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The date of yesterday in 'YYYY-MM-DD' format.\n */\nexport function getYesterday(): string {\n  return moment().subtract(1, 'days').format('YYYY-MM-DD');\n}\n\n/**\n * Calculates the next day based on the given date string.\n *\n * @param dateString - The date string in the format 'YYYY-MM-DD'.\n * @returns The next day in the format 'YYYY-MM-DD'.\n */\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n\n/**\n * Checks if a given date is a Saturday or Sunday.\n *\n * @param {string} dateString - The date in 'YYYY-MM-DD' format.\n * @returns {boolean} True if the date is a Saturday or Sunday, false otherwise.\n */\nexport function checkWeekend(dateString: string): boolean {\n  const date = moment(dateString, 'YYYY-MM-DD');\n  return [6, 0].includes(date.day()); // 0 represents Sunday and 6 represents Saturday in moment.js\n}\n\nconst THRESHOLD = 500;\nexport function getWordsWithUniqueLetters(words: string[]): string[] {\n  const selectedWords: string[] = [];\n  const usedLetters: BooleanDictionary = {};\n  let tries = 0;\n\n  while (selectedWords.length < 4 && tries < THRESHOLD) {\n    const word = sample(words) ?? '';\n    const splitWord = word.split('');\n    const isGood = splitWord.every((letter) => !usedLetters[letter]);\n    if (isGood) {\n      selectedWords.push(word);\n      splitWord.forEach((letter) => {\n        usedLetters[letter] = true;\n      });\n    } else {\n      tries++;\n    }\n  }\n  if (tries > THRESHOLD || selectedWords.length < 4) {\n    console.count('Could not find 4 words with unique letters');\n    while (selectedWords.length < 4) {\n      const word = sample(words) ?? '';\n      if (!selectedWords.includes(word)) {\n        selectedWords.push(word);\n      }\n    }\n  }\n\n  if (selectedWords.length < 4) {\n    console.error('Could not find 4 words with unique letters', selectedWords);\n  }\n\n  return selectedWords;\n}\n","import { memoize } from 'lodash';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { stringRemoveAccents } from 'utils';\n\nexport const SYLLABLE_SEPARATOR = '|';\nexport const LETTERS = 'abcdefghijklmnopqrstuvwxyz';\nexport const CONSONANTS = 'bcdfghjklmnpqrstvwxyz';\nexport const VOWELS = 'aeiou';\nexport const ACCENTS = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n\nconst cleanupWord = memoize((word: string) => {\n  return stringRemoveAccents(word).toLowerCase();\n});\n\nconst countLetters = (word: string) => {\n  return cleanupWord(word).length;\n};\n\nconst countVowels = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => VOWELS.includes(letter)).length;\n};\n\nconst countConsonants = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => CONSONANTS.includes(letter)).length;\n};\n\nconst countAccents = (word: string) => {\n  return word\n    .toLowerCase()\n    .split('')\n    .filter((letter) => ACCENTS.test(letter)).length;\n};\n\nconst countWords = (text: string) => {\n  return text.split(' ').length;\n};\n\nexport const verifiers: Record<string, (word: string) => boolean> = {\n  // The first two letters are in alphabetical order\n  'ddr-7-pt': (word: string) => {\n    return LETTERS.indexOf(cleanupWord(word)[0]) < LETTERS.indexOf(cleanupWord(word)[1]);\n  },\n  // has 4 or less letters\n  'ddr-8-pt': (word: string) => countLetters(word) <= 4,\n  // Has exactly 5 letters\n  'ddr-9-pt': (word: string) => countLetters(word) === 5,\n  // Has 6 letters\n  'ddr-10-pt': (word: string) => countLetters(word) === 6,\n  // Has between 7\n  'ddr-11-pt': (word: string) => countLetters(word) === 7,\n  // Has more than 8 letters\n  'ddr-12-pt': (word: string) => countLetters(word) > 7,\n  // Has more than 1 word\n  'ddr-13-pt': (word: string) => countWords(word) > 1,\n  // Has two or more different vowels\n  'ddr-14-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size >= 2;\n  },\n  // Has 4 or less unique letters\n  'ddr-15-pt': (word: string) => new Set(cleanupWord(word).split('')).size <= 4,\n  // Has more consonants than vowels\n  'ddr-16-pt': (word: string) => countConsonants(word) > countVowels(word),\n  // Has more vowels than consonants\n  'ddr-17-pt': (word: string) => countVowels(word) > countConsonants(word),\n  // The first letter is repeated at least once\n  'ddr-18-pt': (word: string) => {\n    const firstLetter = cleanupWord(word)[0];\n    return cleanupWord(word).slice(1).includes(firstLetter);\n  },\n  // has repeated letters\n  'ddr-19-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) =>\n        cleanupWord(word)\n          .slice(index + 1)\n          .includes(letter)\n      );\n  },\n  // has repeated vowels\n  'ddr-20-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          VOWELS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has repeated consonants\n  'ddr-21-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          CONSONANTS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has consecutive vowels\n  'ddr-22-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => VOWELS.includes(letter) && VOWELS.includes(word[index + 1]));\n  },\n  // starts with letters from A to M\n  'ddr-23-pt': (word: string) => 'abcdefghijklm'.includes(cleanupWord(word)[0]),\n  // starts with letters from N to Z\n  'ddr-24-pt': (word: string) => 'nopqrstuvwxyz'.includes(cleanupWord(word)[0]),\n  // starts with a vowel\n  'ddr-25-pt': (word: string) => VOWELS.includes(cleanupWord(word)[0]),\n  // starts with a consonant\n  'ddr-26-pt': (word: string) => CONSONANTS.includes(cleanupWord(word)[0]),\n  // Double consecutive consonants\n  'ddr-27-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => CONSONANTS.includes(letter) && word[index + 1] === letter);\n  },\n  // Has an A\n  'ddr-28-pt': (word: string) => cleanupWord(word).includes('a'),\n  // Has an E\n  'ddr-29-pt': (word: string) => cleanupWord(word).includes('e'),\n  // Has an U\n  'ddr-30-pt': (word: string) => cleanupWord(word).includes('u'),\n  // Has a Q or J\n  'ddr-31-pt': (word: string) => cleanupWord(word).includes('q'),\n  // Has a C or Ç\n  'ddr-32-pt': (word: string) => cleanupWord(word).includes('c') || cleanupWord(word).includes('ç'),\n  // Has an M or N followed by a consonant\n  'ddr-33-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (['m', 'n'].includes(letter) && CONSONANTS.includes(word[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has an H\n  'ddr-34-pt': (word: string) => cleanupWord(word).includes('h'),\n  // Has H preceded by a consonant\n  'ddr-35-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (letter === 'h' && CONSONANTS.includes(word[index - 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has K, W or Y\n  'ddr-36-pt': (word: string) =>\n    cleanupWord(word).includes('k') || cleanupWord(word).includes('w') || cleanupWord(word).includes('y'),\n  // Has an accent\n  'ddr-37-pt': (word: string) => countAccents(word) > 0,\n  // Ends with a vowel\n  'ddr-38-pt': (word: string) => {\n    return VOWELS.includes(cleanupWord(word).slice(-1));\n  },\n  // Ends with a consonant\n  'ddr-39-pt': (word: string) => CONSONANTS.includes(cleanupWord(word).slice(-1)),\n  // Ends with an S\n  'ddr-40-pt': (word: string) => cleanupWord(word).slice(-1) === 's',\n  // Has an I\n  'ddr-47-pt': (word: string) => cleanupWord(word).includes('i'),\n  // Has an O\n  'ddr-48-pt': (word: string) => cleanupWord(word).includes('o'),\n  // Has an X\n  'ddr-49-pt': (word: string) => cleanupWord(word).includes('x'),\n  // Has an J\n  'ddr-52-pt': (word: string) => cleanupWord(word).includes('j'),\n};\n\nexport const syllableDependencyVerifier: Record<\n  string,\n  (word: string, syllables: string, isAcronym: boolean) => boolean\n> = {\n  // Has 2 syllables\n  'ddr-3-pt': (word: string, syllables: string) =>\n    countWords(word) === 1 && syllables.split(SYLLABLE_SEPARATOR).length === 2,\n  // Has 3 syllables\n  'ddr-4-pt': (word: string, syllables: string) =>\n    countWords(word) === 1 && syllables.split(SYLLABLE_SEPARATOR).length === 3,\n  // Has 4 syllables\n  'ddr-22-pt': (word: string, syllables: string) =>\n    countWords(word) === 1 && syllables.split(SYLLABLE_SEPARATOR).length === 4,\n  // Has two consecutive vowels on the same syllable\n  'ddr-41-pt': (word: string, syllables: string) => {\n    return (\n      countWords(word) === 1 &&\n      syllables.split(SYLLABLE_SEPARATOR).some((syllable) => {\n        return syllable.split('').some((letter, index) => {\n          if (VOWELS.includes(letter) && VOWELS.includes(syllable[index + 1])) {\n            return true;\n          }\n          return false;\n        });\n      })\n    );\n  },\n  // Has two consecutive vowels on different syllables\n  'ddr-42-pt': (_: string, syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable, index) => {\n      if (index === 0) {\n        return false;\n      }\n      return syllable[0] === syllables.split(SYLLABLE_SEPARATOR)[index - 1].slice(-1);\n    });\n  },\n  // Single syllable word\n  'ddr-46-pt': (word: string, syllables: string, isAcronym: boolean) =>\n    countWords(word) === 1 && !isAcronym && syllables.split(SYLLABLE_SEPARATOR).length === 1,\n};\n\nexport const stressSyllableDependencyVerifier: Record<\n  string,\n  (word: string, syllables: string, stress: number) => boolean\n> = {\n  // The stress syllable is on the last syllable (oxitona)\n  'ddr-43-pt': (word: string, _, stress: number) => {\n    return countWords(word) === 1 && stress === 0;\n  },\n  // The stress syllable is on the second to last syllable (paroxitona)\n  'ddr-44-pt': (word: string, _, stress: number) => {\n    return countWords(word) === 1 && stress === 1;\n  },\n  // The stress syllable is on the third to last syllable (proparoxitona)\n  'ddr-45-pt': (word: string, _, stress: number) => {\n    return countWords(word) === 1 && stress === 2;\n  },\n};\n\nexport const getLatestRuleUpdate = (rules: Dictionary<DailyDiagramRule>) => {\n  return Object.values(rules).reduce((acc, rule) => {\n    return Math.max(acc, rule.updatedAt);\n  }, 0);\n};\n\nexport const getIsThingOutdated = (thing: DailyDiagramItem, latestRuleUpdate: number) => {\n  return latestRuleUpdate > thing.updatedAt;\n};\n\nconst checkIsVowel = (char: string) => VOWELS.includes(stringRemoveAccents(char));\nconst checkIsConsonant = (char: string) => CONSONANTS.includes(stringRemoveAccents(char));\nconst LMNRS = ['s', 'r', 'l', 'm', 'n'];\nconst DOUBLE_LETTERS = [\n  'rr',\n  'ss',\n  'st',\n  'sc',\n  'lm',\n  'ld',\n  'mp',\n  'mb',\n  'rn',\n  'rm',\n  'rt',\n  'rd',\n  'lt',\n  'ld',\n  'nt',\n  'nd',\n  'sp',\n  'ls',\n];\n/**\n * Guesses the separation of syllables in a given word.\n * @param word - The word for which to guess the syllables separation.\n * @returns The guessed syllables separation as a string.\n */\nexport const guessSyllablesSeparation = (word: string): string => {\n  let syllables: string[] = [];\n  let currentSyllable = '';\n\n  const stringWithoutAccents = stringRemoveAccents(word);\n\n  for (let i = 0; i < word.length; i++) {\n    const char = stringWithoutAccents[i];\n    // Space makes a syllable\n    if (char === ' ') {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n      continue;\n    }\n\n    // Hyphen makes a syllable\n    if (char === '-') {\n      syllables.push(currentSyllable + '-');\n      currentSyllable = '';\n      continue;\n    }\n\n    if (checkIsVowel(char) && i < stringWithoutAccents.length - 2) {\n      const nextChar = stringWithoutAccents[i + 1];\n      const nextNextChar = stringWithoutAccents[i + 2];\n      // If the next character is a consonant and the next next character is a consonant, the first pair is a syllable\n      if (LMNRS.includes(nextChar) && checkIsConsonant(nextNextChar)) {\n        currentSyllable += word[i] + word[i + 1];\n        i++; // Skip the next character\n        continue;\n      }\n    }\n\n    // Handle \"c\" followed by \"h\", \"r\", or \"l\"\n    if (\n      char === 'c' &&\n      i < stringWithoutAccents.length - 2 &&\n      ['h', 'r', 'l'].includes(stringWithoutAccents[i + 1]) &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle \"l\" or \"n\" followed by \"h\"\n    if (\n      ['l', 'n'].includes(char) &&\n      i < stringWithoutAccents.length - 2 &&\n      stringWithoutAccents[i + 1] === 'h' &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle consonant followed by vowel followed by consonant cluster\n    if (\n      checkIsConsonant(char) &&\n      i < stringWithoutAccents.length - 3 &&\n      checkIsVowel(stringWithoutAccents[i + 1]) &&\n      LMNRS.includes(stringWithoutAccents[i + 2]) &&\n      checkIsConsonant(stringWithoutAccents[i + 3])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    currentSyllable += word[i];\n\n    if (\n      checkIsVowel(char) &&\n      i < stringWithoutAccents.length - 1 &&\n      !checkIsVowel(stringWithoutAccents[i + 1]) &&\n      !['l', 'r', 'n'].includes(stringWithoutAccents[i + 1])\n    ) {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n    }\n  }\n\n  if (currentSyllable !== '') {\n    syllables.push(currentSyllable);\n  }\n\n  // As a final effort, if there are syllables with \"rr\" or \"ss\", split them but keep the characters. e.g. carro -> car:ro\n  syllables = syllables.map((syllable) => {\n    for (const doubleLetter of DOUBLE_LETTERS) {\n      if (syllable.includes(doubleLetter)) {\n        return syllable.split(doubleLetter).join(`${doubleLetter[0]}${SYLLABLE_SEPARATOR}${doubleLetter[1]}`);\n      }\n    }\n    return syllable;\n  });\n\n  return syllables.filter(Boolean).join(SYLLABLE_SEPARATOR);\n};\n\n/**\n * Separates the syllables of a given word.\n * @param word - The word to separate syllables from.\n * @returns The word with syllables separated by '|'.\n */\nexport function separateSyllables(word: string): string {\n  const syllablePattern =\n    /([^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*[aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]{1,3}[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*)(?=[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]|$)/gi;\n\n  const proposed = word.replace(syllablePattern, '$1|').slice(0, -1);\n\n  return proposed.replace(/\\s/g, '');\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { TableProps } from 'antd';\nimport { useQueryParams } from './useQueryParams';\n\n/**\n * Options for configuring table pagination.\n */\ntype UseTablePaginationOptions = {\n  /**\n   * Only necessary if multiple tables are on the same page.\n   */\n  prefix?: string;\n\n  /**\n   * The default current page number.\n   */\n  defaultCurrent?: number;\n\n  /**\n   * The default number of items per page.\n   */\n  defaultPageSize?: number;\n\n  /**\n   * An array of available page size options.\n   */\n  pageSizeOptions?: number[];\n\n  /**\n   * The total number of items in the table.\n   */\n  total: number;\n\n  /**\n   * Whether to show the quick jumper input.\n   */\n  showQuickJumper?: boolean;\n};\n\nexport function useTablePagination({\n  prefix = '',\n  defaultCurrent = 1,\n  defaultPageSize = 10,\n  pageSizeOptions = [10, 20, 50, 100],\n  total,\n  showQuickJumper,\n}: UseTablePaginationOptions): TableProps['pagination'] {\n  const { queryParams, addParam } = useQueryParams();\n  const currentPage = Number(queryParams.get(`${prefix}page`) ?? String(defaultCurrent));\n  const pageSize = Number(queryParams.get(`${prefix}pageSize`) ?? String(defaultPageSize));\n\n  const onChange = (page: number) => {\n    addParam(`${prefix}page`, page.toString(), String(defaultCurrent));\n  };\n  const onShowSizeChange = (_: number, size: number) => {\n    addParam(`${prefix}pageSize`, size.toString(), String(defaultPageSize));\n  };\n\n  return {\n    current: currentPage,\n    pageSize,\n    onChange,\n    onShowSizeChange,\n    defaultCurrent,\n    defaultPageSize,\n    pageSizeOptions,\n    total,\n    hideOnSinglePage: true,\n    showQuickJumper,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { ClusterOutlined, TableOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterSegments } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { cloneDeep } from 'lodash';\nimport { DailyDiagramItem } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nexport function ItemsDiagramFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n  entriesToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const { addParams, queryParams } = useQueryParams();\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(entriesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"daily-diagram-items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'rule'}\n        onChange={(mode) => addParams({ display: mode, page: 1 }, { page: 1 })}\n        options={[\n          {\n            title: 'By Rule',\n            icon: <ClusterOutlined />,\n            value: 'rule',\n          },\n          {\n            title: 'By Thing',\n            icon: <TableOutlined />,\n            value: 'thing',\n          },\n        ]}\n      />\n\n      <Divider />\n\n      <Button size=\"small\" block onClick={() => addParams({ display: 'simulator' })}>\n        Simulator\n      </Button>\n\n      <Typography.Paragraph type=\"secondary\" className=\"my-6\">\n        v2.0.1\n      </Typography.Paragraph>\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(diagramItems: Dictionary<DailyDiagramItem>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(diagramItems);\n  // Object.values(copy).forEach((item) => {\n  //   item.syllables = (item.syllables ?? '').replace(/·/g, SYLLABLE_SEPARATOR);\n  // });\n  // console.log(copy);\n\n  return sortJsonKeys(copy);\n}\n","import { Affix, Button, Flex, Form, Input, Modal, Radio, Switch } from 'antd';\nimport clsx from 'clsx';\nimport { Item } from 'components/Sprites';\nimport { orderBy } from 'lodash';\nimport { useEffect, useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\n\nimport {\n  separateSyllables,\n  stressSyllableDependencyVerifier,\n  SYLLABLE_SEPARATOR,\n  syllableDependencyVerifier,\n  verifiers,\n} from './utils';\n\nexport type ThingFormValues = Record<string, boolean | string | number>;\n\ntype EditThingModalProps = {\n  isModalOpen: boolean;\n  onSaveThing: (item: DailyDiagramItem) => void;\n  onCancel: () => void;\n  thing: DailyDiagramItem;\n  rules: Dictionary<DailyDiagramRule>;\n  width?: number | string;\n  itemAliases?: string[];\n  subtitle?: string;\n  okButtonText?: string;\n  onGiveAnotherThing?: () => void;\n};\n\nexport function EditThingModal({\n  isModalOpen,\n  onSaveThing,\n  onCancel,\n  thing,\n  rules,\n  width,\n  itemAliases,\n  subtitle,\n  okButtonText,\n  onGiveAnotherThing,\n}: EditThingModalProps) {\n  // Sort rules properly by type\n  const orderedRules = useMemo(() => {\n    return orderBy(Object.values(rules), [\n      // Not auto\n      (r) => {\n        const index = ['manual', 'dependency', 'auto'].indexOf(r.method);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by type\n      (r) => {\n        const index = ['grammar', 'comparison', 'order', 'count', 'contains', 'ends'].indexOf(r.type);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by partial title\n      (r) => r.title.slice(0, 7),\n      // Sort by id\n      (r) => Number(r.id.split('-')[1]),\n    ]);\n  }, [rules]);\n\n  // Build initial values\n  const [form] = Form.useForm();\n  const values = Form.useWatch([], form);\n  const hasUndefinedValues = !values || Object.values(values ?? {}).some((value) => value === undefined);\n\n  // Automation: If name is changed, recalculates all rules\n  const nameWatch = Form.useWatch('name', form);\n  useEffect(() => {\n    // If initial state where name is still undefined, ignore\n    if (!nameWatch) return;\n\n    if (thing.name && thing.syllables && nameWatch === thing.name) return;\n\n    // If name changes, recalculate all rules\n    const fields: Record<string, boolean | string | number | undefined> = {\n      syllables: separateSyllables(nameWatch),\n      stressedSyllable: (thing.stressedSyllable ?? nameWatch.includes(' ')) ? -1 : 0,\n    };\n    Object.keys(rules).forEach((ruleId) => {\n      if (verifiers[ruleId]) {\n        fields[ruleId] = verifiers[ruleId](nameWatch);\n      } else {\n        fields[ruleId] = thing.rules.length > 0 ? thing.rules.includes(ruleId) : undefined;\n      }\n    });\n    form.setFieldsValue(fields);\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Syllables\n  const syllables = Form.useWatch('syllables', form);\n  const isAcronym = form.getFieldValue('ddr-51-pt');\n\n  useEffect(() => {\n    if (isAcronym) {\n      form.setFieldsValue({ stressedSyllable: undefined });\n      form.setFieldsValue({ 'ddr-43-pt': false });\n      form.setFieldsValue({ 'ddr-44-pt': false });\n      form.setFieldsValue({ 'ddr-45-pt': false });\n      form.setFieldsValue({ 'ddr-46-pt': false });\n    }\n    if (isAcronym === undefined) {\n      form.setFieldsValue({ 'ddr-51-pt': false });\n    }\n  }, [isAcronym]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (syllables) {\n      const syllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (syllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = syllableDependencyVerifier[ruleId](nameWatch, syllables, isAcronym);\n        }\n        return acc;\n      }, {});\n      form.setFieldsValue({\n        ...syllableRulesUpdate,\n        stressedSyllable:\n          syllables === thing.syllables\n            ? thing.stressedSyllable\n            : (thing.stressedSyllable ?? nameWatch.includes(' '))\n              ? -1\n              : undefined,\n      });\n    }\n  }, [nameWatch, syllables, isAcronym]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Stressed syllable\n  const stressedSyllable = Form.useWatch('stressedSyllable', form);\n  useEffect(() => {\n    if (!isAcronym && stressedSyllable !== undefined) {\n      const stressSyllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (stressSyllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = stressSyllableDependencyVerifier[ruleId](nameWatch, syllables, stressedSyllable);\n        }\n        return acc;\n      }, {});\n\n      form.setFieldsValue({\n        ...stressSyllableRulesUpdate,\n      });\n    }\n  }, [stressedSyllable]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Male vs Female nouns vs Both genders\n  const rule1 = form.getFieldValue('ddr-1-pt');\n  const rule2 = form.getFieldValue('ddr-2-pt');\n  const rule5 = form.getFieldValue('ddr-50-pt');\n  useEffect(() => {\n    if (rule1 === true) {\n      form.setFieldsValue({ 'ddr-2-pt': false });\n      form.setFieldsValue({ 'ddr-50-pt': false });\n    }\n  }, [rule1]); // eslint-disable-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (rule2 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n      form.setFieldsValue({ 'ddr-50-pt': false });\n    }\n  }, [rule2]); // eslint-disable-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (rule5 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n      form.setFieldsValue({ 'ddr-2-pt': false });\n    }\n  }, [rule5]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: syllable count\n  const rule3 = form.getFieldValue('ddr-3-pt');\n  useEffect(() => {\n    if (rule3 === true) {\n      form.setFieldsValue({ 'ddr-4-pt': false });\n    }\n  }, [rule3]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule4 = form.getFieldValue('ddr-4-pt');\n  useEffect(() => {\n    if (rule4 === true) {\n      form.setFieldsValue({ 'ddr-3-pt': false });\n    }\n  }, [rule4]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: has hyphen\n  useEffect(() => {\n    const hasHyphen = nameWatch?.includes('-');\n    if (hasHyphen) {\n      form.setFieldsValue({ 'ddr-5-pt': true });\n    }\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFinish = (values: any) => {\n    const preparedThing = serializeThing(values);\n    onSaveThing(preparedThing);\n  };\n\n  const splitSyllables: string[] = useMemo(() => (syllables ?? '').split(SYLLABLE_SEPARATOR), [syllables]);\n\n  return (\n    <Modal\n      width={width}\n      title={\n        <>\n          Edit {thing.name} {subtitle && <small>{subtitle}</small>}\n        </>\n      }\n      open={isModalOpen}\n      onOk={form.submit}\n      onCancel={onCancel}\n      maskClosable={false}\n      okButtonProps={{ disabled: hasUndefinedValues, htmlType: 'submit', size: 'large' }}\n      okText={okButtonText ?? 'Add Item'}\n    >\n      <Form\n        form={form}\n        name={`new-item-${thing.itemId}`}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        initialValues={deserializeThing(thing, rules)}\n        layout=\"vertical\"\n        size=\"small\"\n        labelWrap\n      >\n        <div className=\"diagram-container\">\n          <div>\n            <Item id={thing.itemId} width={50} />\n          </div>\n\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"itemId\" label=\"Item\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Form.Item name=\"syllables\" label=\"Syllables\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"stressedSyllable\" label=\"Stressed Syllable\">\n            <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n              {splitSyllables.map((syllable, index) => (\n                <Radio key={index} value={splitSyllables.length - index - 1}>\n                  {syllable}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item name=\"updatedAt\" label=\"Updated At\">\n            <Input value={new Date(thing.updatedAt).toLocaleString()} readOnly />\n          </Form.Item>\n\n          {(itemAliases || onGiveAnotherThing) && (\n            <div>\n              {itemAliases && <span>Options: {itemAliases?.join(', ')}</span>}\n              {onGiveAnotherThing && (\n                <Button size=\"small\" onClick={onGiveAnotherThing} type=\"dashed\" className=\"mt-2\">\n                  Give me another thing\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div>\n            <Affix offsetTop={50}>\n              <Flex justify=\"center\" align=\"center\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={hasUndefinedValues}>\n                  {okButtonText ?? 'Add Item'}\n                </Button>\n              </Flex>\n            </Affix>\n          </div>\n        </div>\n        <div className=\"diagram-container\">\n          {orderedRules.map((rule) => {\n            if (rule.method === 'auto' && verifiers[rule.id]) {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            if (rule.method === 'dependency') {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item\n                key={rule.id}\n                name={rule.id}\n                label={rule.title}\n                className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n              >\n                <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n                  <Radio value={true}>✅</Radio>\n                  <Radio value={false}>❌</Radio>\n                </Radio.Group>\n              </Form.Item>\n            );\n          })}\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n\nconst deserializeThing = (\n  thing: DailyDiagramItem,\n  rules: Dictionary<DailyDiagramRule>\n): Record<string, boolean | string | number> => {\n  let wasAnyRuleUpdated = false;\n  return {\n    name: thing.name,\n    itemId: thing.itemId,\n    syllables: thing.syllables ?? separateSyllables(thing.name),\n    stressedSyllable: thing.stressedSyllable ?? 0,\n\n    ...Object.keys(rules).reduce((acc: Record<string, boolean | undefined>, ruleId) => {\n      // Only re-verify if rule is older than the last update\n      if (thing.updatedAt < rules[ruleId].updatedAt) {\n        if (verifiers[ruleId]) {\n          const reVerify = verifiers[ruleId](thing.name);\n          if (reVerify && thing.rules.includes(ruleId)) {\n            wasAnyRuleUpdated = true;\n          }\n          acc[ruleId] = reVerify;\n        } else {\n          acc[ruleId] = undefined;\n        }\n      } else {\n        acc[ruleId] = thing.rules.includes(ruleId);\n      }\n\n      return acc;\n    }, {}),\n    updatedAt: wasAnyRuleUpdated ? Date.now() : thing.updatedAt,\n  };\n};\n\nconst serializeThing = (values: Record<string, boolean | string | number>): DailyDiagramItem => {\n  const { itemId, name, updatedAt, syllables, stressedSyllable, ...thingRules } = values;\n\n  return {\n    itemId: itemId as string,\n    name: name as string,\n    updatedAt: Date.now(),\n    syllables: syllables as string,\n    stressedSyllable: stressedSyllable as number,\n    rules: Object.keys(thingRules).filter((key) => thingRules[key] === true),\n  };\n};\n","import { App, Button } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { sample } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { wait } from 'utils';\nimport { EditThingModal } from './EditThingModal';\n\ntype AddNewThingFlowProps = {\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  width: number;\n};\n\nexport function AddNewThingFlow({ addEntryToUpdate, availableThings, rules, width }: AddNewThingFlowProps) {\n  const { notification } = App.useApp();\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  const onActivateThing = () => {\n    const randomItem = sample(availableThings);\n    if (randomItem) {\n      setActiveThing({\n        itemId: randomItem.id,\n        name: chooseNameThatIsASingleWord(randomItem),\n        updatedAt: Date.now(),\n        syllables: '',\n        stressedSyllable: 0,\n        rules: [],\n      });\n    } else {\n      setActiveThing(null);\n    }\n  };\n\n  const aliases = useMemo(() => {\n    if (!activeThing) return [];\n    const item = availableThings.find((thing) => thing.id === activeThing.itemId);\n    return [item?.name.pt, ...(item?.aliasesPt ?? [])].filter(Boolean);\n  }, [activeThing, availableThings]);\n\n  const onAddItem = async (newThing: DailyDiagramItem) => {\n    if (!activeThing) return;\n    if (!newThing.name || !newThing.itemId) {\n      notification.error({ message: 'Name and Item ID are required' });\n    }\n\n    addEntryToUpdate(newThing.itemId, newThing);\n\n    console.log('COMPLETED SAVE');\n\n    setActiveThing(null);\n\n    await wait(250);\n\n    onActivateThing();\n  };\n\n  const onGiveAnotherThing = async () => {\n    setActiveThing(null);\n    await wait(100);\n    onActivateThing();\n  };\n\n  return (\n    <>\n      <Button size=\"large\" onClick={onActivateThing}>\n        Classify New Item\n      </Button>\n      {!!activeThing && (\n        <EditThingModal\n          isModalOpen={activeThing !== null}\n          onSaveThing={onAddItem}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          width={width * 0.9}\n          itemAliases={aliases as string[]}\n          onGiveAnotherThing={onGiveAnotherThing}\n        />\n      )}\n    </>\n  );\n}\n\nconst chooseNameThatIsASingleWord = (item: ItemT) => {\n  if (item.name.pt.split(' ').length === 1) return item.name.pt;\n\n  if (item.aliasesPt) {\n    return item.aliasesPt.find((alias) => alias.split(' ').length === 1) ?? item.name.pt;\n  }\n  return item.name.pt;\n};\n","import { Flex, Typography } from 'antd';\nimport { TransparentButton } from 'components/Common';\nimport { Item } from 'components/Sprites';\nimport { DailyDiagramItem } from 'types';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n};\n\nexport function Thing({ itemId, name, width = 50 }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\">\n      <Item id={itemId} width={width} />\n      <Typography.Text code key={itemId}>\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n\ntype ThingButtonProps = {\n  thing: DailyDiagramItem;\n  onActivateThing: (thing: DailyDiagramItem) => void;\n  width?: number;\n};\n\nexport function ThingButton({ thing, width = 50, onActivateThing }: ThingButtonProps) {\n  return (\n    <TransparentButton onClick={() => onActivateThing(thing)}>\n      <Thing itemId={thing.itemId} name={thing.name} width={width} />\n    </TransparentButton>\n  );\n}\n","import { Divider, Flex, Space, Table, TableColumnsType, Tag, Tooltip, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { useMemo } from 'react';\nimport { ThingButton } from './Thing';\nimport { useTablePagination } from 'hooks/useTablePagination';\n\ntype RulesByThingProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n  setActiveThing: React.Dispatch<React.SetStateAction<DailyDiagramItem | null>>;\n};\n\nexport function RulesByThing({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  setActiveThing,\n  thingsByRules,\n}: RulesByThingProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  const rows = useMemo(() => Object.values(things), [things]);\n\n  const paginationProps = useTablePagination({ total: rows.length, showQuickJumper: true });\n\n  const columns: TableColumnsType<DailyDiagramItem> = [\n    {\n      title: 'ItemId',\n      dataIndex: 'itemId',\n      key: 'itemId',\n      sorter: (a, b) => Number(a.itemId) - Number(b.itemId),\n      render: (itemId: string) => <Tag>{itemId}</Tag>,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n      render: (name: string) => <Typography.Text>{name}</Typography.Text>,\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'itemId',\n      key: 'sprite',\n      render: (itemId: string) => (\n        <ThingButton key={`i-${itemId}`} thing={things[itemId]} onActivateThing={setActiveThing} />\n      ),\n    },\n    {\n      title: 'Rules',\n      dataIndex: 'rules',\n      key: 'rules',\n      render: (itemRules: string[], record) => (\n        <Space wrap>\n          {itemRules.map((ruleId) => (\n            <Tooltip title={rules[ruleId].title} key={ruleId}>\n              <Tag color={rules[ruleId].updatedAt > record.updatedAt ? 'red' : undefined}>{ruleId}</Tag>\n            </Tooltip>\n          ))}\n        </Space>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'rules',\n      key: 'count',\n      sorter: (a, b) => a.rules.length - b.rules.length,\n      render: (rules: string[]) => rules.length,\n    },\n  ];\n\n  const duplicatedThings = useMemo(() => {\n    const dict: Dictionary<string[]> = {};\n\n    Object.values(things).forEach((item) => {\n      if (!dict[item.name]) {\n        dict[item.name] = [];\n      }\n      dict[item.name].push(item.itemId);\n    });\n    return Object.values(dict).filter((ids) => ids.length > 1);\n  }, [things]);\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>\n        Rules By Items <Divider type=\"vertical\" /> Added: <Tag>{Object.keys(things).length}</Tag> Available to\n        add <Tag>{availableThings.length}</Tag>\n      </Typography.Title>\n\n      <AddNewThingFlow\n        addEntryToUpdate={addEntryToUpdate}\n        availableThings={availableThings}\n        rules={rules}\n        width={containerWidth}\n      />\n\n      <Divider />\n\n      <Table dataSource={rows} columns={columns} rowKey=\"itemId\" pagination={paginationProps} />\n\n      <Divider />\n\n      <Typography.Title level={5}>Duplicated Things</Typography.Title>\n      <Space wrap>\n        {duplicatedThings.length === 0 && <Typography.Text>No duplicated things</Typography.Text>}\n        {duplicatedThings.map((ids) => (\n          <Flex key={ids[0]} align=\"center\">\n            <Tag color=\"red\">{ids.length}</Tag>\n            {ids.map((itemId) => (\n              <ThingButton key={`i-${itemId}`} thing={things[itemId]} onActivateThing={setActiveThing} />\n            ))}\n          </Flex>\n        ))}\n      </Space>\n    </Space>\n  );\n}\n","import { Divider, Rate, Space, Switch, Table, TableColumnsType, Tag, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\n\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { ThingButton } from './Thing';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { useTablePagination } from 'hooks/useTablePagination';\n\ntype ThingsByRuleProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n  setActiveThing: React.Dispatch<React.SetStateAction<DailyDiagramItem | null>>;\n  containerWidth: number;\n};\n\nexport function ThingsByRule({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n  setActiveThing,\n  containerWidth,\n}: ThingsByRuleProps) {\n  const { is, addParam } = useQueryParams();\n\n  const rows = useMemo(\n    () =>\n      Object.values(rules).map((r) => ({\n        ...r,\n        thingsCount: thingsByRules[r.id].length,\n      })),\n    [rules, thingsByRules]\n  );\n\n  const paginationProps = useTablePagination({ total: rows.length, showQuickJumper: true });\n\n  const stats = useMemo(() => {\n    const quantities = Object.values(thingsByRules).map((things) => things.length);\n\n    return {\n      maxThings: Math.max(...quantities),\n      minThings: Math.min(...quantities),\n      averageThings: Math.round(\n        Object.values(thingsByRules).reduce((sum, things) => sum + things.length, 0) /\n          Object.keys(thingsByRules).length\n      ),\n    };\n  }, [thingsByRules]);\n\n  const columns: TableColumnsType<DailyDiagramRule & { thingsCount: number }> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => Number(a.id.split('-')[1]) - Number(b.id.split('-')[1]),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Rule',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a, b) => a.title.localeCompare(b.title),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: (a, b) => a.type.localeCompare(b.type),\n    },\n    {\n      title: 'Method',\n      dataIndex: 'method',\n      key: 'method',\n      sorter: (a, b) => a.method.localeCompare(b.method),\n    },\n    {\n      title: 'Things',\n      dataIndex: 'thingsCount',\n      key: 'thingsCount',\n      render: (thingsCount: number, record) => (\n        <Space size=\"small\">\n          <Tag>{thingsCount}</Tag>\n          {is('showThings') ? (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 20).map((itemId) => (\n                <ThingButton\n                  key={`${record.id}-${itemId}`}\n                  thing={things[itemId]}\n                  onActivateThing={setActiveThing}\n                />\n              ))}\n              {thingsByRules[record.id].length > 20 && (\n                <Typography.Text>+{thingsCount - 20} more</Typography.Text>\n              )}\n            </Space>\n          ) : (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 5).map((itemId) => (\n                <ThingButton\n                  key={`${record.id}-${itemId}`}\n                  thing={things[itemId]}\n                  onActivateThing={setActiveThing}\n                />\n              ))}\n              {thingsByRules[record.id].length > 5 && (\n                <Typography.Text>+{thingsCount - 5} more</Typography.Text>\n              )}\n            </Space>\n          )}\n        </Space>\n      ),\n      sorter: (a, b) => a.thingsCount - b.thingsCount,\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      sorter: (a, b) => a.level - b.level,\n      render: (level: number) => <Rate value={level} count={3} disabled />,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Title level={4}>\n        Things By Rule (Added: {Object.keys(things).length} | {availableThings.length}){' '}\n      </Typography.Title>\n\n      <Space split={<Divider type=\"vertical\" />} wrap>\n        <AddNewThingFlow\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          width={containerWidth}\n        />\n\n        <Typography.Text strong>\n          Average Things: <Tag>{stats.averageThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Max Things: <Tag>{stats.maxThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Min Things: <Tag>{stats.minThings}</Tag>\n        </Typography.Text>\n\n        <Switch\n          checked={is('showThings')}\n          onChange={(e) => addParam('showThings', e)}\n          checkedChildren=\"Hide things\"\n          unCheckedChildren=\"Show things\"\n        />\n      </Space>\n\n      <Table dataSource={rows} columns={columns} pagination={paginationProps} />\n    </Space>\n  );\n}\n","import { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { EditThingModal } from './EditThingModal';\nimport { wait } from 'utils';\nimport { getLatestRuleUpdate, SYLLABLE_SEPARATOR } from './utils';\n\ntype ItemUpdateGuardProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  rules: Dictionary<DailyDiagramRule>;\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  children: ReactNode;\n};\n\nexport function ItemUpdateGuard({ children, things, rules, addEntryToUpdate }: ItemUpdateGuardProps) {\n  // If any rules has been added or updated AFTER the last time the user has updated the item, the user will be warned to update the item\n  const toUpdateThings = useMemo(() => {\n    const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n    return Object.values(things).filter((item) => {\n      const latestThingUpdate = item.updatedAt;\n\n      // Prevent updating items that have the syllables field but it's not correct\n      if (\n        item.syllables &&\n        item.syllables.split(SYLLABLE_SEPARATOR).join('') !== item.name.replace(/\\s/g, '')\n      ) {\n        console.log('❗️ Name and syllables do not match', item.name, item.syllables);\n        return true;\n      }\n\n      // if (item.syllables.endsWith('ie') && item.updatedAt < 1724527674296) {\n      //   return true;\n      // }\n\n      return latestRuleUpdate > latestThingUpdate;\n    });\n  }, [things, rules]);\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  useEffect(() => {\n    const updateThings = async (i: DailyDiagramItem) => {\n      console.log('Found things that need to update...');\n      setActiveThing(null);\n\n      // Await the wait function here\n      await wait(250);\n\n      if (toUpdateThings.length > 0) {\n        setActiveThing(toUpdateThings[0]);\n      }\n    };\n\n    console.count('Checking for things that need to update...');\n    if (toUpdateThings.length > 0) {\n      updateThings(toUpdateThings[0]);\n    }\n  }, [toUpdateThings]);\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <>\n      {activeThing && (\n        <EditThingModal\n          subtitle={`(${toUpdateThings.length} left to update)`}\n          isModalOpen={activeThing !== null}\n          onSaveThing={onUpdateThing}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          okButtonText=\"Update\"\n          width=\"90vw\"\n        />\n      )}\n      <>{children}</>\n    </>\n  );\n}\n","import { Collapse, Rate, Space, Typography } from 'antd';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { Thing } from './Thing';\nimport { ReactNode, useState } from 'react';\nimport { TransparentButton } from 'components/Common';\n\ntype DiagramGameSampleProps = {\n  game: DailyTeoriaDeConjuntosEntry;\n};\n\ntype TThing = {\n  id: string;\n  name: string;\n  rule: number;\n};\n\nexport function DiagramGameSample({ game }: DiagramGameSampleProps) {\n  const [leftRing, setLeftRing] = useState<TThing[]>([\n    {\n      id: game.rule1.thing.id,\n      name: game.rule1.thing.name,\n      rule: 1,\n    },\n  ]);\n  const [rightRing, setRightRing] = useState<TThing[]>([\n    {\n      id: game.rule2.thing.id,\n      name: game.rule2.thing.name,\n      rule: 2,\n    },\n  ]);\n  const [intersection, setIntersection] = useState<TThing[]>([\n    {\n      id: game.intersectingThing.id,\n      name: game.intersectingThing.name,\n      rule: 0,\n    },\n  ]);\n\n  const [playerOptions, setPlayerOptions] = useState<TThing[]>(game.things.slice(0, 4));\n\n  const [selectedThing, setSelectedThing] = useState<TThing | null>(game.things[0]);\n\n  // const\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Typography.Title level={4}>Game Sample</Typography.Title>\n      <Typography.Title level={5}>\"{game.title}\"</Typography.Title>\n      <Rate value={game.level} count={game.level} disabled />\n      <Typography.Paragraph style={{ maxWidth: '500px' }}>\n        O círculo amarelo tem uma regra gramatical secreta e o circulo vermelho tem outra regra gramatical\n        secreta. O quadrado do meio representa a interseção entre a regra amarela e a regra vermelha.\n      </Typography.Paragraph>\n\n      <Space>\n        <VennDiagram\n          width={600}\n          leftCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {leftRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          rightCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {rightRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          intersectionChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {intersection.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n        />\n      </Space>\n      <Typography.Text>Coloque os objetos nos círculos corretos:</Typography.Text>\n      <Space className=\"space--center\">\n        {playerOptions.map((thing) => (\n          <TransparentButton\n            style={thing.id === selectedThing?.id ? { outline: '3px solid hotPink' } : {}}\n            onClick={() => setSelectedThing(thing)}\n          >\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} />\n          </TransparentButton>\n        ))}\n      </Space>\n\n      <Collapse\n        items={[\n          {\n            key: '1',\n            label: 'Resposta',\n            children: (\n              <Space direction=\"vertical\">\n                <Typography.Text strong>Regra Amarela</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule1.text}</Typography.Text>\n                  </li>\n                </ul>\n\n                <Typography.Text strong>Regra Vermelha</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule2.text}</Typography.Text>\n                  </li>\n                </ul>\n              </Space>\n            ),\n          },\n        ]}\n      />\n\n      <div style={{ height: '200px' }}></div>\n    </Space>\n  );\n}\n\ntype VennDiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nfunction VennDiagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: VennDiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import { Button, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\nimport './GameSimulator.scss';\n\ntype GameSimulatorProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n};\n\nexport function GameSimulator({ things, rules }: GameSimulatorProps) {\n  const [ref] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  const onGenerateDemoGames = () => {\n    let demos: any = null;\n    try {\n      demos = buildDailyTeoriaDeConjuntosGames(\n        25,\n        {\n          latestDate: '2023/01/01',\n          latestNumber: 0,\n          used: [],\n        },\n        rules,\n        things\n      );\n\n      console.log(demos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>Game Simulator</Typography.Title>\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      <Button size=\"large\" onClick={onGenerateDemoGames}>\n        Generate Demos (log)\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} key={JSON.stringify(simulation)} />}\n    </Space>\n  );\n}\n","import { Typography } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\n\nimport { RulesByThing } from './RulesByThing';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ThingsByRule } from './ThingsByRule';\nimport { orderBy } from 'lodash';\nimport { ItemUpdateGuard } from './ItemUpdateGuard';\nimport { GameSimulator } from './GameSimulator';\nimport { EditThingModal } from './EditThingModal';\nimport { useMeasure } from 'react-use';\n\nexport function ItemsDiagramSetsContent({\n  data,\n  addEntryToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n  const tdrItemsQuery = useTDResource<ItemT>('items');\n  const tdrDiagramRulesQuery = useTDResource<DailyDiagramRule>('daily-diagram-rules');\n\n  const availableThings = useMemo(() => {\n    return Object.values(tdrItemsQuery.data ?? {}).filter((item) => {\n      if (data && data[item.id] !== undefined) return false;\n      if (item.nsfw) return false;\n      const isNameSingleWord = item.name.pt.split(' ').length === 1;\n\n      if (item.decks?.includes('thing')) return true;\n      if (item.decks?.includes('alien') && isNameSingleWord) return true;\n      if (item.decks?.includes('manufactured') && isNameSingleWord) return true;\n\n      return false;\n    });\n  }, [data, tdrItemsQuery.data]);\n\n  const rules = useMemo(() => {\n    return tdrDiagramRulesQuery.data ?? {};\n  }, [tdrDiagramRulesQuery.data]);\n\n  const thingsByRules = useMemo(() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    orderBy(Object.values(data), ['updatedAt'], ['desc']).forEach((entry) => {\n      entry.rules.forEach((ruleId) => {\n        dict[ruleId].push(entry.itemId);\n      });\n    });\n    return dict;\n  }, [data, rules]);\n\n  const { is, queryParams } = useQueryParams();\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  if (tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading) {\n    return <Typography.Text>Loading...</Typography.Text>;\n  }\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <DataLoadingWrapper\n      isLoading={tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading}\n      hasResponseData={tdrItemsQuery.hasResponseData || tdrDiagramRulesQuery.hasResponseData}\n    >\n      <div ref={ref}>\n        <ItemUpdateGuard things={data} rules={rules} addEntryToUpdate={addEntryToUpdate}>\n          {activeThing && (\n            <EditThingModal\n              isModalOpen={activeThing !== null}\n              onSaveThing={(at) => {\n                onUpdateThing(at);\n                setActiveThing(null);\n              }}\n              onCancel={() => setActiveThing(null)}\n              thing={activeThing}\n              rules={rules}\n              okButtonText=\"Update\"\n              width={containerWidth}\n            />\n          )}\n\n          {(is('display', 'rule') || !queryParams.has('display')) && (\n            <ThingsByRule\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n              thingsByRules={thingsByRules}\n              setActiveThing={setActiveThing}\n              containerWidth={containerWidth}\n            />\n          )}\n\n          {is('display', 'thing') && (\n            <RulesByThing\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n              thingsByRules={thingsByRules}\n              setActiveThing={setActiveThing}\n            />\n          )}\n\n          {is('display', 'simulator') && (\n            <GameSimulator\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n            />\n          )}\n        </ItemUpdateGuard>\n      </div>\n    </DataLoadingWrapper>\n  );\n}\n","import { Flex, Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsDiagramFilters } from 'components/Items/Diagram/ItemsDiagramFilters';\nimport { ItemsDiagramSetsContent } from 'components/Items/Diagram/ItemsDiagramSetsContent';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyDiagramItem } from 'types';\n\nexport function ItemsDiagramSets() {\n  const diagramData = useResourceFirebaseData<DailyDiagramItem>({\n    tdrResourceName: 'daily-diagram-items',\n    firebaseDataCollectionName: 'diagramItems',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Diagram Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsDiagramFilters {...diagramData} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={diagramData.isLoading || diagramData.isSaving}\n            error={diagramData.error}\n            hasResponseData={!isEmpty(diagramData.data)}\n          >\n            <Flex vertical gap={24}>\n              <ItemsDiagramSetsContent {...diagramData} />\n            </Flex>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiagramSets;\n"],"names":["FilterSelect","label","value","onChange","options","placeholder","style","minWidth","disabled","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","className","valuePropName","checked","size","FilterCheckBox","e","target","FilterSegments","layout","length","block","option","arrow","trigger","title","icon","SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","togglePendingSave","useGlobalContext","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","onClick","loading","danger","SectionTitle","children","level","rest","TransparentButton","active","activeClass","hoverType","clsx","TagState","isLoading","isIdle","error","isError","hasResponseData","color","ResponseState","props","buildDailyTeoriaDeConjuntosGames","batchSize","history","rules","things","count","lastDate","latestDate","used","latestRuleUpdate","getLatestRuleUpdate","thingsByRules","dict","Object","values","reduce","acc","rule","id","forEach","getIsThingOutdated","ruleId","push","itemId","entries","i","getNextDay","number","latestNumber","getRuleSet","availableThingsIds","shuffle","keys","filter","includes","initialThingId","sample","Error","intersectingThing","name","thingsRulesByType","twoRandomTypes","sampleSize","selectedRules","sort","join","cloneDeep","itemsOnlyInRule1","difference","itemsOnlyInRule2","commonItems","intersection","selectedInitialThingId1","pop","rule1","text","thing","selectedInitialThingId2","rule2","sampleCommonThings","sampleRule1Things","sampleRule2Things","gabarito","selectedThings","TITLES","contains","starts","ends","grammar","order","comparison","repetition","setId","getYesterday","subtract","dateString","add","checkWeekend","date","day","SYLLABLE_SEPARATOR","LETTERS","CONSONANTS","VOWELS","ACCENTS","cleanupWord","memoize","word","stringRemoveAccents","toLowerCase","countLetters","countVowels","split","letter","countConsonants","countWords","verifiers","indexOf","vowels","Set","firstLetter","slice","some","index","test","countAccents","syllableDependencyVerifier","syllables","syllable","_","isAcronym","stressSyllableDependencyVerifier","stress","Math","updatedAt","separateSyllables","replace","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","data","useGetFirebaseDoc","useQuery","queryKey","queryFn","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","removeParam","is","get","has","queryParams","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","App","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","success","refetchQueries","onError","description","useMemo","isSuccess","isPending","isEmpty","firebaseData","save","mutate","serializeFirebaseData","addEntryToUpdate","item","prev","entriesToUpdate","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","useTDResourceNonCollection","useTablePagination","prefix","defaultCurrent","defaultPageSize","pageSizeOptions","total","showQuickJumper","current","Number","pageSize","page","toString","onShowSizeChange","hideOnSinglePage","updateQueryFunction","updateDoc","useMutation","mutationFn","ItemsDiagramFilters","vertical","gap","JSON","stringify","DownloadButton","diagramItems","copy","sortJsonKeys","prepareFileForDownload","fileName","mode","display","ClusterOutlined","TableOutlined","EditThingModal","isModalOpen","onSaveThing","onCancel","itemAliases","subtitle","okButtonText","onGiveAnotherThing","orderedRules","orderBy","r","method","Infinity","form","Form","hasUndefinedValues","nameWatch","fields","stressedSyllable","setFieldsValue","getFieldValue","syllableRulesUpdate","stressSyllableRulesUpdate","rule5","rule3","rule4","splitSyllables","open","onOk","submit","maskClosable","okButtonProps","htmlType","okText","onFinish","preparedThing","serializeThing","autoComplete","initialValues","deserializeThing","labelWrap","readOnly","optionType","buttonStyle","toLocaleString","offsetTop","justify","align","checkedChildren","unCheckedChildren","wasAnyRuleUpdated","reVerify","thingRules","AddNewThingFlow","availableThings","activeThing","setActiveThing","onActivateThing","randomItem","chooseNameThatIsASingleWord","aliases","find","pt","aliasesPt","Boolean","newThing","wait","alias","Thing","code","ThingButton","RulesByThing","ref","containerWidth","useMeasure","rows","paginationProps","columns","dataIndex","sorter","a","b","render","localeCompare","itemRules","record","wrap","duplicatedThings","ids","direction","dataSource","rowKey","pagination","ThingsByRule","thingsCount","stats","quantities","maxThings","minThings","averageThings","round","sum","strong","ItemUpdateGuard","toUpdateThings","latestThingUpdate","updateThings","DiagramGameSample","game","leftRing","setLeftRing","rightRing","setRightRing","setIntersection","playerOptions","setPlayerOptions","selectedThing","setSelectedThing","maxWidth","VennDiagram","leftCircleChildren","height","arr","rightCircleChildren","intersectionChildren","outline","items","xmlns","viewBox","fill","stroke","strokeMiterlimit","strokeWidth","d","x","y","GameSimulator","simulation","setSimulation","demos","ItemsDiagramSetsContent","tdrItemsQuery","tdrDiagramRulesQuery","nsfw","isNameSingleWord","decks","DataLoadingWrapper","at","ItemsDiagramSets","diagramData","hasSider","PageSider"],"sourceRoot":""}