{"version":3,"file":"static/js/7001.99e10e71.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/ResponseState.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/DataLoadingWrapper.tsx","components/Sprites/Sprite.tsx","components/Sprites/WarehouseGood.tsx","components/Sprites/AlienSign.tsx","components/Sprites/Emoji.tsx","components/Sprites/Glyph.tsx","components/Sprites/Item.tsx","hooks/useBaseUrl.ts","utils/constants.ts","utils/index.ts"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Checkbox, Form, InputNumber, Segmented, Select, Switch, Tooltip } from 'antd';\nimport { SegmentedValue } from 'antd/es/segmented';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport function FilterSwitch({ label, value, onChange, className, disabled }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" disabled={disabled} />\n    </Form.Item>\n  );\n}\n\nexport function FilterCheckBox({ label, value, onChange, disabled, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Checkbox checked={value} onChange={(e) => onChange(e.target.checked)} disabled={disabled} />\n    </Form.Item>\n  );\n}\n\ntype FilterSegmentsProps = {\n  label: ReactNode;\n  value?: string;\n  onChange: (mode: SegmentedValue) => void;\n  options: { value: string; title: string; icon: ReactNode }[];\n};\n\nexport function FilterSegments({ value, label, onChange, options }: FilterSegmentsProps) {\n  return (\n    <Form.Item label={label}>\n      <Segmented\n        block\n        value={value}\n        onChange={onChange}\n        options={options.map((option) => ({\n          label: <Tooltip title={option.title}>{option.icon}</Tooltip>,\n          value: option.value,\n        }))}\n      />\n    </Form.Item>\n  );\n}\n","import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  isIdle?: boolean;\n  isLoading: boolean;\n  error?: ResponseError;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({\n  isLoading,\n  isIdle,\n  error,\n  hasResponseData,\n  children,\n}: DataLoadingWrapperProps) {\n  if (!isIdle && isLoading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" showIcon />\n      </Layout.Content>\n    );\n  }\n\n  if (isIdle || hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const { getUrl } = useBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${getUrl('sprites')}/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype WarehouseGoodProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\nconst BASE = 64;\n\n/**\n * Retrieves the source and good ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and good ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const goodId = `good-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `warehouse-goods-${sourceId}`;\n  return [source, goodId];\n};\n\n/**\n * An warehouse good card component.\n */\nexport function WarehouseGood({ id, width = 75, className }: WarehouseGoodProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={itemId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype AlienSignProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function AlienSign({ id, width = 75, className = '' }: AlienSignProps) {\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={id} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype EmojiProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function Emoji({ id, width, className }: EmojiProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\ntype GlyphProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n});\n\n/**\n * A glyph card component.\n */\nexport function Glyph({ id, width, className }: GlyphProps) {\n  const [source, glyphId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\nexport type ItemProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function Item({ id, width, className, title }: ItemProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div\n      className={clsx('sprite', className)}\n      style={{ width: `${width ?? 75}px`, height: `${width ?? 75}px` }}\n    >\n      <Sprite source={source} id={itemId} width={width} title={title} />\n    </div>\n  );\n}\n","/**\n * Returns the base url for the given library and path\n * @param library\n * @param path\n * @returns\n */\nexport function useBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic') {\n  let baseUrl: string | undefined = process.env.REACT_APP_TD_BASE_URL;\n  let folder: string | undefined = '';\n\n  switch (library) {\n    case 'images':\n      folder = process.env.REACT_APP_TD_IMAGES;\n      break;\n    case 'sprites':\n      folder = process.env.REACT_APP_TD_SPRITES;\n      break;\n    case 'resources':\n      folder = process.env.REACT_APP_TD_RESOURCES;\n      break;\n    case 'classic':\n      folder = process.env.REACT_APP_TD_CLASSIC;\n      break;\n    default:\n      // TODO: The default should be removed\n      // baseUrl =\n      //   process.env.NODE_ENV === 'development'\n      //     ? process.env.REACT_APP_LOCAL_URL\n      //     : process.env.REACT_APP_TD_BASE_URL;\n      // folder = process.env.REACT_APP_TD_RESOURCES;\n      throw new Error('Invalid library');\n  }\n\n  return {\n    baseUrl,\n    getUrl: (path: string) => [baseUrl, folder, path].join('/'),\n  };\n}\n","import { AlienSign, Emoji, Glyph } from 'components/Sprites';\nimport { WarehouseGood } from 'components/Sprites/WarehouseGood';\nimport { capitalize, invert, keyBy } from 'lodash';\n\nexport const SEARCH_THRESHOLD: number = 2;\n\nexport const RESOURCE_NAMES = {\n  ADJECTIVES: 'adjectives',\n  ALIEN_ITEMS: 'alien-items',\n  ARTE_RUIM_CARDS: 'arte-ruim-cards',\n  ARTE_RUIM_GROUPS: 'arte-ruim-groups',\n  ARTE_RUIM_PAIRS: 'arte-ruim-pairs',\n  CATEGORIES: 'categories',\n  CHALLENGES: 'challenges',\n  CHARACTERS: 'characters',\n  CHOICES: 'choices',\n  CONCEPTS: 'concepts',\n  CONTENDERS: 'contenders',\n  CRIME_EVIDENCE: 'crime-evidence',\n  CRIME_TILES: 'crime-tiles',\n  CRIME_WEAPONS: 'crime-weapons',\n  DATING_CANDIDATE: 'dating-candidate',\n  DATING_CANDIDATE_BODIES: 'dating-candidate-bodies',\n  DATING_CANDIDATE_HEADS: 'dating-candidate-heads',\n  DIAGRAM_TOPICS: 'diagram-topics',\n  DILEMMAS: 'dilemmas',\n  DRAWING_WORDS: 'drawing-words',\n  GROUP_QUESTIONS: 'group-questions',\n  ITEMS_ATTRIBUTES: 'items-attributes',\n  MONSTER_ORIENTATION: 'monster-orientation',\n  MOVIE_REVIEWS: 'movie-reviews',\n  MOVIES: 'movies',\n  NAMING_PROMPTS: 'naming-prompts',\n  OBJECT_FEATURES: 'object-features',\n  QUANTITATIVE_QUESTIONS: 'quantitative-questions',\n  SCENARIOS: 'scenarios',\n  SPECTRUMS: 'spectrums',\n  SINGLE_WORDS: 'single-words',\n  SPY_LOCATIONS: 'spy-locations',\n  SPY_QUESTIONS: 'spy-questions',\n  SUSPECTS: 'suspects',\n  TESTIMONY_QUESTIONS: 'testimony-questions',\n  THEME_WORDS: 'theme-words',\n  THING_PROMPTS: 'thing-prompts',\n  THINGS_QUALITIES: 'things-qualities',\n  TOPICS: 'topics',\n  TREE_WORDS: 'tree-words',\n  TWEETS: 'tweets',\n};\n\nexport const DUAL_LANGUAGE_RESOURCES = [\n  RESOURCE_NAMES.ALIEN_ITEMS,\n  RESOURCE_NAMES.CONTENDERS,\n  RESOURCE_NAMES.CRIME_EVIDENCE,\n  RESOURCE_NAMES.CRIME_TILES,\n  RESOURCE_NAMES.CRIME_WEAPONS,\n  RESOURCE_NAMES.DATING_CANDIDATE_BODIES,\n  RESOURCE_NAMES.DATING_CANDIDATE_HEADS,\n  RESOURCE_NAMES.ITEMS_ATTRIBUTES,\n  RESOURCE_NAMES.MONSTER_ORIENTATION,\n  RESOURCE_NAMES.OBJECT_FEATURES,\n  RESOURCE_NAMES.SUSPECTS,\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n\nexport const SEARCH_PROPERTY: Record<string, string> = {\n  adjectives: 'text',\n  'arte-ruim-cards': 'text',\n  'arte-ruim-groups': 'theme',\n  'arte-ruim-pairs': 'values',\n  categories: 'text',\n  challenges: 'text',\n  characters: 'text',\n  contenders: '',\n  'crime-tiles': '',\n  'diagram-topics': 'text',\n  'galeria-de-sonhos': 'text',\n  'group-questions': 'text',\n  'linhas-cruzadas': 'text',\n  'naming-prompts': 'text',\n  spectrums: '',\n  'single-words': 'text',\n  'spy-locations': '',\n  'spy-questions': '',\n  'testimony-questions': 'question',\n  'thing-prompts': 'text',\n  topics: 'text',\n};\n\nexport const TOTAL_ITEMS = 2496;\n\nexport const SPRITE_LIBRARY = keyBy(\n  [\n    {\n      key: 'alien-signs',\n      name: 'Alien Signs',\n      prefix: 'sign',\n      quantity: 38,\n      startAt: 0,\n      component: AlienSign,\n    },\n    {\n      key: 'emojis',\n      name: 'Emojis',\n      prefix: 'emoji',\n      quantity: 30,\n      startAt: 1,\n      component: Emoji,\n    },\n    {\n      key: 'glyphs',\n      name: 'Glyphs',\n      prefix: 'glyph',\n      quantity: 365,\n      startAt: 1,\n      component: Glyph,\n    },\n    {\n      key: 'warehouse-goods',\n      name: 'Warehouse Goods',\n      prefix: 'good',\n      quantity: 256,\n      startAt: 1,\n      component: WarehouseGood,\n    },\n  ],\n  'key'\n);\n\n/**\n * Options for the sample size selector\n */\nexport const TAGS_SELECTOR_OPTIONS = [\n  { label: 'Any', value: '' },\n  { label: '= 0', value: 0 },\n  { label: '< 3', value: 3 },\n  { label: '< 5', value: 5 },\n  { label: '< 10', value: 10 },\n];\n\n/**\n * Options for the sample size selector\n */\nexport const SAMPLE_SIZE_OPTIONS = [\n  {\n    label: '9',\n    value: 9,\n  },\n  {\n    label: '15',\n    value: 15,\n  },\n  {\n    label: '30',\n    value: 30,\n  },\n  {\n    label: '50',\n    value: 50,\n  },\n  {\n    label: '100',\n    value: 100,\n  },\n];\n\n/**\n * Options for the card size selector\n */\nexport const CARD_SIZE_OPTIONS = [\n  {\n    label: 'Small',\n    value: 100,\n  },\n  {\n    label: 'Medium',\n    value: 150,\n  },\n  {\n    label: 'Large',\n    value: 200,\n  },\n  {\n    label: 'X-Large',\n    value: 250,\n  },\n];\n\nexport const ATTRIBUTE_VALUE = {\n  OPPOSITE: -10,\n  UNRELATED: -3,\n  UNCLEAR: -1,\n  RELATED: 5,\n  DETERMINISTIC: 10,\n};\n\nexport const VALUE_ATTRIBUTE = invert(ATTRIBUTE_VALUE);\n\nexport const ATTRIBUTE_VALUE_PREFIX = {\n  OPPOSITE: '^',\n  UNRELATED: '!',\n  UNCLEAR: '~',\n  RELATED: '+',\n  DETERMINISTIC: '*',\n};\n\nexport const ATTRIBUTE_GROUP_VALUES = Object.keys(ATTRIBUTE_VALUE).map((key) => ({\n  value: key.toLowerCase(),\n  label: capitalize(key),\n}));\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n","import { chain, cloneDeep, isObject, memoize, merge, orderBy } from 'lodash';\nimport { ATTRIBUTE_VALUE, ATTRIBUTE_VALUE_PREFIX, SEARCH_THRESHOLD } from './constants';\nimport stringSimilarity from 'string-similarity';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\n\n/**\n *\n * @param str\n * @returns\n */\nexport function stringRemoveAccents(str: string) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n *\n * @param data\n * @param property\n * @returns\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n *\n * @param str\n * @param data\n * @param property\n * @returns\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const val = typeof entry[property] === 'string' ? entry[property] : JSON.stringify(entry[property]);\n    const entryStr = stringRemoveAccents(val.toLowerCase());\n\n    if (entryStr.includes(value) || stringSimilarity.compareTwoStrings(str, entryStr) > 0.5) {\n      similar[entry.id] = val;\n    }\n  });\n\n  return similar;\n};\n\nexport const findBestMatch = (str: string, list: string[]) => {};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n\n/**\n * Remove duplicated elements from a list\n * @param arr\n * @returns\n */\nexport const removeDuplicates = <T>(arr: T[]): T[] => {\n  return Array.from(new Set(arr));\n};\n\n/**\n * Converts a object into a downloadable file and prompts download\n * @param obj\n * @param filename\n */\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\n/**\n * Sorts the keys of a JSON object based on a predefined order.\n * The keys 'id', 'name', 'title', and 'type' will be placed first in the sorted object,\n * followed by the remaining keys in alphabetical order.\n *\n * @param library - The JSON object to sort.\n * @returns The sorted JSON object.\n */\nexport const sortJsonKeys = (library: PlainObject): PlainObject => {\n  function sortKeys(obj: any): any {\n    if (isObject(obj) && !Array.isArray(obj)) {\n      const sortedKeys = Object.keys(obj)\n        .filter((key) => ['id', 'name', 'title', 'type'].includes(key))\n        .concat(\n          Object.keys(obj)\n            .filter((key) => !['id', 'name', 'title', 'type'].includes(key))\n            .sort()\n        );\n\n      return chain(obj)\n        .toPairs()\n        .sortBy(([key, _]) => sortedKeys.indexOf(key))\n        .map(([key, value]) => [key, sortKeys(value)])\n        .fromPairs()\n        .value();\n    }\n    return obj;\n  }\n\n  return sortKeys(library);\n};\n\n/**\n * Deserializes the data received from Firebase into a dictionary of specified type.\n *\n * @template TData - The type of data to deserialize.\n * @param data - The data to be deserialized.\n * @returns A dictionary of deserialized data.\n */\nexport const deserializeFirebaseData = <TData>(data: Dictionary<string>): Dictionary<TData> => {\n  return Object.keys(data).reduce((acc: Dictionary<TData>, key) => {\n    acc[key] = JSON.parse(data[key]);\n    return acc;\n  }, {});\n};\n\n/**\n * Serializes the data in a dictionary to a dictionary of strings.\n *\n * @param data - The dictionary containing the data to be serialized.\n * @returns A new dictionary with the same keys as the input dictionary, but with the values serialized as strings.\n */\nexport const serializeFirebaseData = <TData>(data: Dictionary<TData>): Dictionary<string> => {\n  return Object.keys(data).reduce((acc: Dictionary<string>, key) => {\n    acc[key] = JSON.stringify(data[key]);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentDateTime = (): string => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const day = String(now.getDate()).padStart(2, '0');\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\n\n/**\n * Creates a new item with default values and merges it with the provided partial item.\n *\n * @param partialItem - The partial item to merge with the default values.\n * @returns The new item with merged values.\n */\nexport const getNewItem = (partialItem: Partial<Item> = {}): Item => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        name: { en: '', pt: '' },\n        groups: [],\n        attributes: {},\n      },\n      partialItem\n    )\n  );\n};\n\n/**\n * Creates a new `ItemAtributesValues` object by merging the provided `partialItemAttributeValues`\n * with a default object that has an empty `id` and an empty `attributes` object.\n *\n * @param partialItemAttributeValues - The partial item attribute values to merge.\n * @returns The new `ItemAtributesValues` object.\n */\nexport const getNewItemAttributeValues = (\n  partialItemAttributeValues: Partial<ItemAtributesValues> = {}\n): ItemAtributesValues => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        attributes: {},\n      },\n      partialItemAttributeValues\n    )\n  );\n};\n\nexport const getItemAttributePriorityResponse = (\n  itemAttributesValues: ItemAtributesValues,\n  itemAttributes: Dictionary<ItemAttribute>,\n  /**\n   * Ignore attributes that are UNRELATED or UNCLEAR\n   */\n  onlyRelevant?: boolean\n) => {\n  const priorityOrder: string[] = orderBy(\n    Object.values(itemAttributes),\n    ['priority', 'id'],\n    ['asc', 'asc']\n  ).map((attribute) => attribute.id);\n\n  function sortAttributesByPriority(attributeKeys: string[], prefix: string) {\n    return orderBy(attributeKeys, (key) => priorityOrder.indexOf(key), ['asc']).map(\n      (key) => `${prefix}${key}`\n    );\n  }\n\n  let opposite: string[] = [];\n  let deterministic: string[] = [];\n  let related: string[] = [];\n  let unrelated: string[] = [];\n  let unclear: string[] = [];\n\n  Object.entries(itemAttributesValues.attributes).forEach(([attributeId, value]) => {\n    const attribute = itemAttributes[attributeId];\n    if (!attribute) return;\n\n    switch (value) {\n      case ATTRIBUTE_VALUE.OPPOSITE:\n        opposite.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.DETERMINISTIC:\n        deterministic.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.RELATED:\n        related.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNRELATED:\n        unrelated.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNCLEAR:\n      default:\n        unclear.push(attributeId);\n        break;\n    }\n  });\n\n  return [\n    ...sortAttributesByPriority(opposite, ATTRIBUTE_VALUE_PREFIX.OPPOSITE),\n    ...sortAttributesByPriority(deterministic, ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC),\n    ...sortAttributesByPriority(related, ATTRIBUTE_VALUE_PREFIX.RELATED),\n\n    ...(onlyRelevant ? [] : sortAttributesByPriority(unrelated, ATTRIBUTE_VALUE_PREFIX.UNRELATED)),\n    ...(onlyRelevant ? [] : sortAttributesByPriority(unclear, ATTRIBUTE_VALUE_PREFIX.UNCLEAR)),\n  ];\n};\nexport const parseAttribute = memoize((keyVariant: string) => {\n  if (keyVariant.length === 3) {\n    return {\n      key: keyVariant,\n      className: '',\n      text: '',\n    };\n  }\n\n  const variant = keyVariant[0];\n  const key = keyVariant.slice(1, 4);\n\n  return {\n    key,\n    className: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'deterministic',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'unrelated',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'unclear',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'opposite',\n    }[variant],\n    text: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'very',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'not',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'maybe',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'very not',\n    }[variant],\n  };\n});\n\nexport const filterMessage = (message: string[], showUnclear: boolean, showUnrelated: boolean) => {\n  return message.filter((keyVariant) => {\n    if (!showUnclear && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNCLEAR)) {\n      return false;\n    }\n\n    if (!showUnrelated && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNRELATED)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\nexport const sortItemsIds = (itemsIds: string[]) => {\n  return orderBy(itemsIds, (id) => Number(id));\n};\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","label","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","value","onChange","options","placeholder","style","minWidth","disabled","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","size","FilterCheckBox","e","target","FilterSegments","block","option","title","icon","DataLoadingWrapper","tip","message","description","type","showIcon","Sprite","id","source","padding","getUrl","useBaseUrl","useQuery","queryKey","queryFn","async","response","fetch","text","enabled","paddedWidth","height","display","placeItems","svgContent","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","WarehouseGood","itemId","str","match","numId","parseInt","goodId","sourceId","Math","ceil","getSource","AlienSign","Emoji","emojiId","startsWith","memoize","glyphId","Glyph","Item","library","baseUrl","process","folder","Error","path","join","SEARCH_THRESHOLD","RESOURCE_NAMES","ADJECTIVES","ALIEN_ITEMS","ARTE_RUIM_CARDS","ARTE_RUIM_GROUPS","ARTE_RUIM_PAIRS","CATEGORIES","CHALLENGES","CHARACTERS","CHOICES","CONCEPTS","CONTENDERS","CRIME_EVIDENCE","CRIME_TILES","CRIME_WEAPONS","DATING_CANDIDATE","DATING_CANDIDATE_BODIES","DATING_CANDIDATE_HEADS","DIAGRAM_TOPICS","DILEMMAS","DRAWING_WORDS","GROUP_QUESTIONS","ITEMS_ATTRIBUTES","MONSTER_ORIENTATION","MOVIE_REVIEWS","MOVIES","NAMING_PROMPTS","OBJECT_FEATURES","QUANTITATIVE_QUESTIONS","SCENARIOS","SPECTRUMS","SINGLE_WORDS","SPY_LOCATIONS","SPY_QUESTIONS","SUSPECTS","TESTIMONY_QUESTIONS","THEME_WORDS","THING_PROMPTS","THINGS_QUALITIES","TOPICS","TREE_WORDS","TWEETS","DUAL_LANGUAGE_RESOURCES","LANGUAGES","DEFAULT_LANGUAGE","SEARCH_PROPERTY","adjectives","categories","challenges","characters","contenders","spectrums","topics","SPRITE_LIBRARY","keyBy","key","name","prefix","quantity","startAt","component","TAGS_SELECTOR_OPTIONS","SAMPLE_SIZE_OPTIONS","CARD_SIZE_OPTIONS","ATTRIBUTE_VALUE","OPPOSITE","UNRELATED","UNCLEAR","RELATED","DETERMINISTIC","ATTRIBUTE_VALUE_PREFIX","invert","ATTRIBUTE_GROUP_VALUES","Object","keys","toLowerCase","capitalize","stringRemoveAccents","normalize","replace","checkForDuplicates","property","unique","duplicates","values","forEach","console","entryKey","undefined","push","findSimilar","similar","trim","length","val","JSON","stringify","entryStr","includes","stringSimilarity","removeDuplicates","arr","Array","from","Set","obj","filename","blob","Blob","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","sortJsonKeys","sortKeys","isObject","isArray","sortedKeys","filter","concat","sort","chain","toPairs","sortBy","_","indexOf","fromPairs","deserializeFirebaseData","reduce","acc","parse","serializeFirebaseData","getCurrentDateTime","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getNewItem","partialItem","cloneDeep","merge","en","pt","groups","attributes","getNewItemAttributeValues","partialItemAttributeValues","getItemAttributePriorityResponse","itemAttributesValues","itemAttributes","onlyRelevant","priorityOrder","orderBy","attribute","sortAttributesByPriority","attributeKeys","opposite","deterministic","related","unrelated","unclear","entries","attributeId","parseAttribute","keyVariant","variant","slice","filterMessage","showUnclear","showUnrelated","sortItemsIds","itemsIds","Number"],"sourceRoot":""}