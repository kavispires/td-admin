{"version":3,"file":"static/js/ItemsDiscSets.e7a41d43.chunk.js","mappings":"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","sources":["components/DataLoadingWrapper.tsx","components/Sprites/Sprite.tsx","components/Sprites/AlienSign.tsx","components/Sprites/Emoji.tsx","components/Sprites/Glyph.tsx","components/Sprites/Item.tsx","hooks/useBaseUrl.ts","hooks/useCopyToClipboardFunction.ts","hooks/useQueryParams.ts","hooks/useTDResource.ts","hooks/useTablePagination.tsx","components/Items/ItemSetsTable.tsx","pages/Items/ItemsDiscSets.tsx","utils/constants.ts","utils/index.ts","../node_modules/copy-to-clipboard/index.js","../node_modules/react-use/esm/useSetState.js","../node_modules/react-use/esm/useCopyToClipboard.js","../node_modules/react-use/esm/useMountedState.js","../node_modules/string-similarity/src/index.js"],"sourcesContent":["import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  isIdle?: boolean;\n  isLoading: boolean;\n  error?: ResponseError;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({\n  isLoading,\n  isIdle,\n  error,\n  hasResponseData,\n  children,\n}: DataLoadingWrapperProps) {\n  if (!isIdle && isLoading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" showIcon />\n      </Layout.Content>\n    );\n  }\n\n  if (isIdle || hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const { getUrl } = useBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${getUrl('sprites')}/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype AlienSignProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function AlienSign({ id, width = 75, className = '' }: AlienSignProps) {\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={id} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype EmojiProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function Emoji({ id, width, className }: EmojiProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\ntype GlyphProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n});\n\n/**\n * A glyph card component.\n */\nexport function Glyph({ id, width, className }: GlyphProps) {\n  const [source, glyphId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\nexport type ItemProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function Item({ id, width, className, title }: ItemProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div\n      className={clsx('sprite', className)}\n      style={{ width: `${width ?? 75}px`, height: `${width ?? 75}px` }}\n    >\n      <Sprite source={source} id={itemId} width={width} title={title} />\n    </div>\n  );\n}\n","/**\n * Returns the base url for the given library and path\n * @param library\n * @param path\n * @returns\n */\nexport function useBaseUrl(library: 'tdr' | 'tdi' | 'tdi-data') {\n  let baseUrl: string | undefined = '';\n  let folder: string | undefined = '';\n\n  switch (library) {\n    case 'tdi':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_IMAGES;\n      break;\n    case 'tdi-data':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_DATA;\n      break;\n    default:\n      baseUrl =\n        process.env.NODE_ENV === 'development'\n          ? process.env.REACT_APP_LOCAL_URL\n          : process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TD_RESOURCES;\n  }\n\n  return {\n    baseUrl,\n    getUrl: (path: string) => [baseUrl, folder, path].join('/'),\n  };\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('tdr');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('tdr');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { TableProps } from 'antd';\nimport { useQueryParams } from './useQueryParams';\n\n/**\n * Options for configuring table pagination.\n */\ntype UseTablePaginationOptions = {\n  /**\n   * Only necessary if multiple tables are on the same page.\n   */\n  prefix?: string;\n\n  /**\n   * The default current page number.\n   */\n  defaultCurrent?: number;\n\n  /**\n   * The default number of items per page.\n   */\n  defaultPageSize?: number;\n\n  /**\n   * An array of available page size options.\n   */\n  pageSizeOptions?: number[];\n\n  /**\n   * The total number of items in the table.\n   */\n  total: number;\n\n  /**\n   * Whether to show the quick jumper input.\n   */\n  showQuickJumper?: boolean;\n};\n\nexport function useTablePagination({\n  prefix = '',\n  defaultCurrent = 1,\n  defaultPageSize = 10,\n  pageSizeOptions = [10, 20, 50, 100],\n  total,\n  showQuickJumper,\n}: UseTablePaginationOptions): TableProps['pagination'] {\n  const { queryParams, addParam } = useQueryParams();\n  const currentPage = Number(queryParams.get(`${prefix}page`) ?? String(defaultCurrent));\n  const pageSize = Number(queryParams.get(`${prefix}pageSize`) ?? String(defaultPageSize));\n\n  const onChange = (page: number) => {\n    addParam(`${prefix}page`, page.toString(), String(defaultCurrent));\n  };\n  const onShowSizeChange = (_: number, size: number) => {\n    addParam(`${prefix}pageSize`, size.toString(), String(defaultPageSize));\n  };\n\n  return {\n    current: currentPage,\n    pageSize,\n    onChange,\n    onShowSizeChange,\n    defaultCurrent,\n    defaultPageSize,\n    pageSizeOptions,\n    total,\n    hideOnSinglePage: true,\n    showQuickJumper,\n  };\n}\n","import { Flex, Space, Table, Typography } from 'antd';\nimport { Item } from 'components/Sprites';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { fromPairs, isEqual, orderBy, range, sampleSize } from 'lodash';\nimport { DailyDiscSet } from 'types';\nimport { removeDuplicates, sortItemsIds } from 'utils';\nimport { LETTERS } from 'utils/constants';\n\nimport type { TableProps } from 'antd';\nimport { useTablePagination } from 'hooks/useTablePagination';\n\nfunction orderSets(givenSets: DailyDiscSet[]) {\n  return orderBy(givenSets, [\n    (s) => removeDuplicates(s.itemsIds).filter(Boolean).length > 20,\n    (s) => s.title.pt,\n  ]).map((s) => ({\n    ...s,\n    itemsIds: orderBy(s.itemsIds, (id) => Number(id)),\n  }));\n}\n\nexport function ItemsSetsTable() {\n  const { data } = useTDResource<DailyDiscSet>('daily-disc-sets');\n  const sets = data ? orderSets(Object.values(data)) : [];\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  const paginationProps = useTablePagination({ total: sets.length, showQuickJumper: true });\n\n  const columns: TableProps<DailyDiscSet>['columns'] = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      key: 'title',\n      render: (title) => <span>{title.pt}</span>,\n    },\n    {\n      title: 'Items',\n      dataIndex: 'itemsIds',\n      key: 'itemsIds',\n      render: (itemsIds: string[], record) => (\n        <Flex gap={6} wrap=\"wrap\" key={`items-${record.title.en}`}>\n          {sortItemsIds(itemsIds).map((itemId) => (\n            <Flex key={`${record.title.en}-${itemId}`} gap={2} vertical>\n              <Item id={itemId} width={60} />\n              <Flex justify=\"center\">\n                <Typography.Text onClick={() => copyToClipboard(itemId)}>{itemId}</Typography.Text>\n              </Flex>\n            </Flex>\n          ))}\n        </Flex>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'itemsIds',\n      key: 'count',\n      render: (itemsIds: string[]) => removeDuplicates(itemsIds).filter(Boolean).length,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\">\n      <Table columns={columns} dataSource={sets} pagination={paginationProps} />\n    </Space>\n  );\n}\n\nfunction generateUniqueArrays(sets: Dictionary<DailyDiscSet>, N: number): string[][] {\n  const result: number[][] = [];\n  const nsfwIds = [\n    '239',\n    '331',\n    '256',\n    '383',\n    '420',\n    '433',\n    '584',\n    '683',\n    '769',\n    '1122',\n    '1174',\n    '1188',\n    '1316',\n    '1320',\n    '1388',\n    '1396',\n    '1480',\n    '1549',\n    '1550',\n    '1591',\n    '1677',\n    '1778',\n    '1790',\n    '1792',\n    '1820',\n  ];\n  let previouslyUsedIds: BooleanDictionary = {\n    ...fromPairs(nsfwIds.map((key) => [key, true])),\n  };\n  Object.values(sets).forEach((set) => set.itemsIds.forEach((id) => (previouslyUsedIds[id] = true)));\n\n  let availableRange = range(1, 1858).filter((n) => !previouslyUsedIds[n] && !nsfwIds.includes(String(n)));\n  while (result.length < N) {\n    const randomNumbers = sampleSize(availableRange, 21);\n    if (!result.some((arr) => isEqual(arr, randomNumbers))) {\n      previouslyUsedIds = { ...previouslyUsedIds, ...fromPairs(randomNumbers.map((key) => [key, true])) };\n      availableRange = availableRange.filter((n) => !randomNumbers.includes(n));\n      result.push([0, ...randomNumbers]);\n    }\n  }\n\n  return result.map((arr) => orderBy(arr.map(String), (id) => Number(id)));\n}\n\nexport function generateMiscSets(sets: Dictionary<DailyDiscSet>) {\n  const newSets = generateUniqueArrays(sets, LETTERS.length).map((items, i) => ({\n    title: {\n      pt: `Diversos ${LETTERS[i]}`,\n      en: `Misc ${LETTERS[i]}`,\n    },\n    itemsIds: items,\n  }));\n\n  console.log(JSON.stringify(newSets));\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsSetsTable } from 'components/Items/ItemSetsTable';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { DailyDiscSet } from 'types';\n\nexport function ItemsDiscSets() {\n  const { isLoading, error, hasResponseData } = useTDResource<DailyDiscSet>('daily-disc-sets');\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Disc Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <>-</>\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            <ItemsSetsTable />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiscSets;\n","import { AlienSign, Emoji, Glyph } from 'components/Sprites';\nimport { capitalize, invert, keyBy } from 'lodash';\n\nexport const SEARCH_THRESHOLD: number = 2;\n\nexport const RESOURCE_NAMES = {\n  ADJECTIVES: 'adjectives',\n  ALIEN_ITEMS: 'alien-items',\n  ARTE_RUIM_CARDS: 'arte-ruim-cards',\n  ARTE_RUIM_GROUPS: 'arte-ruim-groups',\n  ARTE_RUIM_PAIRS: 'arte-ruim-pairs',\n  CATEGORIES: 'categories',\n  CHALLENGES: 'challenges',\n  CHARACTERS: 'characters',\n  CHOICES: 'choices',\n  CONCEPTS: 'concepts',\n  CONTENDERS: 'contenders',\n  CRIME_EVIDENCE: 'crime-evidence',\n  CRIME_TILES: 'crime-tiles',\n  CRIME_WEAPONS: 'crime-weapons',\n  DATING_CANDIDATE: 'dating-candidate',\n  DATING_CANDIDATE_BODIES: 'dating-candidate-bodies',\n  DATING_CANDIDATE_HEADS: 'dating-candidate-heads',\n  DIAGRAM_TOPICS: 'diagram-topics',\n  DILEMMAS: 'dilemmas',\n  DRAWING_WORDS: 'drawing-words',\n  GROUP_QUESTIONS: 'group-questions',\n  ITEMS_ATTRIBUTES: 'items-attributes',\n  MONSTER_ORIENTATION: 'monster-orientation',\n  MOVIE_REVIEWS: 'movie-reviews',\n  MOVIES: 'movies',\n  NAMING_PROMPTS: 'naming-prompts',\n  OBJECT_FEATURES: 'object-features',\n  QUANTITATIVE_QUESTIONS: 'quantitative-questions',\n  SCENARIOS: 'scenarios',\n  SPECTRUMS: 'spectrums',\n  SINGLE_WORDS: 'single-words',\n  SPY_LOCATIONS: 'spy-locations',\n  SPY_QUESTIONS: 'spy-questions',\n  SUSPECTS: 'suspects',\n  TESTIMONY_QUESTIONS: 'testimony-questions',\n  THEME_WORDS: 'theme-words',\n  THING_PROMPTS: 'thing-prompts',\n  THINGS_QUALITIES: 'things-qualities',\n  TOPICS: 'topics',\n  TREE_WORDS: 'tree-words',\n  TWEETS: 'tweets',\n};\n\nexport const DUAL_LANGUAGE_RESOURCES = [\n  RESOURCE_NAMES.ALIEN_ITEMS,\n  RESOURCE_NAMES.CONTENDERS,\n  RESOURCE_NAMES.CRIME_EVIDENCE,\n  RESOURCE_NAMES.CRIME_TILES,\n  RESOURCE_NAMES.CRIME_WEAPONS,\n  RESOURCE_NAMES.DATING_CANDIDATE_BODIES,\n  RESOURCE_NAMES.DATING_CANDIDATE_HEADS,\n  RESOURCE_NAMES.ITEMS_ATTRIBUTES,\n  RESOURCE_NAMES.MONSTER_ORIENTATION,\n  RESOURCE_NAMES.OBJECT_FEATURES,\n  RESOURCE_NAMES.SUSPECTS,\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n\nexport const SEARCH_PROPERTY: Record<string, string> = {\n  adjectives: 'text',\n  'arte-ruim-cards': 'text',\n  'arte-ruim-groups': 'theme',\n  'arte-ruim-pairs': 'values',\n  categories: 'text',\n  challenges: 'text',\n  characters: 'text',\n  contenders: '',\n  'crime-tiles': '',\n  'diagram-topics': 'text',\n  'galeria-de-sonhos': 'text',\n  'group-questions': 'text',\n  'linhas-cruzadas': 'text',\n  'naming-prompts': 'text',\n  spectrums: '',\n  'single-words': 'text',\n  'spy-locations': '',\n  'spy-questions': '',\n  'testimony-questions': 'question',\n  'thing-prompts': 'text',\n  topics: 'text',\n};\n\nexport const TOTAL_ITEMS = 1418;\n\nexport const SPRITE_LIBRARY = keyBy(\n  [\n    {\n      key: 'alien-signs',\n      name: 'Alien Signs',\n      prefix: 'sign',\n      quantity: 38,\n      startAt: 0,\n      component: AlienSign,\n    },\n    {\n      key: 'emojis',\n      name: 'Emojis',\n      prefix: 'emoji',\n      quantity: 30,\n      startAt: 1,\n      component: Emoji,\n    },\n    {\n      key: 'glyphs',\n      name: 'Glyphs',\n      prefix: 'glyph',\n      quantity: 365,\n      startAt: 1,\n      component: Glyph,\n    },\n  ],\n  'key'\n);\n\n/**\n * Options for the sample size selector\n */\nexport const TAGS_SELECTOR_OPTIONS = [\n  { label: 'Any', value: '' },\n  { label: '= 0', value: 0 },\n  { label: '< 3', value: 3 },\n  { label: '< 5', value: 5 },\n  { label: '< 10', value: 10 },\n];\n\n/**\n * Options for the sample size selector\n */\nexport const SAMPLE_SIZE_OPTIONS = [\n  {\n    label: '9',\n    value: 9,\n  },\n  {\n    label: '15',\n    value: 15,\n  },\n  {\n    label: '30',\n    value: 30,\n  },\n  {\n    label: '50',\n    value: 50,\n  },\n  {\n    label: '100',\n    value: 100,\n  },\n];\n\n/**\n * Options for the card size selector\n */\nexport const CARD_SIZE_OPTIONS = [\n  {\n    label: 'Small',\n    value: 100,\n  },\n  {\n    label: 'Medium',\n    value: 150,\n  },\n  {\n    label: 'Large',\n    value: 200,\n  },\n  {\n    label: 'X-Large',\n    value: 250,\n  },\n];\n\nexport const ATTRIBUTE_VALUE = {\n  OPPOSITE: -10,\n  UNRELATED: -3,\n  UNCLEAR: -1,\n  RELATED: 5,\n  DETERMINISTIC: 10,\n};\n\nexport const VALUE_ATTRIBUTE = invert(ATTRIBUTE_VALUE);\n\nexport const ATTRIBUTE_VALUE_PREFIX = {\n  OPPOSITE: '^',\n  UNRELATED: '!',\n  UNCLEAR: '~',\n  RELATED: '+',\n  DETERMINISTIC: '*',\n};\n\nexport const ATTRIBUTE_GROUP_VALUES = Object.keys(ATTRIBUTE_VALUE).map((key) => ({\n  value: key.toLowerCase(),\n  label: capitalize(key),\n}));\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n","import { chain, cloneDeep, isObject, memoize, merge, orderBy } from 'lodash';\nimport { ATTRIBUTE_VALUE, ATTRIBUTE_VALUE_PREFIX, SEARCH_THRESHOLD } from './constants';\nimport stringSimilarity from 'string-similarity';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\n\n/**\n *\n * @param str\n * @returns\n */\nexport function stringRemoveAccents(str: string) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n *\n * @param data\n * @param property\n * @returns\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n *\n * @param str\n * @param data\n * @param property\n * @returns\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const val = typeof entry[property] === 'string' ? entry[property] : JSON.stringify(entry[property]);\n    const entryStr = stringRemoveAccents(val.toLowerCase());\n\n    if (entryStr.includes(value) || stringSimilarity.compareTwoStrings(str, entryStr) > 0.5) {\n      similar[entry.id] = val;\n    }\n  });\n\n  return similar;\n};\n\nexport const findBestMatch = (str: string, list: string[]) => {};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n\n/**\n * Remove duplicated elements from a list\n * @param arr\n * @returns\n */\nexport const removeDuplicates = <T>(arr: T[]): T[] => {\n  return Array.from(new Set(arr));\n};\n\n/**\n * Converts a object into a downloadable file and prompts download\n * @param obj\n * @param filename\n */\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\n/**\n * Sorts the keys of a JSON object based on a predefined order.\n * The keys 'id', 'name', 'title', and 'type' will be placed first in the sorted object,\n * followed by the remaining keys in alphabetical order.\n *\n * @param library - The JSON object to sort.\n * @returns The sorted JSON object.\n */\nexport const sortJsonKeys = (library: PlainObject): PlainObject => {\n  function sortKeys(obj: any): any {\n    if (isObject(obj) && !Array.isArray(obj)) {\n      const sortedKeys = Object.keys(obj)\n        .filter((key) => ['id', 'name', 'title', 'type'].includes(key))\n        .concat(\n          Object.keys(obj)\n            .filter((key) => !['id', 'name', 'title', 'type'].includes(key))\n            .sort()\n        );\n\n      return chain(obj)\n        .toPairs()\n        .sortBy(([key, _]) => sortedKeys.indexOf(key))\n        .map(([key, value]) => [key, sortKeys(value)])\n        .fromPairs()\n        .value();\n    }\n    return obj;\n  }\n\n  return sortKeys(library);\n};\n\n/**\n * Deserializes the data received from Firebase into a dictionary of specified type.\n *\n * @template TData - The type of data to deserialize.\n * @param data - The data to be deserialized.\n * @returns A dictionary of deserialized data.\n */\nexport const deserializeFirebaseData = <TData>(data: Dictionary<string>): Dictionary<TData> => {\n  return Object.keys(data).reduce((acc: Dictionary<TData>, key) => {\n    acc[key] = JSON.parse(data[key]);\n    return acc;\n  }, {});\n};\n\n/**\n * Serializes the data in a dictionary to a dictionary of strings.\n *\n * @param data - The dictionary containing the data to be serialized.\n * @returns A new dictionary with the same keys as the input dictionary, but with the values serialized as strings.\n */\nexport const serializeFirebaseData = <TData>(data: Dictionary<TData>): Dictionary<string> => {\n  return Object.keys(data).reduce((acc: Dictionary<string>, key) => {\n    acc[key] = JSON.stringify(data[key]);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentDateTime = (): string => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const day = String(now.getDate()).padStart(2, '0');\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\n\n/**\n * Creates a new item with default values and merges it with the provided partial item.\n *\n * @param partialItem - The partial item to merge with the default values.\n * @returns The new item with merged values.\n */\nexport const getNewItem = (partialItem: Partial<Item> = {}): Item => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        name: { en: '', pt: '' },\n        groups: [],\n        attributes: {},\n      },\n      partialItem\n    )\n  );\n};\n\n/**\n * Creates a new `ItemAtributesValues` object by merging the provided `partialItemAttributeValues`\n * with a default object that has an empty `id` and an empty `attributes` object.\n *\n * @param partialItemAttributeValues - The partial item attribute values to merge.\n * @returns The new `ItemAtributesValues` object.\n */\nexport const getNewItemAttributeValues = (\n  partialItemAttributeValues: Partial<ItemAtributesValues> = {}\n): ItemAtributesValues => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        attributes: {},\n      },\n      partialItemAttributeValues\n    )\n  );\n};\n\nexport const getItemAttributePriorityResponse = (\n  itemAttributesValues: ItemAtributesValues,\n  itemAttributes: Dictionary<ItemAttribute>,\n  /**\n   * Ignore attributes that are UNRELATED or UNCLEAR\n   */\n  onlyRelevant?: boolean\n) => {\n  const priorityOrder: string[] = orderBy(\n    Object.values(itemAttributes),\n    ['priority', 'id'],\n    ['asc', 'asc']\n  ).map((attribute) => attribute.id);\n\n  function sortAttributesByPriority(attributeKeys: string[], prefix: string) {\n    return orderBy(attributeKeys, (key) => priorityOrder.indexOf(key), ['asc']).map(\n      (key) => `${prefix}${key}`\n    );\n  }\n\n  let opposite: string[] = [];\n  let deterministic: string[] = [];\n  let related: string[] = [];\n  let unrelated: string[] = [];\n  let unclear: string[] = [];\n\n  Object.entries(itemAttributesValues.attributes).forEach(([attributeId, value]) => {\n    const attribute = itemAttributes[attributeId];\n    if (!attribute) return;\n\n    switch (value) {\n      case ATTRIBUTE_VALUE.OPPOSITE:\n        opposite.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.DETERMINISTIC:\n        deterministic.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.RELATED:\n        related.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNRELATED:\n        unrelated.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNCLEAR:\n      default:\n        unclear.push(attributeId);\n        break;\n    }\n  });\n\n  return [\n    ...sortAttributesByPriority(opposite, ATTRIBUTE_VALUE_PREFIX.OPPOSITE),\n    ...sortAttributesByPriority(deterministic, ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC),\n    ...sortAttributesByPriority(related, ATTRIBUTE_VALUE_PREFIX.RELATED),\n\n    ...(onlyRelevant ? [] : sortAttributesByPriority(unrelated, ATTRIBUTE_VALUE_PREFIX.UNRELATED)),\n    ...(onlyRelevant ? [] : sortAttributesByPriority(unclear, ATTRIBUTE_VALUE_PREFIX.UNCLEAR)),\n  ];\n};\nexport const parseAttribute = memoize((keyVariant: string) => {\n  if (keyVariant.length === 3) {\n    return {\n      key: keyVariant,\n      className: '',\n      text: '',\n    };\n  }\n\n  const variant = keyVariant[0];\n  const key = keyVariant.slice(1, 4);\n\n  return {\n    key,\n    className: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'deterministic',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'unrelated',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'unclear',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'opposite',\n    }[variant],\n    text: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'very',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'not',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'maybe',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'very not',\n    }[variant],\n  };\n});\n\nexport const filterMessage = (message: string[], showUnclear: boolean, showUnrelated: boolean) => {\n  return message.filter((keyVariant) => {\n    if (!showUnclear && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNCLEAR)) {\n      return false;\n    }\n\n    if (!showUnrelated && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNRELATED)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\nexport const sortItemsIds = (itemsIds: string[]) => {\n  return orderBy(itemsIds, (id) => Number(id));\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n","import writeText from 'copy-to-clipboard';\nimport { useCallback } from 'react';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\nvar useCopyToClipboard = function () {\n    var isMounted = useMountedState();\n    var _a = useSetState({\n        value: undefined,\n        error: undefined,\n        noUserInteraction: true,\n    }), state = _a[0], setState = _a[1];\n    var copyToClipboard = useCallback(function (value) {\n        if (!isMounted()) {\n            return;\n        }\n        var noUserInteraction;\n        var normalizedValue;\n        try {\n            // only strings and numbers casted to strings can be copied to clipboard\n            if (typeof value !== 'string' && typeof value !== 'number') {\n                var error = new Error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            // empty strings are also considered invalid\n            else if (value === '') {\n                var error = new Error(\"Cannot copy empty string to clipboard.\");\n                if (process.env.NODE_ENV === 'development')\n                    console.error(error);\n                setState({\n                    value: value,\n                    error: error,\n                    noUserInteraction: true,\n                });\n                return;\n            }\n            normalizedValue = value.toString();\n            noUserInteraction = writeText(normalizedValue);\n            setState({\n                value: normalizedValue,\n                error: undefined,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n        catch (error) {\n            setState({\n                value: normalizedValue,\n                error: error,\n                noUserInteraction: noUserInteraction,\n            });\n        }\n    }, []);\n    return [state, copyToClipboard];\n};\nexport default useCopyToClipboard;\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useMountedState() {\n    var mountedRef = useRef(false);\n    var get = useCallback(function () { return mountedRef.current; }, []);\n    useEffect(function () {\n        mountedRef.current = true;\n        return function () {\n            mountedRef.current = false;\n        };\n    }, []);\n    return get;\n}\n","module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n"],"names":["DataLoadingWrapper","isLoading","isIdle","error","hasResponseData","children","tip","className","message","description","type","showIcon","Sprite","id","source","width","padding","title","getUrl","useBaseUrl","data","isError","useQuery","queryKey","queryFn","async","response","fetch","text","enabled","paddedWidth","style","height","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","AlienSign","clsx","Emoji","emojiId","startsWith","getSource","memoize","str","match","numId","parseInt","glyphId","sourceId","Math","ceil","Glyph","itemId","Item","library","baseUrl","folder","process","path","join","useCopyToClipboardFunction","state","copyToClipboard","useCopyToClipboard","App","useEffect","value","length","info","truncate","omission","success","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","Object","entries","forEach","removeParam","is","get","has","queryParams","useTDResource","resourceName","query","res","json","isEmpty","useTDResourceNonCollection","useTablePagination","prefix","defaultCurrent","defaultPageSize","pageSizeOptions","total","showQuickJumper","current","Number","pageSize","onChange","page","toString","onShowSizeChange","_","size","hideOnSinglePage","ItemsSetsTable","sets","givenSets","values","orderBy","s","removeDuplicates","itemsIds","filter","Boolean","pt","map","paginationProps","columns","dataIndex","render","record","gap","wrap","sortItemsIds","vertical","justify","onClick","en","direction","dataSource","pagination","ItemsDiscSets","subtitle","hasSider","PageSider","SEARCH_THRESHOLD","RESOURCE_NAMES","ADJECTIVES","ALIEN_ITEMS","ARTE_RUIM_CARDS","ARTE_RUIM_GROUPS","ARTE_RUIM_PAIRS","CATEGORIES","CHALLENGES","CHARACTERS","CHOICES","CONCEPTS","CONTENDERS","CRIME_EVIDENCE","CRIME_TILES","CRIME_WEAPONS","DATING_CANDIDATE","DATING_CANDIDATE_BODIES","DATING_CANDIDATE_HEADS","DIAGRAM_TOPICS","DILEMMAS","DRAWING_WORDS","GROUP_QUESTIONS","ITEMS_ATTRIBUTES","MONSTER_ORIENTATION","MOVIE_REVIEWS","MOVIES","NAMING_PROMPTS","OBJECT_FEATURES","QUANTITATIVE_QUESTIONS","SCENARIOS","SPECTRUMS","SINGLE_WORDS","SPY_LOCATIONS","SPY_QUESTIONS","SUSPECTS","TESTIMONY_QUESTIONS","THEME_WORDS","THING_PROMPTS","THINGS_QUALITIES","TOPICS","TREE_WORDS","TWEETS","DUAL_LANGUAGE_RESOURCES","LANGUAGES","DEFAULT_LANGUAGE","SEARCH_PROPERTY","adjectives","categories","challenges","characters","contenders","spectrums","topics","SPRITE_LIBRARY","keyBy","name","quantity","startAt","component","TAGS_SELECTOR_OPTIONS","label","SAMPLE_SIZE_OPTIONS","CARD_SIZE_OPTIONS","ATTRIBUTE_VALUE","OPPOSITE","UNRELATED","UNCLEAR","RELATED","DETERMINISTIC","ATTRIBUTE_VALUE_PREFIX","invert","ATTRIBUTE_GROUP_VALUES","keys","toLowerCase","capitalize","stringRemoveAccents","normalize","replace","checkForDuplicates","property","unique","duplicates","entry","console","entryKey","push","findSimilar","similar","trim","val","JSON","stringify","entryStr","includes","stringSimilarity","arr","Array","from","Set","downloadObjectAsFile","obj","filename","blob","Blob","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","sortJsonKeys","sortKeys","isObject","isArray","sortedKeys","concat","sort","chain","toPairs","sortBy","indexOf","fromPairs","deserializeFirebaseData","reduce","acc","parse","serializeFirebaseData","getCurrentDateTime","now","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getNewItem","partialItem","cloneDeep","merge","groups","attributes","getNewItemAttributeValues","partialItemAttributeValues","getItemAttributePriorityResponse","itemAttributesValues","itemAttributes","onlyRelevant","priorityOrder","attribute","sortAttributesByPriority","attributeKeys","opposite","deterministic","related","unrelated","unclear","attributeId","parseAttribute","keyVariant","variant","slice","filterMessage","showUnclear","showUnrelated","deselectCurrent","require","clipboardToIE11Formatting","module","exports","options","debug","reselectPrevious","range","selection","mark","createRange","getSelection","textContent","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","warn","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","test","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","initialState","_a","useState","useCallback","patch","prevState","assign","Function","isMounted","mountedRef","useRef","useMountedState","useSetState","noUserInteraction","setState","normalizedValue","writeText","compareTwoStrings","first","second","firstBigrams","Map","i","bigram","substring","count","intersectionSize","findBestMatch","mainString","targetStrings","find","areArgsValid","ratings","bestMatchIndex","currentTargetString","currentRating","target","rating","bestMatch"],"sourceRoot":""}