{"version":3,"file":"static/js/ItemsDiagramSets.bc2b2709.chunk.js","mappings":"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","sources":["components/Common/SaveButton.tsx","components/Daily/utils/utils.ts","hooks/useGetFirebaseDoc.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","components/Items/Diagram/ItemsDiagramFilters.tsx","components/Items/Diagram/utils.ts","components/Items/Diagram/EditThingModal.tsx","components/Items/Diagram/AddNewThingFlow.tsx","components/Daily/utils/games/daily-teoria-de-conjuntos.ts","components/Items/Diagram/Thing.tsx","components/Items/Diagram/DiagramGameSample.tsx","components/Items/Diagram/RulesByThing.tsx","components/Items/Diagram/ThingsByRule.tsx","components/Items/Diagram/ItemUpdateGuard.tsx","components/Items/Diagram/GameSimulator.tsx","components/Items/Diagram/ItemsDiagramSetsContent.tsx","pages/Items/ItemsDiagramSets.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]);\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { sample } from 'lodash';\nimport moment from 'moment';\n\n/**\n * Returns the current date in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The current date in 'YYYY-MM-DD' format.\n */\nexport function getToday(): string {\n  return moment().format('YYYY-MM-DD');\n}\n\n/**\n * Returns the date of yesterday in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The date of yesterday in 'YYYY-MM-DD' format.\n */\nexport function getYesterday(): string {\n  return moment().subtract(1, 'days').format('YYYY-MM-DD');\n}\n\n/**\n * Calculates the next day based on the given date string.\n *\n * @param dateString - The date string in the format 'YYYY-MM-DD'.\n * @returns The next day in the format 'YYYY-MM-DD'.\n */\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n\n/**\n * Checks if a given date is a Saturday.\n *\n * @param {string} dateString - The date in 'YYYY-MM-DD' format.\n * @returns {boolean} True if the date is a Saturday, false otherwise.\n */\nexport function checkSaturday(dateString: string): boolean {\n  const date = moment(dateString, 'YYYY-MM-DD');\n  return date.day() === 6; // 6 represents Saturday in moment.js\n}\n\nconst THRESHOLD = 500;\nexport function getWordsWithUniqueLetters(words: string[]): string[] {\n  const selectedWords: string[] = [];\n  const usedLetters: BooleanDictionary = {};\n  let tries = 0;\n\n  while (selectedWords.length < 4 && tries < THRESHOLD) {\n    const word = sample(words) ?? '';\n    const splitWord = word.split('');\n    const isGood = splitWord.every((letter) => !usedLetters[letter]);\n    if (isGood) {\n      selectedWords.push(word);\n      splitWord.forEach((letter) => {\n        usedLetters[letter] = true;\n      });\n    } else {\n      tries++;\n    }\n  }\n  if (tries > THRESHOLD || selectedWords.length < 4) {\n    console.count('Could not find 4 words with unique letters');\n    while (selectedWords.length < 4) {\n      const word = sample(words) ?? '';\n      if (!selectedWords.includes(word)) {\n        selectedWords.push(word);\n      }\n    }\n  }\n\n  if (selectedWords.length < 4) {\n    console.error('Could not find 4 words with unique letters', selectedWords);\n  }\n\n  return selectedWords;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { ClusterOutlined, TableOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterSegments } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { cloneDeep } from 'lodash';\nimport { DailyDiagramItem } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nexport function ItemsDiagramFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n  entriesToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const { addParams, queryParams } = useQueryParams();\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(entriesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"daily-diagram-items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'rule'}\n        onChange={(mode) => addParams({ display: mode, page: 1 }, { page: 1 })}\n        options={[\n          {\n            title: 'By Rule',\n            icon: <ClusterOutlined />,\n            value: 'rule',\n          },\n          {\n            title: 'By Thing',\n            icon: <TableOutlined />,\n            value: 'thing',\n          },\n        ]}\n      />\n\n      <Divider />\n\n      <Button size=\"small\" block onClick={() => addParams({ display: 'simulator' })}>\n        Simulator\n      </Button>\n\n      <Typography.Paragraph type=\"secondary\" className=\"my-6\">\n        v2.0.1\n      </Typography.Paragraph>\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(diagramItems: Dictionary<DailyDiagramItem>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(diagramItems);\n  // Object.values(copy).forEach((item) => {\n  //   item.syllables = (item.syllables ?? '').replace(/·/g, SYLLABLE_SEPARATOR);\n  // });\n  // console.log(copy);\n\n  return sortJsonKeys(copy);\n}\n","import { memoize } from 'lodash';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { stringRemoveAccents } from 'utils';\n\nexport const SYLLABLE_SEPARATOR = '|';\nexport const LETTERS = 'abcdefghijklmnopqrstuvwxyz';\nexport const CONSONANTS = 'bcdfghjklmnpqrstvwxyz';\nexport const VOWELS = 'aeiou';\nexport const ACCENTS = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n\nconst cleanupWord = memoize((word: string) => {\n  return stringRemoveAccents(word).toLowerCase();\n});\n\nconst countLetters = (word: string) => {\n  return cleanupWord(word).length;\n};\n\nconst countVowels = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => VOWELS.includes(letter)).length;\n};\n\nconst countConsonants = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => CONSONANTS.includes(letter)).length;\n};\n\nconst countAccents = (word: string) => {\n  return word\n    .toLowerCase()\n    .split('')\n    .filter((letter) => ACCENTS.test(letter)).length;\n};\n\nconst countWords = (text: string) => {\n  return text.split(' ').length;\n};\n\nexport const verifiers: Record<string, (word: string) => boolean> = {\n  // The first two letters are in alphabetical order\n  'ddr-7-pt': (word: string) => {\n    return LETTERS.indexOf(cleanupWord(word)[0]) < LETTERS.indexOf(cleanupWord(word)[1]);\n  },\n  // has 4 or less letters\n  'ddr-8-pt': (word: string) => countLetters(word) <= 4,\n  // Has exactly 5 letters\n  'ddr-9-pt': (word: string) => countLetters(word) === 5,\n  // Has 6 letters\n  'ddr-10-pt': (word: string) => countLetters(word) === 6,\n  // Has between 7\n  'ddr-11-pt': (word: string) => countLetters(word) === 7,\n  // Has more than 8 letters\n  'ddr-12-pt': (word: string) => countLetters(word) > 7,\n  // Has more than 1 word\n  'ddr-13-pt': (word: string) => countWords(word) > 1,\n  // Has two or more different vowels\n  'ddr-14-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size >= 2;\n  },\n  // Has 4 or less unique letters\n  'ddr-15-pt': (word: string) => new Set(cleanupWord(word).split('')).size <= 4,\n  // Has more consonants than vowels\n  'ddr-16-pt': (word: string) => countConsonants(word) > countVowels(word),\n  // Has more vowels than consonants\n  'ddr-17-pt': (word: string) => countVowels(word) > countConsonants(word),\n  // The first letter is repeated at least once\n  'ddr-18-pt': (word: string) => {\n    const firstLetter = cleanupWord(word)[0];\n    return cleanupWord(word).slice(1).includes(firstLetter);\n  },\n  // has repeated letters\n  'ddr-19-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) =>\n        cleanupWord(word)\n          .slice(index + 1)\n          .includes(letter)\n      );\n  },\n  // has repeated vowels\n  'ddr-20-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          VOWELS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has repeated consonants\n  'ddr-21-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          CONSONANTS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has consecutive vowels\n  'ddr-22-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => VOWELS.includes(letter) && VOWELS.includes(word[index + 1]));\n  },\n  // starts with letters from A to M\n  'ddr-23-pt': (word: string) => 'abcdefghijklm'.includes(cleanupWord(word)[0]),\n  // starts with letters from N to Z\n  'ddr-24-pt': (word: string) => 'nopqrstuvwxyz'.includes(cleanupWord(word)[0]),\n  // starts with a vowel\n  'ddr-25-pt': (word: string) => VOWELS.includes(cleanupWord(word)[0]),\n  // starts with a consonant\n  'ddr-26-pt': (word: string) => CONSONANTS.includes(cleanupWord(word)[0]),\n  // Double consecutive consonants\n  'ddr-27-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => CONSONANTS.includes(letter) && word[index + 1] === letter);\n  },\n  // Has an A\n  'ddr-28-pt': (word: string) => cleanupWord(word).includes('a'),\n  // Has an E\n  'ddr-29-pt': (word: string) => cleanupWord(word).includes('e'),\n  // Has an U\n  'ddr-30-pt': (word: string) => cleanupWord(word).includes('u'),\n  // Has a Q or J\n  'ddr-31-pt': (word: string) => cleanupWord(word).includes('q') || cleanupWord(word).includes('j'),\n  // Has a C or Ç\n  'ddr-32-pt': (word: string) => cleanupWord(word).includes('c') || cleanupWord(word).includes('ç'),\n  // Has an M or N followed by a consonant\n  'ddr-33-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (['m', 'n'].includes(letter) && CONSONANTS.includes(word[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has an H\n  'ddr-34-pt': (word: string) => cleanupWord(word).includes('h'),\n  // Has H preceded by a consonant\n  'ddr-35-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (letter === 'h' && CONSONANTS.includes(word[index - 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has K, W or Y\n  'ddr-36-pt': (word: string) =>\n    cleanupWord(word).includes('k') || cleanupWord(word).includes('w') || cleanupWord(word).includes('y'),\n  // Has an accent\n  'ddr-37-pt': (word: string) => countAccents(word) > 0,\n  // Ends with a vowel\n  'ddr-38-pt': (word: string) => {\n    return VOWELS.includes(cleanupWord(word).slice(-1));\n  },\n  // Ends with a consonant\n  'ddr-39-pt': (word: string) => CONSONANTS.includes(cleanupWord(word).slice(-1)),\n  // Ends with an S\n  'ddr-40-pt': (word: string) => cleanupWord(word).slice(-1) === 's',\n  // Has an I\n  'ddr-47-pt': (word: string) => cleanupWord(word).includes('i'),\n  // Has an O\n  'ddr-48-pt': (word: string) => cleanupWord(word).includes('o'),\n};\n\nexport const syllableDependencyVerifier: Record<string, (syllables: string) => boolean> = {\n  // Has 2 syllables\n  'ddr-3-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 2,\n  // Has 3 syllables\n  'ddr-4-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 3,\n  // Has 4 syllables\n  'ddr-22-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 4,\n  // Has two consecutive vowels on the same syllable\n  'ddr-41-pt': (syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable) => {\n      return syllable.split('').some((letter, index) => {\n        if (VOWELS.includes(letter) && VOWELS.includes(syllable[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n    });\n  },\n  // Has two consecutive vowels on different syllables\n  'ddr-42-pt': (syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable, index) => {\n      if (index === 0) {\n        return false;\n      }\n      return syllable[0] === syllables.split(SYLLABLE_SEPARATOR)[index - 1].slice(-1);\n    });\n  },\n  // Single syllable word\n  'ddr-46-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 1,\n};\n\nexport const stressSyllableDependencyVerifier: Record<\n  string,\n  (syllables: string, stress: number) => boolean\n> = {\n  // The stress syllable is on the last syllable (oxitona)\n  'ddr-43-pt': (_syllables: string, stress: number) => {\n    return stress === 0;\n  },\n  // The stress syllable is on the second to last syllable (paroxitona)\n  'ddr-44-pt': (_syllables: string, stress: number) => {\n    return stress === 1;\n  },\n  // The stress syllable is on the third to last syllable (proparoxitona)\n  'ddr-45-pt': (_syllables: string, stress: number) => {\n    return stress === 2;\n  },\n};\n\nexport const getLatestRuleUpdate = (rules: Dictionary<DailyDiagramRule>) => {\n  return Object.values(rules).reduce((acc, rule) => {\n    return Math.max(acc, rule.updatedAt);\n  }, 0);\n};\n\nexport const getIsThingOutdated = (thing: DailyDiagramItem, latestRuleUpdate: number) => {\n  return latestRuleUpdate > thing.updatedAt;\n};\n","import { Affix, Button, Flex, Form, Input, Modal, Radio, Switch } from 'antd';\nimport { useEffect, useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport {\n  CONSONANTS,\n  stressSyllableDependencyVerifier,\n  SYLLABLE_SEPARATOR,\n  syllableDependencyVerifier,\n  verifiers,\n  VOWELS,\n} from './utils';\nimport { Item } from 'components/Sprites';\nimport { orderBy } from 'lodash';\nimport clsx from 'clsx';\nimport { stringRemoveAccents } from 'utils';\n\nexport type ThingFormValues = Record<string, boolean | string | number>;\n\ntype EditThingModalProps = {\n  isModalOpen: boolean;\n  onSaveThing: (item: DailyDiagramItem) => void;\n  onCancel: () => void;\n  thing: DailyDiagramItem;\n  rules: Dictionary<DailyDiagramRule>;\n  width?: number;\n  itemAliases?: string[];\n  subtitle?: string;\n  okButtonText?: string;\n};\n\nexport function EditThingModal({\n  isModalOpen,\n  onSaveThing,\n  onCancel,\n  thing,\n  rules,\n  width,\n  itemAliases,\n  subtitle,\n  okButtonText,\n}: EditThingModalProps) {\n  // Sort rules properly by type\n  const orderedRules = useMemo(() => {\n    return orderBy(Object.values(rules), [\n      // Not auto\n      (r) => {\n        const index = ['manual', 'dependency', 'auto'].indexOf(r.method);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by type\n      (r) => {\n        const index = ['grammar', 'comparison', 'order', 'count', 'contains', 'ends'].indexOf(r.type);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by partial title\n      (r) => r.title.slice(0, 7),\n      // Sort by id\n      (r) => Number(r.id.split('-')[1]),\n    ]);\n  }, [rules]);\n\n  // Build initial values\n  const [form] = Form.useForm();\n  const values = Form.useWatch([], form);\n  const hasUndefinedValues = !values || Object.values(values ?? {}).some((value) => value === undefined);\n\n  // Automation: If name is changed, recalculates all rules\n  const nameWatch = Form.useWatch('name', form);\n  useEffect(() => {\n    console.log('Name changed', nameWatch);\n    // If initial state where name is still undefined, ignore\n    if (!nameWatch) return;\n\n    if (thing.name && thing.syllables && nameWatch === thing.name) return;\n\n    // If name changes, recalculate all rules\n    const fields: Record<string, boolean | string | number | undefined> = {\n      syllables: guessSyllablesSeparation(nameWatch),\n      stressedSyllable: thing.stressedSyllable ?? nameWatch.includes(' ') ? -1 : 0,\n    };\n    Object.keys(rules).forEach((ruleId) => {\n      if (verifiers[ruleId]) {\n        fields[ruleId] = verifiers[ruleId](nameWatch);\n      } else {\n        fields[ruleId] = thing.rules.length > 0 ? thing.rules.includes(ruleId) : undefined;\n      }\n    });\n    form.setFieldsValue(fields);\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Syllables\n  const syllables = Form.useWatch('syllables', form);\n  useEffect(() => {\n    if (syllables) {\n      const syllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (syllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = syllableDependencyVerifier[ruleId](syllables);\n        }\n        return acc;\n      }, {});\n      form.setFieldsValue({\n        ...syllableRulesUpdate,\n        stressedSyllable:\n          syllables === thing.syllables\n            ? thing.stressedSyllable\n            : thing.stressedSyllable ?? nameWatch.includes(' ')\n              ? -1\n              : undefined,\n      });\n    }\n  }, [syllables]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Stressed syllable\n  const stressedSyllable = Form.useWatch('stressedSyllable', form);\n  useEffect(() => {\n    if (stressedSyllable !== undefined) {\n      const stressSyllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (stressSyllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = stressSyllableDependencyVerifier[ruleId](syllables, stressedSyllable);\n        }\n        return acc;\n      }, {});\n\n      form.setFieldsValue({\n        ...stressSyllableRulesUpdate,\n      });\n    }\n  }, [stressedSyllable]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Male vs Female nouns\n  const rule1 = form.getFieldValue('ddr-1-pt');\n  useEffect(() => {\n    if (rule1 === true) {\n      form.setFieldsValue({ 'ddr-2-pt': false });\n    }\n  }, [rule1]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule2 = form.getFieldValue('ddr-2-pt');\n  useEffect(() => {\n    if (rule2 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n    }\n  }, [rule2]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: syllable count\n  const rule3 = form.getFieldValue('ddr-3-pt');\n  useEffect(() => {\n    if (rule3 === true) {\n      form.setFieldsValue({ 'ddr-4-pt': false });\n    }\n  }, [rule3]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule4 = form.getFieldValue('ddr-4-pt');\n  useEffect(() => {\n    if (rule4 === true) {\n      form.setFieldsValue({ 'ddr-3-pt': false });\n    }\n  }, [rule4]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: has hyphen\n  useEffect(() => {\n    const hasHyphen = nameWatch?.includes('-');\n    if (hasHyphen) {\n      form.setFieldsValue({ 'ddr-5-pt': true });\n    }\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFinish = (values: any) => {\n    const preparedThing = serializeThing(values);\n    onSaveThing(preparedThing);\n  };\n\n  const splitSyllables: string[] = (syllables ?? '').split(SYLLABLE_SEPARATOR);\n\n  return (\n    <Modal\n      width={width}\n      title={\n        <>\n          Edit {thing.name} {subtitle && <small>{subtitle}</small>}\n        </>\n      }\n      open={isModalOpen}\n      onOk={form.submit}\n      onCancel={onCancel}\n      maskClosable={false}\n      okButtonProps={{ disabled: hasUndefinedValues, htmlType: 'submit', size: 'large' }}\n      okText={okButtonText ?? 'Add Item'}\n    >\n      <Form\n        form={form}\n        name={`new-item-${thing.itemId}`}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        initialValues={deserializeThing(thing, rules)}\n        layout=\"vertical\"\n        size=\"small\"\n        labelWrap\n      >\n        <div className=\"diagram-container\">\n          <div>\n            <Item id={thing.itemId} width={50} />\n          </div>\n\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"itemId\" label=\"Item\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Form.Item name=\"syllables\" label=\"Syllables\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"stressedSyllable\" label=\"Stressed Syllable\">\n            <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n              {splitSyllables.map((syllable, index) => (\n                <Radio key={index} value={splitSyllables.length - index - 1}>\n                  {syllable}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item name=\"updatedAt\" label=\"Updated At\">\n            <Input value={new Date(thing.updatedAt).toLocaleString()} readOnly />\n          </Form.Item>\n\n          {itemAliases && <div>Options: {itemAliases?.join(', ')}</div>}\n\n          <div>\n            <Affix offsetTop={50}>\n              <Flex justify=\"center\" align=\"center\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={hasUndefinedValues}>\n                  {okButtonText ?? 'Add Item'}\n                </Button>\n              </Flex>\n            </Affix>\n          </div>\n        </div>\n        <div className=\"diagram-container\">\n          {orderedRules.map((rule) => {\n            if (rule.method === 'auto' && verifiers[rule.id]) {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            if (rule.method === 'dependency') {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item\n                key={rule.id}\n                name={rule.id}\n                label={rule.title}\n                className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n              >\n                <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n                  <Radio value={true}>✅</Radio>\n                  <Radio value={false}>❌</Radio>\n                </Radio.Group>\n              </Form.Item>\n            );\n          })}\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n\nconst deserializeThing = (\n  thing: DailyDiagramItem,\n  rules: Dictionary<DailyDiagramRule>\n): Record<string, boolean | string | number> => {\n  let wasAnyRuleUpdated = false;\n  return {\n    name: thing.name,\n    itemId: thing.itemId,\n    syllables: thing.syllables ?? guessSyllablesSeparation(thing.name),\n    stressedSyllable: thing.stressedSyllable ?? 0,\n\n    ...Object.keys(rules).reduce((acc: Record<string, boolean | undefined>, ruleId) => {\n      // Only re-verify if rule is older than the last update\n      if (thing.updatedAt < rules[ruleId].updatedAt) {\n        if (verifiers[ruleId]) {\n          const reVerify = verifiers[ruleId](thing.name);\n          if (reVerify && thing.rules.includes(ruleId)) {\n            wasAnyRuleUpdated = true;\n          }\n          acc[ruleId] = reVerify;\n        } else {\n          acc[ruleId] = undefined;\n        }\n      } else {\n        acc[ruleId] = thing.rules.includes(ruleId);\n      }\n\n      return acc;\n    }, {}),\n    updatedAt: wasAnyRuleUpdated ? Date.now() : thing.updatedAt,\n  };\n};\n\nconst serializeThing = (values: Record<string, boolean | string | number>): DailyDiagramItem => {\n  const { itemId, name, updatedAt, syllables, stressedSyllable, ...thingRules } = values;\n\n  return {\n    itemId: itemId as string,\n    name: name as string,\n    updatedAt: Date.now(),\n    syllables: syllables as string,\n    stressedSyllable: stressedSyllable as number,\n    rules: Object.keys(thingRules).filter((key) => thingRules[key] === true),\n  };\n};\n\nconst checkIsVowel = (char: string) => VOWELS.includes(stringRemoveAccents(char));\nconst checkIsConsonant = (char: string) => CONSONANTS.includes(stringRemoveAccents(char));\nconst LMNRS = ['s', 'r', 'l', 'm', 'n'];\nconst DOUBLE_LETTERS = [\n  'rr',\n  'ss',\n  'st',\n  'sc',\n  'lm',\n  'ld',\n  'mp',\n  'mb',\n  'rn',\n  'rm',\n  'rt',\n  'rd',\n  'lt',\n  'ld',\n  'nt',\n  'nd',\n  'sp',\n  'ls',\n];\nconst guessSyllablesSeparation = (word: string): string => {\n  let syllables: string[] = [];\n  let currentSyllable = '';\n\n  const stringWithoutAccents = stringRemoveAccents(word);\n\n  for (let i = 0; i < word.length; i++) {\n    const char = stringWithoutAccents[i];\n    // Space makes a syllable\n    if (char === ' ') {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n      continue;\n    }\n\n    // Hyphen makes a syllable\n    if (char === '-') {\n      syllables.push(currentSyllable + '-');\n      currentSyllable = '';\n      continue;\n    }\n\n    if (checkIsVowel(char) && i < stringWithoutAccents.length - 2) {\n      const nextChar = stringWithoutAccents[i + 1];\n      const nextNextChar = stringWithoutAccents[i + 2];\n      // If the next character is a consonant and the next next character is a consonant, the first pair is a syllable\n      if (LMNRS.includes(nextChar) && checkIsConsonant(nextNextChar)) {\n        currentSyllable += word[i] + word[i + 1];\n        i++; // Skip the next character\n        continue;\n      }\n    }\n\n    // Handle \"c\" followed by \"h\", \"r\", or \"l\"\n    if (\n      char === 'c' &&\n      i < stringWithoutAccents.length - 2 &&\n      ['h', 'r', 'l'].includes(stringWithoutAccents[i + 1]) &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle \"l\" or \"n\" followed by \"h\"\n    if (\n      ['l', 'n'].includes(char) &&\n      i < stringWithoutAccents.length - 2 &&\n      stringWithoutAccents[i + 1] === 'h' &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle consonant followed by vowel followed by consonant cluster\n    if (\n      checkIsConsonant(char) &&\n      i < stringWithoutAccents.length - 3 &&\n      checkIsVowel(stringWithoutAccents[i + 1]) &&\n      LMNRS.includes(stringWithoutAccents[i + 2]) &&\n      checkIsConsonant(stringWithoutAccents[i + 3])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    currentSyllable += word[i];\n\n    if (\n      checkIsVowel(char) &&\n      i < stringWithoutAccents.length - 1 &&\n      !checkIsVowel(stringWithoutAccents[i + 1]) &&\n      !['l', 'r', 'n'].includes(stringWithoutAccents[i + 1])\n    ) {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n    }\n  }\n\n  if (currentSyllable !== '') {\n    syllables.push(currentSyllable);\n  }\n\n  // As a final effort, if there are syllables with \"rr\" or \"ss\", split them but keep the characters. e.g. carro -> car:ro\n  syllables = syllables.map((syllable) => {\n    for (const doubleLetter of DOUBLE_LETTERS) {\n      if (syllable.includes(doubleLetter)) {\n        return syllable.split(doubleLetter).join(`${doubleLetter[0]}${SYLLABLE_SEPARATOR}${doubleLetter[1]}`);\n      }\n    }\n    return syllable;\n  });\n\n  return syllables.filter(Boolean).join(SYLLABLE_SEPARATOR);\n};\n","import { App, Button } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { sample } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { wait } from 'utils';\nimport { EditThingModal } from './EditThingModal';\n\ntype AddNewThingFlowProps = {\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  width: number;\n};\n\nexport function AddNewThingFlow({ addEntryToUpdate, availableThings, rules, width }: AddNewThingFlowProps) {\n  const { notification } = App.useApp();\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  const onActivateThing = () => {\n    const randomItem = sample(availableThings);\n    if (randomItem) {\n      setActiveThing({\n        itemId: randomItem.id,\n        name: chooseNameThatIsASingleWord(randomItem),\n        updatedAt: Date.now(),\n        syllables: '',\n        stressedSyllable: 0,\n        rules: [],\n      });\n    } else {\n      setActiveThing(null);\n    }\n  };\n\n  const aliases = useMemo(() => {\n    if (!activeThing) return [];\n    const item = availableThings.find((thing) => thing.id === activeThing.itemId);\n    return [item?.name.pt, ...(item?.aliasesPt ?? [])].filter(Boolean);\n  }, [activeThing, availableThings]);\n\n  const onAddItem = async (newThing: DailyDiagramItem) => {\n    if (!activeThing) return;\n    if (!newThing.name || !newThing.itemId) {\n      notification.error({ message: 'Name and Item ID are required' });\n    }\n\n    addEntryToUpdate(newThing.itemId, newThing);\n\n    console.log('COMPLETED SAVE');\n\n    setActiveThing(null);\n\n    await wait(250);\n\n    onActivateThing();\n  };\n\n  return (\n    <>\n      <Button size=\"large\" onClick={onActivateThing}>\n        Classify New Item\n      </Button>\n      {!!activeThing && (\n        <EditThingModal\n          isModalOpen={activeThing !== null}\n          onSaveThing={onAddItem}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          width={width * 0.9}\n          itemAliases={aliases as string[]}\n        />\n      )}\n    </>\n  );\n}\n\nconst chooseNameThatIsASingleWord = (item: ItemT) => {\n  if (item.name.pt.split(' ').length === 1) return item.name.pt;\n\n  if (item.aliasesPt) {\n    return item.aliasesPt.find((alias) => alias.split(' ').length === 1) ?? item.name.pt;\n  }\n  return item.name.pt;\n};\n","import { DailyTeoriaDeConjuntosEntry, ParsedDailyHistoryEntry } from '../types';\nimport { cloneDeep, difference, intersection, sample, sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from '../utils';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { getIsThingOutdated, getLatestRuleUpdate } from 'components/Items/Diagram/utils';\n\nexport const buildDailyTeoriaDeConjuntosGames = (\n  batchSize: number,\n  history: ParsedDailyHistoryEntry,\n  rules: Dictionary<DailyDiagramRule>,\n  things: Dictionary<DailyDiagramItem>\n) => {\n  console.count('Creating Teoria de Conjuntos...');\n  let lastDate = history.latestDate;\n  const used: string[] = [...history.used];\n\n  const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n  const thingsByRules = (() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    Object.values(things).forEach((entry) => {\n      // Only use things that are not outdated\n      if (!getIsThingOutdated(entry, latestRuleUpdate)) {\n        entry.rules.forEach((ruleId) => {\n          dict[ruleId].push(entry.itemId);\n        });\n      }\n    });\n    return dict;\n  })();\n\n  const entries: Dictionary<DailyTeoriaDeConjuntosEntry> = {};\n  for (let i = 0; i < batchSize; i++) {\n    const id = getNextDay(lastDate);\n\n    lastDate = id;\n    entries[id] = {\n      id,\n      type: 'teoria-de-conjuntos',\n      number: history.latestNumber + i + 1,\n      ...getRuleSet(things, thingsByRules, rules, used, latestRuleUpdate),\n    };\n  }\n  return entries;\n};\n\nfunction getRuleSet(\n  things: Dictionary<DailyDiagramItem>,\n  thingsByRules: Record<string, string[]>,\n  rules: Dictionary<DailyDiagramRule>,\n  used: string[],\n  latestRuleUpdate: number\n) {\n  const availableThingsIds = shuffle(\n    Object.keys(things).filter(\n      (id) => !used.includes(id) && !getIsThingOutdated(things[id], latestRuleUpdate)\n    )\n  );\n\n  // Get one random initial thing\n  const initialThingId = sample(availableThingsIds);\n  if (!initialThingId) throw new Error('No available things to choose from');\n  used.push(initialThingId);\n\n  const intersectingThing = {\n    id: initialThingId,\n    name: things[initialThingId].name,\n  };\n\n  // Group rules by type than get a random pair of rules of different types\n  const thingsRulesByType = things[initialThingId].rules.reduce((acc: Record<string, string[]>, ruleId) => {\n    const type = rules[ruleId].type;\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(ruleId);\n    return acc;\n  }, {});\n  // Delete any rule with less than 2 rules\n  Object.keys(thingsRulesByType).forEach((type) => {\n    if (thingsRulesByType[type].length < 2) delete thingsRulesByType[type];\n  });\n\n  const twoRandomTypes = sampleSize(Object.keys(thingsRulesByType), 2);\n\n  if (twoRandomTypes.length !== 2) throw new Error('No types found for this thing');\n  const selectedRules = [\n    sample(thingsRulesByType[twoRandomTypes[0]]),\n    sample(thingsRulesByType[twoRandomTypes[1]]),\n  ];\n  if (!selectedRules[0] || !selectedRules[1]) throw new Error('No rules found for this thing');\n\n  const ruleId = [selectedRules[0], selectedRules[1]].sort().join('-');\n  used.push(ruleId);\n\n  const level = rules[selectedRules[0]].level + rules[selectedRules[1]].level - 1;\n\n  const availableThingsByRules = cloneDeep(thingsByRules);\n  // Removed the initial thing from the available things\n  delete availableThingsByRules[initialThingId];\n\n  const itemsOnlyInRule1 = shuffle(\n    difference(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]])\n  );\n\n  const itemsOnlyInRule2 = shuffle(\n    difference(thingsByRules[selectedRules[1]], thingsByRules[selectedRules[0]])\n  );\n\n  const commonItems = shuffle(intersection(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]]));\n\n  // Get one unique initial thing that only fits rule 1\n  const selectedInitialThingId1 = itemsOnlyInRule1.pop();\n  if (!selectedInitialThingId1) throw new Error('No only in rule 1 things to choose from');\n  const rule1 = {\n    id: selectedRules[0],\n    text: rules[selectedRules[0]].title,\n    level: rules[selectedRules[0]].level,\n    thing: {\n      id: selectedInitialThingId1,\n      name: things[selectedInitialThingId1].name,\n    },\n  };\n\n  // Get one unique initial thing that only fits rule 2\n  const selectedInitialThingId2 = itemsOnlyInRule2.pop();\n  if (!selectedInitialThingId2) throw new Error('No only in rule 2 things to choose from');\n  const rule2 = {\n    id: selectedRules[1],\n    text: rules[selectedRules[1]].title,\n    level: rules[selectedRules[1]].level,\n    thing: {\n      id: selectedInitialThingId2,\n      name: things[selectedInitialThingId2].name,\n    },\n  };\n\n  // Get up to 4 unique things that fit both rules, if possible\n  const sampleCommonThings = sampleSize(commonItems, 4);\n  const sampleRule1Things = sampleSize(itemsOnlyInRule1, 8);\n  const sampleRule2Things = sampleSize(itemsOnlyInRule2, 8);\n  const gabarito: Record<string, number> = {};\n  sampleCommonThings.forEach((id) => (gabarito[id] = 0));\n  sampleRule1Things.forEach((id) => (gabarito[id] = 1));\n  sampleRule2Things.forEach((id) => (gabarito[id] = 2));\n\n  // Sample 8 things among the options\n  const selectionIds = sampleSize([...sampleCommonThings, ...sampleRule1Things, ...sampleRule2Things], 8);\n\n  const selectedThings = selectionIds.map((id) => ({\n    id,\n    name: things[id].name,\n    rule: gabarito[id],\n  }));\n\n  // Build title\n  const TITLES: Record<string, string> = {\n    contains: 'Inclusão',\n    starts: 'Inicialização',\n    ends: 'Terminação',\n    grammar: 'Gramática',\n    order: 'Sequência',\n    count: 'Contagem',\n    comparison: 'Comparação',\n    repetition: 'Repetição',\n  };\n\n  const title = [\n    TITLES?.[rules[rule1.id].type] ?? 'Desconhecido',\n    TITLES?.[rules[rule2.id].type] ?? 'Desconhecido',\n  ].join(' vs ');\n\n  // Create the DailyTeoriaDeConjuntosEntry object\n  const entry: Omit<DailyTeoriaDeConjuntosEntry, 'id' | 'type' | 'number'> = {\n    title,\n    level,\n    rule1,\n    rule2,\n    intersectingThing,\n    things: selectedThings,\n  };\n  return entry;\n}\n","import { Flex, Typography } from 'antd';\nimport { Item } from 'components/Sprites';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n};\n\nexport function Thing({ itemId, name, width = 50 }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\">\n      <Item id={itemId} width={width} />\n      <Typography.Text code key={itemId}>\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n","import { Collapse, Rate, Space, Typography } from 'antd';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { Thing } from './Thing';\nimport { ReactNode, useState } from 'react';\nimport { TransparentButton } from 'components/Common';\n\ntype DiagramGameSampleProps = {\n  game: DailyTeoriaDeConjuntosEntry;\n};\n\ntype TThing = {\n  id: string;\n  name: string;\n  rule: number;\n};\n\nexport function DiagramGameSample({ game }: DiagramGameSampleProps) {\n  const [leftRing, setLeftRing] = useState<TThing[]>([\n    {\n      id: game.rule1.thing.id,\n      name: game.rule1.thing.name,\n      rule: 1,\n    },\n  ]);\n  const [rightRing, setRightRing] = useState<TThing[]>([\n    {\n      id: game.rule2.thing.id,\n      name: game.rule2.thing.name,\n      rule: 2,\n    },\n  ]);\n  const [intersection, setIntersection] = useState<TThing[]>([\n    {\n      id: game.intersectingThing.id,\n      name: game.intersectingThing.name,\n      rule: 0,\n    },\n  ]);\n\n  const [playerOptions, setPlayerOptions] = useState<TThing[]>(game.things.slice(0, 4));\n\n  const [selectedThing, setSelectedThing] = useState<TThing | null>(game.things[0]);\n\n  // const\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Typography.Title level={4}>Game Sample</Typography.Title>\n      <Typography.Title level={5}>\"{game.title}\"</Typography.Title>\n      <Rate value={game.level} count={game.level} disabled />\n      <Typography.Paragraph style={{ maxWidth: '500px' }}>\n        O círculo amarelo tem uma regra gramatical secreta e o circulo vermelho tem outra regra gramatical\n        secreta. O quadrado do meio representa a interseção entre a regra amarela e a regra vermelha.\n      </Typography.Paragraph>\n\n      <Space>\n        <VennDiagram\n          width={600}\n          leftCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {leftRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          rightCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {rightRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          intersectionChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {intersection.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n        />\n      </Space>\n      <Typography.Text>Coloque os objetos nos círculos corretos:</Typography.Text>\n      <Space className=\"space--center\">\n        {playerOptions.map((thing) => (\n          <TransparentButton\n            style={thing.id === selectedThing?.id ? { outline: '3px solid hotPink' } : {}}\n            onClick={() => setSelectedThing(thing)}\n          >\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} />\n          </TransparentButton>\n        ))}\n      </Space>\n\n      <Collapse\n        items={[\n          {\n            key: '1',\n            label: 'Resposta',\n            children: (\n              <Space direction=\"vertical\">\n                <Typography.Text strong>Regra Amarela</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule1.text}</Typography.Text>\n                  </li>\n                </ul>\n\n                <Typography.Text strong>Regra Vermelha</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule2.text}</Typography.Text>\n                  </li>\n                </ul>\n              </Space>\n            ),\n          },\n        ]}\n      />\n\n      <div style={{ height: '200px' }}></div>\n    </Space>\n  );\n}\n\ntype VennDiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nfunction VennDiagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: VennDiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import { Button, Divider, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\n\ntype RulesByThingProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n};\n\nexport function RulesByThing({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: RulesByThingProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>\n        Rules By Items (Added: {Object.keys(things).length} | {availableThings.length})\n      </Typography.Title>\n\n      <AddNewThingFlow\n        addEntryToUpdate={addEntryToUpdate}\n        availableThings={availableThings}\n        rules={rules}\n        width={containerWidth}\n      />\n\n      <Divider />\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} />}\n    </Space>\n  );\n}\n","import { Divider, Rate, Space, Switch, Table, TableColumnsType, Tag, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\n\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { Thing } from './Thing';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\ntype ThingsByRuleProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n};\n\nexport function ThingsByRule({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: ThingsByRuleProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n  const { is, addParam } = useQueryParams();\n\n  const rows = useMemo(\n    () =>\n      Object.values(rules).map((r) => ({\n        ...r,\n        thingsCount: thingsByRules[r.id].length,\n      })),\n    [rules, thingsByRules]\n  );\n\n  const stats = useMemo(() => {\n    const quantities = Object.values(thingsByRules).map((things) => things.length);\n\n    return {\n      maxThings: Math.max(...quantities),\n      minThings: Math.min(...quantities),\n      averageThings: Math.round(\n        Object.values(thingsByRules).reduce((sum, things) => sum + things.length, 0) /\n          Object.keys(thingsByRules).length\n      ),\n    };\n  }, [thingsByRules]);\n\n  const columns: TableColumnsType<DailyDiagramRule & { thingsCount: number }> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => Number(a.id.split('-')[1]) - Number(b.id.split('-')[1]),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Rule',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a, b) => a.title.localeCompare(b.title),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: (a, b) => a.type.localeCompare(b.type),\n    },\n    {\n      title: 'Method',\n      dataIndex: 'method',\n      key: 'method',\n      sorter: (a, b) => a.method.localeCompare(b.method),\n    },\n    {\n      title: 'Things',\n      dataIndex: 'thingsCount',\n      key: 'thingsCount',\n      render: (thingsCount: number, record) => (\n        <Space size=\"small\">\n          <Tag>{thingsCount}</Tag>\n          {is('showThings') ? (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 20).map((itemId) => (\n                <Thing key={`${record.id}-${itemId}`} itemId={itemId} name={things[itemId].name} />\n              ))}\n              {thingsByRules[record.id].length > 20 && (\n                <Typography.Text>+{thingsCount - 20} more</Typography.Text>\n              )}\n            </Space>\n          ) : (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 5).map((itemId) => (\n                <Thing key={`${record.id}-${itemId}`} itemId={itemId} name={things[itemId].name} />\n              ))}\n              {thingsByRules[record.id].length > 5 && (\n                <Typography.Text>+{thingsCount - 5} more</Typography.Text>\n              )}\n            </Space>\n          )}\n        </Space>\n      ),\n      sorter: (a, b) => a.thingsCount - b.thingsCount,\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      sorter: (a, b) => a.level - b.level,\n      render: (level: number) => <Rate value={level} count={3} disabled />,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={4}>\n        Things By Rule (Added: {Object.keys(things).length} | {availableThings.length}){' '}\n      </Typography.Title>\n\n      <Space split={<Divider type=\"vertical\" />} wrap>\n        <AddNewThingFlow\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          width={containerWidth}\n        />\n\n        <Typography.Text strong>\n          Average Things: <Tag>{stats.averageThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Max Things: <Tag>{stats.maxThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Min Things: <Tag>{stats.minThings}</Tag>\n        </Typography.Text>\n\n        <Switch\n          checked={is('showThings')}\n          onChange={(e) => addParam('showThings', e)}\n          checkedChildren=\"Hide things\"\n          unCheckedChildren=\"Show things\"\n        />\n      </Space>\n\n      <Table dataSource={rows} columns={columns} />\n    </Space>\n  );\n}\n","import { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { EditThingModal } from './EditThingModal';\nimport { wait } from 'utils';\nimport { getLatestRuleUpdate, SYLLABLE_SEPARATOR } from './utils';\n\ntype ItemUpdateGuardProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  rules: Dictionary<DailyDiagramRule>;\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  children: ReactNode;\n};\n\nexport function ItemUpdateGuard({ children, things, rules, addEntryToUpdate }: ItemUpdateGuardProps) {\n  // If any rules has been added or updated AFTER the last time the user has updated the item, the user will be warned to update the item\n  const toUpdateThings = useMemo(() => {\n    const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n    return Object.values(things).filter((item) => {\n      const latestThingUpdate = item.updatedAt;\n\n      // Temp until all new fields are in\n      if (!item.syllables || item.stressedSyllable === undefined || item.name.includes(SYLLABLE_SEPARATOR)) {\n        return true;\n      }\n\n      // Prevent updating items that have the syllables field but it's not correct\n      if (item.syllables && item.syllables?.replace(/\\|/g, '') !== item.name.replace(/\\s/g, '')) {\n        return true;\n      }\n\n      // if (item.syllables.endsWith('ie') && item.updatedAt < 1724527674296) {\n      //   return true;\n      // }\n\n      return latestRuleUpdate > latestThingUpdate;\n    });\n  }, [things, rules]);\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  useEffect(() => {\n    const updateThings = async (i: DailyDiagramItem) => {\n      console.log('Found things that need to update...');\n      setActiveThing(null);\n\n      // Await the wait function here\n      await wait(250);\n\n      if (toUpdateThings.length > 0) {\n        setActiveThing(toUpdateThings[0]);\n      }\n    };\n\n    console.count('Checking for things that need to update...');\n    if (toUpdateThings.length > 0) {\n      updateThings(toUpdateThings[0]);\n    }\n  }, [toUpdateThings]);\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <>\n      {activeThing && (\n        <EditThingModal\n          subtitle={`(${toUpdateThings.length} left to update)`}\n          isModalOpen={activeThing !== null}\n          onSaveThing={onUpdateThing}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          okButtonText=\"Update\"\n        />\n      )}\n      <>{children}</>\n    </>\n  );\n}\n","import { Button, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\nimport './GameSimulator.scss';\n\ntype GameSimulatorProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n};\n\nexport function GameSimulator({ things, rules }: GameSimulatorProps) {\n  const [ref] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  const onGenerateDemoGames = () => {\n    let demos: any = null;\n    try {\n      demos = buildDailyTeoriaDeConjuntosGames(\n        25,\n        {\n          latestDate: '2023/01/01',\n          latestNumber: 0,\n          used: [],\n        },\n        rules,\n        things\n      );\n\n      console.log(demos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>Game Simulator</Typography.Title>\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      <Button size=\"large\" onClick={onGenerateDemoGames}>\n        Generate Demos (log)\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} key={JSON.stringify(simulation)} />}\n    </Space>\n  );\n}\n","import { Typography } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\n\nimport { RulesByThing } from './RulesByThing';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ThingsByRule } from './ThingsByRule';\nimport { orderBy } from 'lodash';\nimport { ItemUpdateGuard } from './ItemUpdateGuard';\nimport { GameSimulator } from './GameSimulator';\n\nexport function ItemsDiagramSetsContent({\n  data,\n  addEntryToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const tdrItemsQuery = useTDResource<ItemT>('items');\n  const tdrDiagramRulesQuery = useTDResource<DailyDiagramRule>('daily-diagram-rules');\n\n  const availableThings = useMemo(() => {\n    return Object.values(tdrItemsQuery.data ?? {}).filter((item) => {\n      if (data && data[item.id] !== undefined) return false;\n      if (item.decks?.includes('thing')) return true;\n      const isNameSingleWord = item.name.pt.split(' ').length === 1;\n\n      if (item.decks?.includes('alien') && isNameSingleWord) return true;\n      if (item.decks?.includes('manufactured') && isNameSingleWord) return true;\n\n      return false;\n    });\n  }, [data, tdrItemsQuery.data]);\n\n  const rules = useMemo(() => {\n    return tdrDiagramRulesQuery.data ?? {};\n  }, [tdrDiagramRulesQuery.data]);\n\n  const thingsByRules = useMemo(() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    orderBy(Object.values(data), ['updatedAt'], ['desc']).forEach((entry) => {\n      entry.rules.forEach((ruleId) => {\n        dict[ruleId].push(entry.itemId);\n      });\n    });\n    return dict;\n  }, [data, rules]);\n\n  const { is, queryParams } = useQueryParams();\n\n  if (tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading) {\n    return <Typography.Text>Loading...</Typography.Text>;\n  }\n\n  return (\n    <DataLoadingWrapper\n      isLoading={tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading}\n      hasResponseData={tdrItemsQuery.hasResponseData || tdrDiagramRulesQuery.hasResponseData}\n    >\n      <ItemUpdateGuard things={data} rules={rules} addEntryToUpdate={addEntryToUpdate}>\n        {(is('display', 'rule') || !queryParams.has('display')) && (\n          <ThingsByRule\n            things={data}\n            addEntryToUpdate={addEntryToUpdate}\n            availableThings={availableThings}\n            rules={rules}\n            thingsByRules={thingsByRules}\n          />\n        )}\n\n        {is('display', 'thing') && (\n          <RulesByThing\n            things={data}\n            addEntryToUpdate={addEntryToUpdate}\n            availableThings={availableThings}\n            rules={rules}\n            thingsByRules={thingsByRules}\n          />\n        )}\n\n        {is('display', 'simulator') && (\n          <GameSimulator\n            things={data}\n            addEntryToUpdate={addEntryToUpdate}\n            availableThings={availableThings}\n            rules={rules}\n          />\n        )}\n      </ItemUpdateGuard>\n    </DataLoadingWrapper>\n  );\n}\n","import { Flex, Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsDiagramFilters } from 'components/Items/Diagram/ItemsDiagramFilters';\nimport { ItemsDiagramSetsContent } from 'components/Items/Diagram/ItemsDiagramSetsContent';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyDiagramItem } from 'types';\n\nexport function ItemsDiagramSets() {\n  const diagramData = useResourceFirebaseData<DailyDiagramItem>({\n    tdrResourceName: 'daily-diagram-items',\n    firebaseDataCollectionName: 'diagramItems',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Quartet Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsDiagramFilters {...diagramData} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={diagramData.isLoading || diagramData.isSaving}\n            error={diagramData.error}\n            hasResponseData={!isEmpty(diagramData.data)}\n          >\n            <Flex vertical gap={24}>\n              <ItemsDiagramSetsContent {...diagramData} />\n            </Flex>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiagramSets;\n"],"names":["SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","onClick","disabled","loading","danger","block","getYesterday","subtract","getNextDay","dateString","add","checkSaturday","day","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","data","useGetFirebaseDoc","options","useQuery","queryKey","queryFn","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","value","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","Object","entries","forEach","removeParam","is","get","has","queryParams","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","App","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","success","refetchQueries","onError","error","description","useMemo","isSuccess","isPending","cloneDeep","isEmpty","firebaseData","isLoading","save","mutate","serializeFirebaseData","addEntryToUpdate","id","item","prev","entriesToUpdate","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","hasResponseData","useTDResourceNonCollection","updateQueryFunction","updateDoc","useMutation","mutationFn","ItemsDiagramFilters","vertical","gap","JSON","stringify","DownloadButton","diagramItems","copy","sortJsonKeys","prepareFileForDownload","fileName","label","onChange","mode","display","page","title","ClusterOutlined","TableOutlined","className","SYLLABLE_SEPARATOR","LETTERS","CONSONANTS","VOWELS","ACCENTS","cleanupWord","memoize","word","stringRemoveAccents","toLowerCase","countLetters","length","countVowels","split","filter","letter","includes","countConsonants","verifiers","indexOf","vowels","Set","firstLetter","slice","some","index","test","countAccents","syllableDependencyVerifier","syllables","syllable","stressSyllableDependencyVerifier","_syllables","stress","getLatestRuleUpdate","rules","values","reduce","acc","rule","Math","max","updatedAt","getIsThingOutdated","thing","latestRuleUpdate","EditThingModal","isModalOpen","onSaveThing","onCancel","width","itemAliases","subtitle","okButtonText","orderedRules","orderBy","r","method","Infinity","Number","form","Form","hasUndefinedValues","nameWatch","name","fields","guessSyllablesSeparation","stressedSyllable","keys","ruleId","setFieldsValue","syllableRulesUpdate","stressSyllableRulesUpdate","rule1","getFieldValue","rule2","rule3","rule4","splitSyllables","open","onOk","submit","maskClosable","okButtonProps","htmlType","okText","itemId","onFinish","preparedThing","serializeThing","autoComplete","initialValues","deserializeThing","layout","labelWrap","readOnly","optionType","buttonStyle","map","toLocaleString","join","offsetTop","justify","align","valuePropName","clsx","checkedChildren","unCheckedChildren","wasAnyRuleUpdated","reVerify","thingRules","checkIsVowel","char","checkIsConsonant","LMNRS","DOUBLE_LETTERS","currentSyllable","stringWithoutAccents","i","nextChar","nextNextChar","push","doubleLetter","Boolean","AddNewThingFlow","availableThings","activeThing","setActiveThing","onActivateThing","randomItem","sample","chooseNameThatIsASingleWord","aliases","find","pt","aliasesPt","newThing","wait","alias","buildDailyTeoriaDeConjuntosGames","batchSize","history","things","count","lastDate","latestDate","used","thingsByRules","dict","entry","number","latestNumber","getRuleSet","availableThingsIds","shuffle","initialThingId","Error","intersectingThing","thingsRulesByType","twoRandomTypes","sampleSize","selectedRules","sort","level","itemsOnlyInRule1","difference","itemsOnlyInRule2","commonItems","intersection","selectedInitialThingId1","pop","text","selectedInitialThingId2","sampleCommonThings","sampleRule1Things","sampleRule2Things","gabarito","selectedThings","TITLES","contains","starts","ends","grammar","order","comparison","repetition","Thing","code","DiagramGameSample","game","leftRing","setLeftRing","rightRing","setRightRing","setIntersection","playerOptions","setPlayerOptions","selectedThing","setSelectedThing","direction","style","maxWidth","VennDiagram","leftCircleChildren","height","arr","rightCircleChildren","intersectionChildren","outline","items","children","strong","props","xmlns","viewBox","fill","stroke","strokeMiterlimit","strokeWidth","d","x","y","RulesByThing","ref","containerWidth","useMeasure","simulation","setSimulation","ThingsByRule","rows","thingsCount","stats","quantities","maxThings","minThings","min","averageThings","round","sum","columns","dataIndex","sorter","a","b","render","localeCompare","record","wrap","checked","e","dataSource","ItemUpdateGuard","toUpdateThings","latestThingUpdate","replace","updateThings","GameSimulator","demos","ItemsDiagramSetsContent","tdrItemsQuery","tdrDiagramRulesQuery","decks","isNameSingleWord","DataLoadingWrapper","ItemsDiagramSets","diagramData","hasSider","PageSider"],"sourceRoot":""}