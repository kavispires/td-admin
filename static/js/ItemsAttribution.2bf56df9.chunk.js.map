{"version":3,"file":"static/js/ItemsAttribution.2bf56df9.chunk.js","mappings":"sJAWO,SAASA,EAAT,GAAqF,IAA7D,KAAEC,EAAF,SAAQC,EAAR,QAAkBC,KAAYC,GAA8B,EACzF,OACE,SAAC,KAAD,CACEC,QAAS,KAAMC,EAAAA,EAAAA,IAAqC,oBAATL,EAAsBA,IAASA,EAAMC,GAChFC,QAASA,KACLC,EAHN,0BAQH,C,+CCrBD,SAASG,EAAWH,GAClB,OACE,iBAAKI,MAAM,6BAA6BC,QAAQ,mBAAoBL,EAApE,WACE,iBACEM,KAAK,UACLC,EAAE,8HAEJ,iBACED,KAAK,UACLC,EAAE,mIAEJ,mBAAQC,GAAG,MAAMC,GAAG,QAAQC,EAAE,OAAOJ,KAAK,aAC1C,iBACEA,KAAK,UACLC,EAAE,ktDAIT,CAED,SAASI,EAAiBX,GACxB,OACE,iBAAKI,MAAM,6BAA6BC,QAAQ,oBAAqBL,EAArE,WACE,iBACEM,KAAK,UACLC,EAAE,mJAEJ,iBACED,KAAK,UACLC,EAAE,qFAEJ,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBAAMD,KAAK,UAAUC,EAAE,2BACvB,iBAAMD,KAAK,UAAUC,EAAE,mDACvB,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBACED,KAAK,UACLC,EAAE,sFAEJ,iBAAMD,KAAK,UAAUC,EAAE,yCACvB,iBACED,KAAK,UACLC,EAAE,0IAEJ,iBACED,KAAK,UACLC,EAAE,kiPAIT,CAMM,SAASK,EAAT,GAAkE,IAA5C,SAAEC,KAAab,GAA4B,EACtE,MAAoB,OAAba,GAAoB,SAACV,EAAD,IAAgBH,KAAY,SAACW,EAAD,IAAsBX,GAC9E,C,oFC5BM,SAASc,EAAT,GAAmG,IAAjF,UAAEC,EAAF,OAAaC,EAAb,MAAqBC,EAArB,QAA4BC,EAA5B,QAAqCC,EAArC,gBAA8CC,GAAkC,EACvG,OAAIJ,GAAe,SAAC,IAAD,0BACfD,GAAkB,SAAC,IAAD,CAAKM,MAAM,OAAX,wBAClBJ,GAASE,GAAgB,SAAC,IAAD,CAAKE,MAAM,MAAX,mBACzBH,GAAgB,SAAC,IAAD,CAAKG,MAAM,SAAX,sBAChBD,GAAwB,SAAC,IAAD,CAAKC,MAAM,QAAX,qBACrB,SAAC,IAAD,qBACR,CAEM,SAASC,EAActB,GAC5B,OACE,SAAC,KAAD,WACE,SAAC,SAAD,CAAWuB,MAAM,SAAjB,UACE,SAACT,EAAD,IAAcd,OAIrB,C,0GChCM,SAASwB,EAAT,GAOc,IAPM,QACzBN,EADyB,OAEzBO,EAFyB,SAGzBC,EAHyB,KAIzBC,EAJyB,SAKzBC,EAAW,OACRC,GACe,EAElB,MAAO,CAAEC,EAAQC,IAASC,EAAAA,EAAAA,IAAa,KACjCd,GACFO,GACD,GACAG,GA8BH,OA3BAK,EAAAA,EAAAA,YAAU,KACJf,GACFgB,QAAQC,IAAI,aAAcC,IAAOC,KAAKC,OAAOC,OAAO,wBACpDR,KAEAD,GACD,GACA,CAACZ,EAASa,EAAOD,EAAQH,KAG5BM,EAAAA,EAAAA,YAAU,KACR,MAAMO,EAAsBC,IAC1B,GAAIvB,EAAS,CACX,MAAMwB,EAAU,4DAGhB,OADAD,EAAME,YAAcD,EACbA,CACR,GAKH,OAFAE,OAAOC,iBAAiB,eAAgBL,GAEjC,KACLI,OAAOE,oBAAoB,eAAgBN,EAA3C,CADF,GAGC,CAACtB,KAGF,SAAC,KAAD,CACE6B,KAAK,UACLC,KAAK,QACLC,MAAM,SAAC,IAAD,IACNhD,QAASwB,EACTyB,UAAWhC,EACXnB,QAAS2B,EACTyB,QAAM,EACNC,OAAK,KACDvB,EATN,iBAcH,C,yDCtEM,SAASwB,EAAT,GAAiE,IAA3C,SAAEC,EAAF,MAAYC,KAAUC,GAAoB,EACrE,OACE,SAAC,UAAD,CAAkBD,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAAS,KAAOC,EAAzC,SACGF,GAGN,C,yHCoBM,MAAMG,EAAoB,IAOF,IAPG,SAChCH,EADgC,OAEhCI,GAAS,EAFuB,YAGhCC,EAAc,GAHkB,UAIhCC,EAAY,GAJoB,UAKhCC,EAAY,WACTL,GACyB,EAC5B,OACE,mBACEI,WAAWE,EAAAA,EAAAA,GACT,qBADa,8BAEUD,GACvBH,IAAWC,GAAe,8BAC1BC,MAEEJ,EAPN,SASGF,GAVL,E,0ECvBK,SAASS,EAAT,GAA4F,IAAtE,MAAExC,EAAF,MAASyC,EAAT,SAAgBC,EAAhB,QAA0BC,EAA1B,YAAmCC,GAAkC,EAChG,OACE,SAAC,SAAD,CAAW5C,MAAOA,EAAlB,UACE,UAAC,IAAD,CAAQ6C,MAAO,CAAEC,SAAU,SAAWJ,SAAUA,EAAUD,MAAOA,EAAjE,UACGG,IACC,SAAC,WAAD,CAAeH,MAAO,GAAId,UAAQ,EAAlC,yBAIDgB,EAAQI,KAAKC,GACK,kBAAVA,GACL,SAAC,WAAD,CAA+CP,MAAOO,EAAMP,MAA5D,SACGO,EAAMhD,OADT,UAAuBA,EAAvB,YAAgCgD,EAAMP,SAItC,SAAC,WAAD,CAAyCA,MAAOO,EAAhD,SACGA,GADH,UAAuBhD,EAAvB,YAAgCgD,UAQ3C,CAWM,SAASC,EAAT,GAAgG,IAA1E,MAAEjD,EAAF,MAASyC,EAAT,SAAgBC,EAAhB,IAA0BQ,EAAM,EAAhC,IAAmCC,EAAM,IAAzC,KAA8CC,GAA2B,EACpG,OACE,SAAC,SAAD,CAAWpD,MAAOA,EAAlB,UACE,SAAC,IAAD,CACEkD,IAAKA,EACLC,IAAKA,EACLV,MAAOA,EACPC,SAAWW,GAAMX,EAAQ,OAACW,QAAD,IAACA,EAAAA,EAAKF,GAC/BN,MAAO,CAAEC,SAAU,QAASQ,MAAO,QACnCF,KAAMA,KAIb,CAUM,SAASG,EAAT,GAA2F,IAArE,MAAEvD,EAAF,MAASyC,EAAT,SAAgBC,EAAhB,UAA0BL,EAA1B,SAAqCV,GAA+B,EAC/F,OACE,SAAC,SAAD,CAAW3B,MAAOA,EAAOwD,cAAc,UAAUnB,UAAWA,EAA5D,UACE,SAAC,IAAD,CAAQoB,QAAShB,EAAOC,SAAUA,EAAUjB,KAAK,QAAQE,SAAUA,KAGxE,CAEM,SAAS+B,EAAT,GAA6F,IAArE,MAAE1D,EAAF,MAASyC,EAAT,SAAgBC,EAAhB,SAA0Bf,EAA1B,UAAoCU,GAAgC,EACjG,OACE,SAAC,SAAD,CAAWrC,MAAOA,EAAOwD,cAAc,UAAUnB,UAAWA,EAA5D,UACE,SAAC,IAAD,CAAUoB,QAAShB,EAAOC,SAAWiB,GAAMjB,EAASiB,EAAEC,OAAOH,SAAU9B,SAAUA,KAGtF,CASM,SAASkC,EAAT,GAAmF,IAA3D,MAAEpB,EAAF,MAASzC,EAAT,SAAgB0C,EAAhB,QAA0BC,GAAgC,EACvF,OACE,SAAC,SAAD,CAAW3C,MAAOA,EAAlB,UACE,SAAC,IAAD,CACE6B,OAAK,EACLY,MAAOA,EACPC,SAAUA,EACVC,QAASA,EAAQI,KAAKe,IAAD,CACnB9D,OAAO,SAAC,IAAD,CAAS+D,MAAOD,EAAOC,MAAvB,SAA+BD,EAAOpC,OAC7Ce,MAAOqB,EAAOrB,aAKvB,C,iLCxFM,SAASuB,EAAT,GAIsE,IAJlD,KACzBC,EADyB,MAEzBX,EAFyB,UAGzBjB,GAC0E,EAC1E,OACE,SAAC,KAAD,CAAM6B,GAAID,EAAKC,GAAIZ,MAAOA,EAAOS,MAAK,UAAKE,EAAKE,KAAKC,GAAf,cAAuBH,EAAKE,KAAKE,IAAMhC,UAAWA,GAE3F,CAEM,SAASiC,EAAT,GAA2C,IAA3B,KAAEL,GAAwB,EAC/C,MAAMM,GAAkBC,EAAAA,EAAAA,KACxB,OACE,2BACE,SAAC,IAAD,CACEC,OAAQR,EAAKS,MAAO,SAAC,IAAD,CAAY7B,MAAO,CAAE/C,MAAO,cAAkB,SAAC,IAAD,IAClE8C,YAAY,KACZ+B,QAAQ,aACRlD,KAAK,QACLgB,MAAOwB,EAAKC,GACZU,UAAQ,EACR/B,MAAO,CAAES,MAAO,OAChB5E,QAAS,IAAM6F,EAAgBN,EAAKC,OAI3C,CAEM,SAASW,EAAT,GAAqG,IAAnF,KAAEZ,EAAF,SAAQ3E,GAA0E,EACzG,OACE,SAAC,IAAD,CACEmF,QAAQ,SAAC,IAAD,CAAcnF,SAAUA,EAAUgE,MAAM,QAChDV,YAAW,kBAAatD,EAASwF,eACjCH,QAAQ,aACRlD,KAAK,QACLgB,MAAOwB,EAAKE,KAAK7E,GACjBsF,UAAQ,GAGb,CAEM,SAASG,EAAT,GAA6C,IAA3B,KAAEd,GAAwB,EACjD,OAAOA,EAAKS,MAAO,SAAC,IAAD,CAAY7B,MAAO,CAAE/C,MAAO,cAAkB,uBAClE,CAEM,SAASkF,EAAT,GAA6C,IAA3B,KAAEf,GAAwB,EACjD,MAAO,CAAEgB,IAAmBC,EAAAA,EAAAA,MAK5B,OACE,2BACE,SAAC,KAAD,CAAQzD,KAAK,QAAQ0D,MAAM,QAAQzG,QANxB,KACbuG,EAAgB,CAAEG,OAAQnB,EAAKC,GAAImB,KAAM,cAAzC,EAKE,oBAKL,C,uGCjEM,SAASC,EAAT,GASkB,IATM,MAC7BC,EAD6B,UAE7BC,EAF6B,MAG7B3C,EAH6B,KAI7BpB,EAJ6B,YAK7BmB,EAL6B,WAM7B6C,EAN6B,SAO7BC,KACGzD,GACmB,EACtB,MAAM0D,GAAgBC,EAAAA,EAAAA,GAAoB,SAAUC,QAAQN,KAAWC,IAEjE,UAAEM,EAAF,QAAanD,IAAYoD,EAAAA,EAAAA,UAAQ,KAAO,IAAD,EAC3CpF,QAAQC,IAAI,uCAEZ,MAAMkF,EAAYE,OAAOC,OAAP,iBAAcV,QAAd,IAAcA,EAAAA,EAASI,EAAcrH,YAArC,QAA6C,CAAC,GAAG4H,QACjE,CAACC,EAAyBnD,KACxB,MAAMoD,EAAM,UAAMpD,EAAMmB,KAAKC,GAAjB,aAAwBpB,EAAMkB,GAA9B,KACNmC,EAAM,UAAMrD,EAAMmB,KAAKE,GAAjB,aAAwBrB,EAAMkB,GAA9B,KAeZ,OAdAiC,EAAIC,GAAUpD,EAAMkB,GACpBiC,EAAIE,GAAUrD,EAAMkB,GAEhBlB,EAAMsD,WACRtD,EAAMsD,UAAUC,SAASC,IACvBL,EAAI,GAAD,OAAIK,EAAJ,aAAcxD,EAAMkB,GAApB,OAA8BlB,EAAMkB,EAAvC,IAGAlB,EAAMyD,WACRzD,EAAMyD,UAAUF,SAASC,IACvBL,EAAI,GAAD,OAAIK,EAAJ,aAAcxD,EAAMkB,GAApB,OAA8BlB,EAAMkB,EAAvC,IAIGiC,CAAP,GAEF,CAAC,GAOH,MAAO,CAAEL,YAAWnD,SAJJ+D,EAAAA,EAAAA,SAAQV,OAAOW,KAAKb,GAAY,CAAE3B,GAASA,EAAKyC,gBAAgB7D,KAAKoB,IAAD,CAClF1B,MAAO0B,MAGT,GACC,CAACoB,EAAOC,KAEJqB,EAAiBC,IAAsBC,EAAAA,EAAAA,UAA8B,KACrEC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KAE3CG,EAAAA,EAAAA,IACE,KACMF,GACFG,EAAaH,EACd,GAEH,IACA,CAACA,IAGH,MAAMG,EAAgBC,IACpB,IAAKA,EAEH,YADAN,EAAmB,IAIrB,MAAMO,EAASD,EAAWE,OAAOxC,cAE3ByC,EAAW5E,EAAQ6E,QAAQ1D,IAAD,aAC9B2D,OAAM,iBAAC3D,QAAD,IAACA,OAAD,EAACA,EAAQrB,aAAT,QAAkB,IACrBqC,cACA4C,SAASL,EAHkB,IAM1BM,GAASjB,EAAAA,EAAAA,SAAQa,EAAU,CAC9BzD,IAAY,IAAD,EACV,MAAMrB,EAAQgF,OAAM,iBAAC3D,QAAD,IAACA,OAAD,EAACA,EAAQrB,aAAT,QAAkB,IAAIqC,cAG1C,GAAIrC,IAAU4E,EAAQ,OAAO,EAG7B,MAAMO,EAAUnF,EAAMoF,MAAM,aAC5B,GAAID,GAAWA,EAAQ,KAAOP,EAAQ,OAAO,EAG7C,MAAMS,EAAQrF,EAAMsF,QAAQV,GAC5B,OAAc,IAAVS,EAAoB,EAGpBA,EAAQ,EAAU,EAGf,CAAP,IAIJhB,EAAmBa,EAAnB,EAkBF,OACE,SAAC,IAAD,CACEhF,QAASkE,EACThE,MAAO,CAAES,MAAO,OAAQT,GACxB4C,WAAU,OAAEA,QAAF,IAAEA,GAAAA,EACZ7C,YAAW,OAAEA,QAAF,IAAEA,EAAAA,EAAe,0BAC5BoF,aAAc,CAACC,EAAYnE,KAAb,aAG+B,IAF3C2D,OAAM,iBAAC3D,QAAD,IAACA,OAAD,EAACA,EAAQrB,aAAT,QAAkB,IACrBqC,cACAiD,QAFH,OAEWE,QAFX,IAEWA,OAFX,EAEWA,EAAYnD,cAHX,EAKdoD,SAAUjB,EACVkB,gBAAiBnB,EAAUoB,OAAS,EAAI,iBAAmB,oBAC3DC,SAnBcC,SACOC,IAAnBzC,EAAUwC,IACZ5C,EAASI,EAAUwC,GACpB,KAiBKrG,EAbN,UAeE,SAAC,IAAD,CAAOuG,aA/Bc,KACvB,GAAI3B,EAAgBuB,OAAS,EAAG,CAC9B,MAAME,EAAMzB,EAAgB,GAAGpE,WACR8F,IAAnBzC,EAAUwC,IACZ5C,EAASI,EAAUwC,GAEtB,MA4BJ,C,6EC5IM,SAAS9D,IACd,MAAOiE,EAAOlE,IAAmBmE,EAAAA,EAAAA,MAC3B,QAAEvH,GAAYwH,EAAAA,EAAAA,SAYpB,OAVAjI,EAAAA,EAAAA,YAAU,KACJ+H,EAAMhG,QACJgG,EAAMhG,MAAM2F,OAAS,GACvBjH,EAAQyH,KAAR,gCAAqCC,EAAAA,EAAAA,UAASJ,EAAMhG,MAAO,CAAE2F,OAAQ,GAAIU,SAAU,UAEnF3H,EAAQ4H,QAAQ,UAEnB,GACA,CAACN,EAAOtH,IAEJoD,CACR,C,oECfM,SAASyE,EAAyCC,EAAcC,EAAe5K,GACpFqC,QAAQC,IAAR,qBAA0BqI,EAA1B,YAAkCC,EAAlC,kBAAyD,eACzD,MAAMC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAD,UAAeJ,EAAf,YAAuBC,IACzC,OAAOI,EAAAA,EAAAA,IAAUH,EAAQ7K,EAC1B,CAEM,SAASiL,EACdN,EACAC,GAEC,IADDvG,EACA,uDAD2D,CAAC,EAE5D,OAAO6G,EAAAA,EAAAA,GAAyC,CAC9CC,WAAYC,SAAuBV,EAA2BC,EAAMC,EAAO5K,MACxEqE,GAEN,C,kFClBM,SAASgH,IAAsB,IAAD,EACnC,MAAOC,EAAc3E,IAAmBC,EAAAA,EAAAA,MAYxC,MAAO,CACLG,KAAI,UAAEuE,EAAaC,IAAI,eAAnB,QAA8B,aAClCC,QAAUrH,GAAkBwC,EAAgB,CAAEI,KAAM5C,IACpDsH,cAboB,CAACzB,EAAa7F,KAClCmH,EAAaI,IAAI1B,EAAjB,UAAyB7F,IACzBwC,EAAgB2E,EAAhB,EAYAK,iBATwB3B,IACxBsB,EAAaM,OAAO5B,GACpBrD,EAAgB2E,EAAhB,EAQAA,eAEH,C,yJCPD,MAAMO,EAAkE,CAAC,E,aCczE,MAAMC,GAA8BC,EAAAA,EAAAA,eAA+C,CACjFC,QAAS,KAAMC,EAAAA,EAAAA,MACfC,uBAAwB,KAAMC,EAAAA,EAAAA,MAC9BjL,WAAW,EACXE,MAAO,KACPG,iBAAiB,EACjBF,SAAS,EACT+K,WAAY,OACZC,YAAYJ,EAAAA,EAAAA,MACZK,qBAAqBH,EAAAA,EAAAA,MACrBI,kBAAmB,OACnB1K,UAAU,EACV2K,KAAM,OACNC,eAAgB,GAChBC,iBAAkB,GAClBC,sBAAuB,OACvBC,8BAA+B,OAC/BC,sCAAuC,SACvCC,WAAY,CAAC,EACbC,mBAAoB,CAAC,IAOVC,EAA+B,IAAsD,IAArD,SAAEvJ,GAAkD,EAC/F,MAAM,QACJuI,EADI,uBAEJE,EAFI,iBAGJQ,EAHI,UAIJxL,EAJI,MAKJE,EALI,SAMJS,EANI,KAOJ2K,EAPI,sBAQJG,EARI,QASJtL,EATI,WAUJyL,EAVI,8BAWJF,EAXI,mBAYJG,GDnDG,WAAgC,IAAD,EACpC,MAAM,aAAEE,EAAF,QAAgBpK,GAAYwH,EAAAA,EAAAA,SAC5B6C,GAAcC,EAAAA,EAAAA,MAGd9F,GAAgBC,EAAAA,EAAAA,GAAoB,SACpC8F,GAAqB9F,EAAAA,EAAAA,GAA6B,oBAClD+F,GAAgC/F,EAAAA,EAAAA,GAAmC,0BACnEgG,GAAoCC,EAAAA,EAAAA,GAGxC,MAAO,uBAAwB,CAC/BC,OAAQC,EAAAA,MAGHC,EAAyBC,IAA8BlF,EAAAA,EAAAA,UAA0C,CAAC,GAEnGmF,GAAW3C,EAAAA,EAAAA,GAAqB,MAAO,uBAAwB,CACnE4C,UAAW,KACTZ,EAAaxC,QAAQ,CACnB5H,QAAS,iCAEXqK,EAAYY,eAAe,CACzBC,SAAU,CAAC,WAAY,MAAO,0BAEhCJ,EAA2B,CAAC,EAA5B,EAEFK,QAAU5M,IACR6L,EAAa7L,MAAM,CACjByB,QAAS,qCACToL,YAAa7M,EAAMyB,SAFrB,IAOEqL,GAA4BzG,EAAAA,EAAAA,UAAQ,KAAO,IAAD,IAC9C,MAAO,IACL,UAAI4F,EAA8BrN,YAAlC,QAA0C,CAAC,KAC3C,UAAIsN,EAAkCtN,YAAtC,QAA8C,CAAC,EAFjD,GAIC,CAACqN,EAA8BrN,KAAMsN,EAAkCtN,OAEpEqB,IAAW8M,EAAAA,EAAAA,SAAQT,GAcnBU,EAAed,EAAkCtN,KAwCvD,MAAO,CACL0M,kBAlCuBjF,EAAAA,EAAAA,UAAQ,KAAO,IAAD,EACrC,MAAMR,EAAK,UAAGI,EAAcrH,YAAjB,QAAyB,CAAC,EACrC,OAAOoI,EAAAA,EAAAA,SACLV,OAAOW,KAAKpB,GAAOiC,QAAQtD,IAAQ,IAAD,IAChC,OAAO,oBAACqB,EAAMrB,UAAP,aAAC,EAAWyI,aAAZ,QAAqB,IAAIjF,SAAS,QAAzC,KAEDxD,GAAO0I,OAAO1I,IACf,MALF,GAOC,CAACyB,EAAcrH,OA0BhBgM,QAxBepG,IAAgB,IAAD,IAC9B,2BAAKyB,EAAcrH,YAAnB,QAA2B,CAAC,SAA5B,OAAI,EAA6B4F,GACxByB,EAAcrH,KAAK4F,IAExBA,GACF/C,EAAQyH,KAAR,eAAqB1E,EAArB,+CAEKqG,EAAAA,EAAAA,IAAW,CAAErG,OAApB,EAkBAsG,uBAf8BtG,IAAgB,IAAD,MAC7C,MAAM2I,EAAW,iBAAGL,QAAH,IAAGA,OAAH,EAAGA,EAA4BtI,UAA/B,QAAsC,CAAC,EAClD4I,EAAa,UAAGd,EAAwB9H,UAA3B,QAAkC,CAAC,EAEtD,OAAIuI,EAAAA,EAAAA,SAAQI,KAAgBJ,EAAAA,EAAAA,SAAQK,IAClC3C,EAA+BjG,IAAMuG,EAAAA,EAAAA,IAA0B,CAAEvG,OAC1DiG,EAA+BjG,KAGjC6I,EAAAA,EAAAA,OAAK,iBAAC5C,QAAD,IAACA,OAAD,EAACA,EAAiCjG,UAAlC,QAAyC,CAAC,EAAG2I,EAAaC,EAAtE,EAOA1B,WAAU,UAAEM,EAAmBpN,YAArB,QAA6B,CAAC,EACxCkB,UACEmG,EAAcnG,WACdkM,EAAmBlM,WACnBmM,EAA8BnM,WAC9BoM,EAAkCpM,UACpCE,MACEiG,EAAcjG,OACdgM,EAAmBhM,OACnBiM,EAA8BjM,OAC9BkM,EAAkClM,MACpCgN,eACAvM,SAAU+L,EAAS1G,UACnBsF,KAvDW,KACXoB,EAASc,QAAOC,EAAAA,EAAAA,IAAsB,IAAKP,KAAiBV,IAA5D,EAuDAf,sBAvE4B,CAAC/G,EAAYD,KACzCgI,GAA4BiB,IAAD,IAAgBA,EAAM,CAAChJ,GAAK,IAAKD,EAAMkJ,UAAWrM,KAAKC,UAAlF,EAuEAmK,8BArEqCkC,IACrCnB,GAA4BiB,IAAD,IACtBA,MACAG,EAAAA,EAAAA,SACDD,EAASrK,KAAKkB,IAAD,IAAgBA,EAAMkJ,UAAWrM,KAAKC,UACnD,SAJJ,EAqEAsK,mBAAoBW,EACpBrM,UAEH,CCnEK2N,IACE,QAAEnM,GAAYwH,EAAAA,EAAAA,UAEb4E,EAAWC,IAAgBzG,EAAAA,EAAAA,WAAS0G,EAAAA,EAAAA,QAAO,EAAGzC,EAAiB5C,OAAS,IACzEuC,EAAaL,EAAQU,EAAiBuC,IACtC3C,EAAsBJ,EAAuBG,EAAWzG,IAoCxD6G,GAAiBhF,EAAAA,EAAAA,UAAQ,KAAMW,EAAAA,EAAAA,SAAQV,OAAOC,OAAOmF,GAAa,UAAW,QAAQ,CAACA,IAoC5F,OACE,SAAChB,EAA4BsD,SAA7B,CACEjL,MAAO,CACL6H,UACAE,yBACAQ,mBACAxL,YACAE,QACAG,gBAAiBmL,EAAiB5C,OAAS,KAAMqE,EAAAA,EAAAA,SAAQrB,GACzDzL,UACAiL,sBACAF,WAjFa,CAACiD,EAAmBvI,KAwBrC,GAvBkB,SAAduI,GACFH,GAAcN,IAAUA,EAAO,GAAKlC,EAAiB5C,SAErC,aAAduF,GACFH,GAAcN,IAAUA,EAAO,EAAIlC,EAAiB5C,QAAU4C,EAAiB5C,SAE/D,WAAduF,GACFH,GAAaC,EAAAA,EAAAA,QAAO,EAAGzC,EAAiB5C,OAAS,IAGjC,UAAduF,GACFH,EAAa,GAEG,SAAdG,GACFH,EAAaxC,EAAiB5C,OAAS,GAEvB,WAAduF,GACFH,GAAcN,IAAUA,EAAO,IAAMlC,EAAiB5C,SAEtC,eAAduF,GACFH,GAAcN,IAAUA,EAAO,GAAKlC,EAAiB5C,QAAU4C,EAAiB5C,SAGhE,SAAduF,QAAmCpF,IAAXnD,EAAsB,CAChD,MAAM0C,EAAQkD,EAAiBjD,QAAQ3C,IACxB,IAAX0C,EACF0F,EAAa1F,GAEb3G,EAAQzB,MAAR,eAAsB0F,EAAtB,sCAEH,GAmDGuF,aACAE,kBA/CoB,CAAC+C,EAAqBnL,KAC9CwI,EAAsBN,EAAWzG,GAAI,IAChC0G,EACHQ,WAAY,IACPR,EAAoBQ,WACvB,CAACwC,GAAcnL,IAJnB,EA+CItC,WACA2K,OACAM,aACAL,iBACAE,wBACAC,gCACAC,sCA5CwC,KACrC0C,EAAAA,EAAAA,IACL7C,EAAiB9E,QAAO,CAACC,EAAsCf,KAE7D,MAAMnB,EAAOuG,EAAuBpF,GAEpC,OAAIqH,EAAAA,EAAAA,SAAQxI,EAAKmH,cAKbpF,OAAOW,KAAK1C,EAAKmH,YAAYhD,SAAW2C,EAAe3C,OACzDnE,EAAK6J,UAAW,SAET7J,EAAK6J,SAGd3H,EAAIlC,EAAKC,IAAMD,GAVNkC,CAYT,GACC,CAAC,IAyBFkF,sBApBJ,SAuBGtJ,GAxBL,EA6BWgM,EAAiC,KAAMC,EAAAA,EAAAA,YAAW5D,G,sDCxK/D,MAAM6D,EAAmB,CACvB,CAAEjO,MAAO,WAAYyC,MAAOyL,EAAAA,GAAAA,UAC5B,CAAElO,MAAO,YAAayC,MAAOyL,EAAAA,GAAAA,WAC7B,CAAElO,MAAO,UAAWyC,MAAOyL,EAAAA,GAAAA,SAC3B,CAAElO,MAAO,UAAWyC,MAAOyL,EAAAA,GAAAA,SAC3B,CAAElO,MAAO,gBAAiByC,MAAOyL,EAAAA,GAAAA,gBAG7BC,EAA0B,CAC9B,CAAEnO,MAAO,WAAYyC,MAAOyL,EAAAA,GAAAA,UAC5B,CAAElO,MAAO,YAAayC,MAAOyL,EAAAA,GAAAA,WAC7B,CAAElO,MAAO,UAAWyC,MAAOyL,EAAAA,GAAAA,SAC3B,CAAElO,MAAO,UAAWyC,MAAOyL,EAAAA,GAAAA,SAC3B,CAAElO,MAAO,gBAAiByC,MAAOyL,EAAAA,GAAAA,cAA+BvM,UAAU,IAUrE,SAASyM,EAAT,GAK2B,IALM,UACtCC,EADsC,MAEtC5L,EAFsC,SAGtCC,EAHsC,YAItC4L,GAC+B,EAC/B,OAAKD,EAEDC,GAEA,SAAC,WAAD,CACE3L,QAAS0L,EAAUE,QAAUJ,EAA0BF,EACvDvL,SAAU,QAAGkB,QAAUnB,MAAOY,IAApB,SAA8BX,EAAS2L,EAAUnK,GAAIb,EAArD,EACVZ,MAAOA,EACP+L,WAAW,SACXC,YAAY,WAMhB,iBAAwBpM,UAAU,kCAAlC,WACE,kBAAMA,UAAU,oCAAhB,UACGgM,EAAUlK,KAAKC,GAAI,KACpB,SAAC,IAAD,CAASL,MAAOsK,EAAU9B,YAAYnI,GAAtC,UACE,SAACsK,EAAA,EAAD,UAIJ,SAAC,WAAD,CACE/L,QAAS0L,EAAUE,QAAUJ,EAA0BF,EACvDvL,SAAU,QAAGkB,QAAUnB,MAAOY,IAApB,SAA8BX,EAAS2L,EAAUnK,GAAIb,EAArD,EACVZ,MAAOA,EACP+L,WAAW,SACXC,YAAY,WAGd,2BACE,SAACE,EAAA,EAAD,CAAmB9L,MAAO,CAAE/C,MAAO2C,GAASA,EAAQ,EAAI,QAAU,qBAjB5D4L,EAAUnK,KAfC,uBAoCxB,C,kCC1DM,SAAS0K,EAAT,GAAuG,IAArE,oBAAEhE,EAAF,WAAuBQ,GAA6C,EAC3G,MAAM,aAAExB,EAAF,cAAgBG,GAAkBJ,IAClCkF,EAAkD,SAApCjF,EAAaC,IAAI,eAC/BiF,EAAsD,SAAtClF,EAAaC,IAAI,iBAEjCkF,GAAmBhJ,EAAAA,EAAAA,UACvB,KACEiJ,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAiCrE,EAAqBQ,GACtDyD,EACAC,IAEJ,CAAClE,EAAqBQ,EAAYyD,EAAaC,IAG3CI,EAA0C,SAA9BtF,EAAaC,IAAI,SAAsBsF,EAAkBC,EAE3E,OACE,UAAC,IAAD,CAAMC,IAAK,EAAGC,UAAQ,EAAtB,WACE,SAAC,KAAD,CACEtP,MAAM,iBACNyC,MAA6C,SAAtCmH,EAAaC,IAAI,iBACxBnH,SAAWW,GAAM0G,EAAc,gBAAiB1G,EAAI,OAAS,IAC7DhB,UAAU,oBAEZ,SAAC,KAAD,CACErC,MAAM,eACNyC,MAA2C,SAApCmH,EAAaC,IAAI,eACxBnH,SAAWW,GAAM0G,EAAc,cAAe1G,EAAI,OAAS,IAC3DhB,UAAU,oBAEZ,SAAC,KAAD,CACErC,MAAM,cACNyC,MAAqC,SAA9BmH,EAAaC,IAAI,SACxBnH,SAAWW,GAAM0G,EAAc,QAAS1G,EAAI,OAAS,IACrDhB,UAAU,oBAEZ,SAAC,IAAD,CAAMgN,IAAK,EAAGE,KAAK,OAAOlN,UAAU,iCAApC,SACG0M,EAAiBhM,KAAI,CAACyM,EAAY1H,EAAO2H,KACxC,SAACP,EAAD,CAEEM,WAAYA,EACZpE,WAAYA,EACZsE,aAAwB,IAAV5H,EACd6H,YAAa7H,IAAU2H,EAAIrH,OAAS,GAJ/BoH,SAUhB,CASM,SAASL,EAAT,GAI4C,IAJnB,WAC9BK,EAD8B,WAE9BpE,EAF8B,SAG9BwE,GACgD,EAChD,MAAM,IAAEtH,EAAF,UAAOjG,EAAP,KAAkBwN,IAASC,EAAAA,EAAAA,IAAeN,GAEhD,OACE,UAAC,IAAD,CAAMF,UAAQ,EAACS,MAAM,SAArB,WACE,SAAC,KAAD,CACEzM,MAAO,GACPY,GAAIkH,EAAW9C,GAAK0H,SACpB3N,WAAWE,EAAAA,EAAAA,GAAK,4BAAD,qCAA4DF,MAE5EuN,IACC,UAAC,IAAD,CACEL,KAAK,OACLU,QAAQ,SACRF,MAAM,SACNlN,MAAO,CAAEqN,SAAU,GAAIC,UAAW,SAAUC,UAAW,cAJzD,UAMGP,EANH,IAMUzE,EAAW9C,GAAKnE,KAAKC,GAAGwC,mBAKzC,CAED,SAASwI,EAAT,GAAqG,IAA9E,WAAEI,EAAF,WAAcpE,EAAd,aAA0BsE,EAA1B,YAAwCC,GAAqC,EAClG,MAAM,IAAErH,EAAF,KAAOuH,IAASC,EAAAA,EAAAA,IAAeN,GAE/B/K,EAASiL,EAAe,QAAU,GAClCW,EAASV,EAAc,IAAM,KAEnC,OACE,gCACGlL,EACAoL,EAFH,IAEUzE,EAAW9C,GAAKnE,KAAKC,GAAGwC,cAC/ByJ,IAGN,C,iCC1GM,SAASC,EAAT,GAA+C,IAAjC,MAAEtQ,EAAF,SAAS+B,GAAuB,EACnD,OACE,UAAC,SAAD,WACG/B,EADH,KACU,SAAC,IAAD,UAAM+B,MAGnB,CCFM,SAASwO,EAAT,GAA+F,IAAnE,eAAExF,EAAF,oBAAkBH,GAAgD,EACnG,MAAM,WAAE4F,EAAF,gBAAcC,EAAd,MAA+BhO,EAA/B,WAAsCiO,EAAtC,UAAkDC,IAAc5K,EAAAA,EAAAA,UAAQ,KAC5E,MAAM6K,EAAQ7F,EAAe3C,OACvByI,EAAY7K,OAAOW,KAAKiE,EAAoBQ,YAAYhD,OACxDoI,EAAaM,KAAKC,MAAOF,EAAYD,EAAS,KAEpD,IAAIH,GAAkB,EAClBC,GAAa,EACbM,EAAe,EACnB,MAAMvO,EAAQuD,OAAOC,OAAO2E,EAAoBQ,YAAYlF,QAAO,CAACC,EAAa9C,IAC3EA,GAAK,GACHA,IAAM6K,EAAAA,GAAAA,UACR8C,GAAgB,GAEd3N,IAAM6K,EAAAA,GAAAA,WACRwC,GAAa,EACbvK,GAAO9C,EAAI,GAEN8C,IAEL9C,IAAM6K,EAAAA,GAAAA,gBACRuC,GAAkB,GAGbtK,EAAM9C,IACZ,GAEGsN,EAAYG,KAAKC,OAAQF,EAAYG,GAAgBJ,EAAS,KAEpE,MAAO,CAAEJ,aAAYC,kBAAiBhO,QAAOiO,aAAYC,YAAzD,GACC,CAAC5F,EAAgBH,EAAoBQ,aAExC,OACE,4BACE,SAAC,SAAD,CAAiB6F,QAAM,EAAvB,yBACA,SAAC,IAAD,CAAUC,QAASV,EAAY/O,KAAK,WACpC,SAAC,SAAD,CAAiBwP,QAAM,EAAvB,oBACA,UAAC,IAAD,CAAM3B,UAAQ,EAAd,WACE,SAACgB,EAAD,CAAMtQ,MAAM,gBAAZ,SACGyQ,GACC,SAAC9B,EAAA,EAAD,CAAmB9L,MAAO,CAAE/C,MAAO,YAEnC,SAACqR,EAAA,EAAD,CAAqBtO,MAAO,CAAE/C,MAAO,YAGzC,SAACwQ,EAAD,CAAMtQ,MAAM,WAAZ,SACG0Q,GACC,SAAC/B,EAAA,EAAD,CAAmB9L,MAAO,CAAE/C,MAAO,qBAEnC,SAACqR,EAAA,EAAD,CAAqBtO,MAAO,CAAE/C,MAAO,aAGzC,SAACwQ,EAAD,CAAMtQ,MAAM,QAAZ,SAAqByC,KACrB,UAAC6N,EAAD,CAAMtQ,MAAM,cAAZ,UAA2B2Q,EAA3B,YAIP,C,cC3DM,SAASS,IACd,MAAM,WAAEzG,EAAF,eAAcI,EAAd,oBAA8BH,EAA9B,kBAAmDC,EAAnD,WAAsEH,EAAtE,WAAkFU,GACtF2C,KACI,aAAEnE,EAAF,iBAAgBK,GAAqBN,IACrC0H,EAAoBzH,EAAaC,IAAI,WAE3CnJ,EAAAA,EAAAA,YAAU,KACJ2Q,IACFpH,EAAiB,UACjBS,EAAW,OAAQ2G,GACpB,GACA,CAACA,EAAmB3G,EAAYT,IAEnC,MAAMqH,EAA8C,UAA9B1H,EAAaC,IAAI,SACjC0H,GAAyBxL,EAAAA,EAAAA,UAC7B,IACEuL,EACIvG,EAAevD,QAAQ6G,IAAezD,EAAoBQ,WAAWiD,EAAUnK,MAC/E6G,GACN,CAACuG,EAAe3G,EAAWzG,KAG7B,OAAKyG,GAaH,SAAC,IAAD,WACE,iBAAKtI,UAAU,wBAAf,WACE,SAAC,IAAD,CAAOmP,UAAW,IAAKnP,UAAU,8BAAjC,UACE,UAAC,IAAD,CAAMiN,UAAQ,EAACD,IAAK,EAApB,WACE,SAAC,KAAD,CAAYpL,KAAM0G,EAAYrH,MAAO,OACrC,SAAC,KAAD,CAAQW,KAAM0G,KACd,SAAC,KAAD,CAAU1G,KAAM0G,EAAYrL,SAAS,QACrC,SAAC,KAAD,CAAU2E,KAAM0G,EAAYrL,SAAS,QAErC,SAAC,IAAD,CAAS+C,UAAU,UACnB,SAACkO,EAAD,CAAoBxF,eAAgBA,EAAgBH,oBAAqBA,KACzE,SAAC,IAAD,CAASvI,UAAU,UACnB,SAAC,SAAD,CAAiBb,KAAK,YAAtB,UACE,SAACoN,EAAD,CAA0BhE,oBAAqBA,EAAqBQ,WAAYA,YAKtF,SAAC,IAAD,CAAO3J,KAAK,QAAQkM,UAAU,WAAWtL,UAAU,kCAAkCkN,MAAI,EAAzF,SACGgC,EAAuBxO,KAAI,CAACsL,EAAWvG,KACtC,SAACsG,EAAD,CAEEC,UAAWA,EACX5L,MAAOmI,EAAoBQ,WAAWiD,EAAUnK,IAChDxB,SAAUmI,GAHLwD,EAAUnK,UApBvB,UAA+CyG,EAAWzG,QAZ1D,SAAC,IAAD,WACE,UAAC,SAAD,CAAiB1C,KAAK,YAAtB,8BACoB,KAClB,SAAC,KAAD,CAAQC,KAAK,QAAQD,KAAK,UAAU9C,QAAS,IAAMgM,EAAW,UAA9D,6BAuCT,C,qFC9DM,SAAS+G,KACd,MAAM,WAAE/G,GAAeqD,IACvB,OACE,UAAC,WAAD,CAAc1L,UAAU,OAAxB,WACE,SAAC,KAAD,CAAQ3D,QAAS,IAAMgM,EAAW,SAAUhJ,MAAM,SAACgQ,EAAA,EAAD,IAAlD,oBAGA,SAAC,KAAD,CAAQhT,QAAS,IAAMgM,EAAW,cAAehJ,MAAM,SAACiQ,EAAA,EAAD,IAAvD,0BAGA,SAAC,KAAD,CAAQjT,QAAS,IAAMgM,EAAW,YAAahJ,MAAM,SAACkQ,EAAA,EAAD,IAArD,uBAGA,UAAC,KAAD,CAAQlT,QAAS,IAAMgM,EAAW,QAAlC,mBACO,SAACmH,EAAA,EAAD,QAEP,UAAC,KAAD,CAAQnT,QAAS,IAAMgM,EAAW,UAAlC,sBACU,SAACoH,EAAA,EAAD,QAEV,UAAC,KAAD,CAAQpT,QAAS,IAAMgM,EAAW,QAAlC,mBACO,SAACqH,GAAA,EAAD,QAEP,SAAC,IAAD,CAASC,SAAS,SAACC,GAAD,IAA4BlO,MAAM,QAApD,UACE,SAAC,KAAD,wBAIP,CAED,SAASkO,KACP,MAAM,WAAEvH,GAAeqD,IACvB,OAAO,SAACzI,GAAA,EAAD,CAAgBE,WAAW,EAAOE,SAAWN,GAAWsF,EAAW,OAAQtF,IACnF,C,eCrCM,SAAS8M,KACd,MAAM,QAAE5H,EAAF,uBAAWE,GAA2BuD,KACtC,UAAEoE,EAAF,UAAa9D,EAAb,YAAwB+D,EAAxB,qBAAqCC,GCJtC,WACL,MAAM,eAAEtH,EAAF,iBAAkBC,EAAlB,sBAAoCC,EAApC,uBAA2DT,GAC/DuD,KACI,aAAEnE,GAAiBD,KAElBwI,EAAWG,IAAgBvL,EAAAA,EAAAA,UAAmB,KAC9CsH,EAAWkE,IAAgBxL,EAAAA,EAAAA,YAE5ByL,EAAY,KAAO,IAAD,QACtB,MAAMC,EAAY,oBAAG7I,EAAaC,IAAI,oBAApB,mBAAoC6I,EAAAA,EAAAA,QAAa3H,UAAjD,aAAoC,EAA8B7G,UAAlE,QAAwE,MACpFyO,EAAiB,UACrB5H,EAAe6H,MAAMC,GAAMA,EAAE3O,KAAOuO,WADf,SACgCC,EAAAA,EAAAA,QAAa3H,GAC9D+H,EAAalG,OAAOhD,EAAaC,IAAI,UAAY,EAEjDkJ,EAAqB,GACrBpQ,GAAUqQ,EAAAA,EAAAA,SAAQhI,GAExB,IAAK,IAAIiI,EAAI,EAAGA,EAAItQ,EAAQyF,QACtB2K,EAAS3K,SAAW0K,EADUG,IAAK,CAGvC,MAAM7N,EAASzC,EAAQsQ,GACQzI,EAAuBpF,GAAQgG,WAElCqH,IAC1BM,EAASG,KAAK9N,EAEjB,CAED,MAAO,CACLuN,oBACAI,WAFF,EA+BF,MAAO,CACLZ,YACA9D,YACA+D,YA3BkB,KAClB,IAAIe,EAAaX,IACbY,EAAW,EACf,KAAsC,IAA/BD,EAAWJ,SAAS3K,QAAgBgL,EAAW,IACpDD,EAAaX,IACbY,IAGFb,EAAaY,EAAWR,mBACxBL,EAAaa,EAAWJ,SAAxB,EAmBAV,qBAhB2B,CAACjN,EAAgBwI,EAAqBnL,KACjE,MAAM4Q,EAA6B7I,EAAuBpF,GAE1D6F,EAAsB7F,EAAQ,IACzBiO,EACHjI,WAAY,IACPiI,EAA2BjI,WAC9B,CAACwC,GAAcnL,IAJnB,EAeH,CD7DqE6Q,GAEpE,IAAI7G,EAAAA,EAAAA,SAAQ0F,KAAc1F,EAAAA,EAAAA,SAAQ4B,GAChC,OACE,SAAC,IAAD,CAAMhM,UAAU,OAAhB,UACE,UAAC,SAAD,CAAiBb,KAAK,YAAtB,4DACkD,KAChD,SAAC,KAAD,CAAQC,KAAK,QAAQD,KAAK,UAAU9C,QAAS0T,EAA7C,6BAQR,MAAMmB,EAASpB,EAAUpP,KAAKqC,IAAD,CAC3BoO,eAAgBhJ,EAAuBpF,GACvCnB,KAAMqG,EAAQlF,OAGVqO,EAAaF,EAAO/L,QAAO,QAAC,eAAEgM,GAAH,SAAyBA,EAAepI,WAAWiD,EAAWnK,GAA9D,IAQjC,OACE,SAAC,IAAD,CACE7B,UAAU,OACV0B,OACE,UAAC,SAAD,kBACGsK,QADH,IACGA,OADH,EACGA,EAAWlK,KAAKC,GADnB,aAC0BiK,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAW9B,YAAYnI,MAGnDsP,QAAS,EACP,SAAC,KAAD,CAAQhV,QAfgB,KAC5B+U,EAAWlN,SAAQ,IAAe,IAAd,KAAEtC,GAAW,EAC/BoO,EAAqBpO,EAAKC,GAAImK,EAAWnK,IAAK,EAA9C,GADF,EAc4CtC,QAAM,EAACD,SAAgC,IAAtB8R,EAAWrL,OAApE,qCAGA,SAAC,KAAD,CAAQ5G,KAAK,UAAUmS,OAAK,EAACjV,QAAS0T,EAAtC,6BAIFwB,OACE,SAAC,KAAD,CAAQpS,KAAK,UAAUC,KAAK,QAAQ/C,QAAS0T,EAA7C,4BAhBJ,UAqBE,UAAC,IAAD,CAAM9C,UAAQ,EAACD,IAAK,EAApB,UACqB,IAAlBkE,EAAOnL,SACN,SAAC,KAAD,CACEmE,YAAY,2CACZsH,MAAOC,GAAAA,EAAAA,yBAGVP,EAAOxQ,KAAI,IAA+B,IAA9B,KAAEkB,EAAF,eAAQuP,GAAqB,EACxC,OACE,UAAC,EAAAO,SAAD,YACE,UAAC,IAAD,CAAM1E,IAAK,EAAX,WACE,SAAC,KAAD,CAAYpL,KAAMA,EAAMX,MAAO,MAC/B,UAAC,IAAD,CAAMgM,UAAQ,EAACD,IAAK,EAApB,WACE,UAAC,IAAD,CAAMA,IAAK,EAAX,WACE,SAAC,KAAD,CAAQpL,KAAMA,KACd,SAAC,KAAD,CAAUA,KAAMA,QAElB,SAAC,KAAD,CAAUA,KAAMA,EAAM3E,SAAS,QAC/B,SAAC,KAAD,CAAU2E,KAAMA,EAAM3E,SAAS,WAEjC,SAAC8O,EAAD,CACEC,UAAWA,EACX5L,MAAO+Q,EAAepI,WAAWiD,EAAWnK,IAC5CxB,SAAU,CAACkL,EAAqBnL,IAC9B4P,EAAqBpO,EAAKC,GAAI0J,EAAanL,SAIjD,SAAC,IAAD,CAASJ,UAAU,WAnBrB,UAAkB4B,EAAKC,GAAvB,YAA6BsP,EAAerG,WAD9C,QA2BT,C,gDE3FM,SAAS6G,GAAcvV,GAC5B,MAAOwV,EAAWC,IAAgBnN,EAAAA,EAAAA,WAAkB,GAE9CoN,EAAe,KACnBD,EAAa7S,OAAO+S,YAAc,IAAlC,EAiBF,OAPA1T,EAAAA,EAAAA,YAAU,KACRW,OAAOC,iBAAiB,SAAU6S,GAC3B,KACL9S,OAAOE,oBAAoB,SAAU4S,EAArC,IAED,KAGD,SAAC,KAAD,CACE9R,UAAS,2BAAsB4R,EAAY,UAAY,IACvDvV,QAjBgB,KAClB2C,OAAOgT,SAAS,CACdC,IAAK,EACLC,SAAU,UAFZ,EAiBE7S,MAAM,SAAC8S,GAAA,EAAD,OACF/V,EAJN,sBASH,C,eCzBD,MAAMgW,GAAkB,CAACC,EAA+BC,IACxC,UAAVA,GAAsBA,EAIpB,GAAN,OAAUD,EAAMxD,QAAhB,gBAA+BwD,EAAME,MAArC,UAHQ,GAAN,OAAU,IAAMF,EAAMxD,QAAtB,mBAAwCwD,EAAME,MAA9C,SAMG,SAASC,KACd,MAAM,QAAEvK,EAAF,uBAAWE,EAAX,eAAmCO,GAAmBgD,KAEtD,UAAEM,EAAF,QAAayG,EAAb,qBAAsBzC,EAAtB,2BAA4C0C,EAA5C,WAAwEC,EAAxE,MAAoFN,EAApF,QAA2FO,GCf5F,WAA4B,IAAD,QAChC,MAAM,eACJlK,EADI,sBAEJE,EAFI,uBAGJT,EAHI,iBAIJQ,EAJI,8BAKJE,GACE6C,KACE,aAAEnE,EAAF,cAAgBG,GAAkBJ,IAElC8I,EAAY,UAAG7I,EAAaC,IAAI,oBAApB,QAAoC,MAChD8K,EAAK,UAAG/K,EAAaC,IAAI,gBAApB,QAAgC,QAErCqL,EAAI,UAAGtL,EAAaC,IAAI,eAApB,QAA+B,IACnCsL,EAAQ,UAAGvL,EAAaC,IAAI,mBAApB,QAAmC,MAE1CuL,EAAmBC,IAAwBtO,EAAAA,EAAAA,UAAiB,QAC5DuO,EAAeC,IAAoBxO,EAAAA,EAAAA,UAAiB,UAEpDyO,EAAQC,IAAa1O,EAAAA,EAAAA,UAAwB,OAC7C2O,EAAWC,IAAgB5O,EAAAA,EAAAA,UAAyB,QAErD6N,GAAQ7O,EAAAA,EAAAA,UAAQ,KACpB,MAAM6P,EAAkB5K,EAAiBjI,KAAKmB,GAAOsG,EAAuBtG,KACtE2R,EACM,UAAVlB,OAAoBpM,EAAY2F,EAAAA,GAAgByG,EAAM7P,eAElDgR,EAAkBF,EACrBpO,QAAQvD,IAAD,aAAU,UAAAA,EAAKmH,kBAAL,eAAkBqH,MAAkBoD,CAA9C,IACP9S,KAAKkB,GAASA,EAAKC,KAEtB,OAAOwC,EAAAA,EAAAA,SACLoP,EACA,CACG5R,IAAD,eAASsR,IAAM,UAAGhL,EAAuBtG,UAA1B,iBAAG,EAA4BkH,kBAA/B,aAAG,EAAyCoK,GAA3D,EACCtR,IAAD,uBAAQsG,EAAuBtG,UAA/B,aAAQ,EAA4BiJ,SAApC,EACCjJ,GAAO0I,OAAO1I,IAEjB,CAACwR,EAAW,OAAQ,OAPtB,GASC,CAACjD,EAAckC,EAAOa,EAAQE,IAE3BZ,GAAU/O,EAAAA,EAAAA,UAAQ,KACtB,GAAIqP,IAAsB3C,GAAgB6C,IAAkBX,EAI1D,OAHAU,EAAqB5C,GACrB8C,EAAiBZ,GACjB5K,EAAc,OAAQ,KACf6K,EAAMmB,MAAM,EAAGnJ,OAAOuI,IAG/B,MAAMa,GAASpJ,OAAOsI,GAAQ,GAAKtI,OAAOuI,GACpCc,EAAMD,EAAQpJ,OAAOuI,GAE3B,OAAOP,EAAMmB,MAAMC,EAAOC,EAA1B,GACC,CAACf,EAAMC,EAAUP,IAEdvG,EAAYtD,EAAe6H,MAAMC,GAAMA,EAAE3O,KAAOuO,IA2BtD,MAAO,CACLmC,QACAF,MAAO,CACL9D,MAAO5F,EAAiB5C,OACxBwM,MAAOA,EAAMxM,OACb8I,QAASJ,KAAKoF,MAAOtB,EAAMxM,OAAS4C,EAAiB5C,OAAU,MAEjE0M,UACAzG,YACAgE,qBAlC2B,CAACjN,EAAgBwI,EAAqBnL,KACjE,MAAM4Q,EAA6B7I,EAAuBpF,GAE1D6F,EAAsB7F,EAAQ,IACzBiO,EACHjI,WAAY,IACPiI,EAA2BjI,WAC9B,CAACwC,GAAcnL,IAJnB,EAgCAsS,2BAvBiC,KACjC7J,EACE4J,EAAQ/R,KAAKmB,IACX,MAAMgJ,EAAO1C,EAAuBtG,GAKpC,OAJKgJ,EAAK9B,WAAWqH,KACnBvF,EAAK9B,WAAWqH,GAAgBvE,EAAAA,GAAAA,WAG3BhB,CAAP,IAPJ,EAuBA+H,QAAS,CACPO,SACAC,YACAC,YACAC,gBAEFX,WAAY,CACVpE,MAAOgE,EAAMxM,OACb+N,QAASvJ,OAAOsI,GAChBC,SAAUvI,OAAOuI,GACjBzS,SAAWwS,GAAiBnL,EAAc,OAAQtC,OAAOyN,IACzDkB,iBAAkB,CAACC,EAAWlB,IAAqBpL,EAAc,WAAYtC,OAAO0N,IACpFmB,gBAAiB,CAAC,GAAI,GAAI,GAAI,KAGnC,CD7FGC,IACI,aAAE3M,GAAiBD,IACnB6M,GAAWC,EAAAA,GAAAA,GAAS,uBAE1B,IAAIhK,EAAAA,EAAAA,SAAQ4B,GACV,OACE,SAAC,IAAD,CAAMhM,UAAU,OAAhB,UACE,SAAC,SAAD,CAAiBb,KAAK,YAAtB,qDAKN,MAAMkV,GACJ,SAAC,KAAD,CAEEhU,SAAUsS,EAAWtS,SACrByT,QAASnB,EAAWmB,QACpBvF,MAAOoE,EAAWpE,MAClB0F,gBAAiBtB,EAAWsB,gBAC5BnB,SAAUH,EAAWG,SACrBiB,iBAAkBpB,EAAWoB,kBANzB,cAUFO,GACJ,UAAC,IAAD,CAAM5G,MAAM,SAAZ,WACE,SAAC,SAAD,CAAiB1N,UAAU,OAA3B,sBACA,UAAC,KAAD,CAAQQ,MAAO,CAAES,MAAO,KAAOb,MAAOwS,EAAQO,OAAQ9S,SAAWW,GAAM4R,EAAQQ,UAAUpS,GAAzF,WACE,SAAC,YAAD,CAAeZ,MAAO,KAAtB,0BACCsI,EAAehI,KAAK8P,IACnB,SAAC,YAAD,CAA0BpQ,MAAOoQ,EAAE3O,GAAnC,SACG2O,EAAE1O,KAAKC,IADUyO,EAAE3O,YASxB0S,GAD2C,UAA9BhN,EAAaC,IAAI,WAAyBD,EAAaC,IAAI,YAE5E,SAAC,KAAD,CAEE9F,MAAK,kDAA6CsK,EAAUlK,KAAKC,GAA5D,KACLyS,UAAW9B,EAHb,UAKE,SAAC,KAAD,CAAQvT,KAAK,UAAUI,QAAM,EAACD,SAA6B,IAAnBmT,EAAQ1M,OAAhD,2CAJI,mBAUR,OACE,UAAC,IAAD,CACE/F,UAAU,OACV0B,OACE,UAAC,SAAD,kBACGsK,QADH,IACGA,OADH,EACGA,EAAWlK,KAAKC,GADnB,KACyBqQ,GAAgBC,EAAO9K,EAAaC,IAAI,UADjE,MAC+E,IAC5EwE,EAAU9B,YAAYnI,MAG3BwP,OACE,UAAC,IAAD,CAAM7D,MAAM,SAAZ,UACG4G,EAEAD,KAGLhD,QAAS,CAACkD,GAAgB,SAAC5C,GAAD,GAAmB,aAAgB0C,GAAqBlP,OAAO3B,SAf3F,UAiBsB,IAAnBiP,EAAQ1M,SACP,SAAC,KAAD,CACEmE,YAAY,mDACZsH,MAAOC,GAAAA,EAAAA,yBAGVgB,EAAQ/R,KAAKqC,IACZ,MAAMoO,EAAiBhJ,EAAuBpF,GACxCnB,EAAOqG,EAAQlF,GAErB,OACE,SAAC,SAAD,CAEEvC,MAAO,CAAES,MAAOkT,EAAW,MAAQ,OAFrC,UAIE,UAAC,IAAD,CAAMnH,IAAK,EAAX,WACE,UAAC,IAAD,CAAMC,UAAQ,EAACD,IAAK,EAApB,WACE,SAAC,KAAD,CAAYpL,KAAMA,EAAMX,MAAO,MAC/B,SAAC,KAAD,CAAQW,KAAMA,KACd,SAAC,KAAD,CAAUA,KAAMA,KAChB,SAAC,KAAD,CAAUA,KAAMA,EAAM3E,SAAS,QAC/B,SAAC,KAAD,CAAU2E,KAAMA,EAAM3E,SAAS,WAEjC,SAAC8O,EAAD,CACEC,UAAWA,EACX5L,MAAO+Q,EAAepI,WAAWiD,EAAWnK,IAC5CoK,aAAW,EACX5L,SAAU,CAACkL,EAAqBnL,IAC9B4P,EAAqBpO,EAAKC,GAAI0J,EAAanL,SAjBnD,UACU2C,EADV,YACoBoO,EAAerG,WAFrC,MA2BP,C,cEzHM,SAAS2J,KACd,MAAM,WAAE1L,GAAe2C,KACjB,aAAEgJ,EAAF,SAAgBC,GCIjB,WACL,MAAM,WAAE5L,EAAF,uBAAcZ,EAAd,iBAAsCQ,EAAtC,QAAwDV,EAAxD,UAAiE9K,GACrEuO,KACI,aAAEnE,GAAiBD,IACnBsN,EAAoD,SAArCrN,EAAaC,IAAI,gBAChCgF,EAAkD,SAApCjF,EAAaC,IAAI,eAC/BiF,EAAsD,SAAtClF,EAAaC,IAAI,kBAEjC,aAAEkN,EAAF,iBAAgBG,EAAhB,SAAkCF,IAAajR,EAAAA,EAAAA,UAAQ,KAC3D,GAAIvG,EAEF,MAAO,CACLuX,aAFwC,GAGxCG,iBAAkB,CAAC,EACnBF,SAAU,CAAC,GAIf,MAAMD,GAAerQ,EAAAA,EAAAA,SACnBsE,EACGjI,KAAKmB,IACJ,MAAMiT,EAAuB3M,EAAuBtG,GAC9CkT,GAAcnI,EAAAA,EAAAA,IAAiCkI,EAAsB/L,GAC3E,MAAO,CACLnH,KAAMqG,EAAQpG,GACdiT,uBACAhW,SAAS6N,EAAAA,EAAAA,IAAcoI,EAAavI,EAAaC,GACjDuI,YAAaD,EAJf,IAOD5P,QAAO,QAAC,qBAAE2P,GAAH,SAA+BF,GAAeE,EAAqBrJ,QAAnE,IACV,CAAC,WACD,CAAC,QAGGkJ,EAAWD,EAAa7Q,QAAO,CAACC,EAAD,KAA2D,IAA/B,QAAEhF,EAAS8C,MAAM,GAAEC,IAAW,EAC7F,MAAMoE,EAAMnH,EAAQmW,KAAK,KAOzB,YALiB/O,IAAbpC,EAAImC,KACNnC,EAAImC,GAAO,IAEbnC,EAAImC,GAAK4K,KAAKhP,GAEPiC,CAAP,GACC,CAAC,GAEEoR,EAAcvR,OAAOC,OAAO+Q,GAAUxP,QAAQgQ,GAAQA,EAAIpP,OAAS,IAKzE,OAJImP,EAAYnP,OAAS,GACvBzH,QAAQC,IAAI,gBAAiB2W,GAGxB,CACLR,eACAG,kBAAkBO,EAAAA,EAAAA,OAAMV,EAAc,WACtCC,WAHF,GAKC,CACD5L,EACAJ,EACAR,EACAF,EACA9K,EACAyX,EACApI,EACAC,IAGF,MAAO,CACLiI,eACAG,mBACAF,WAEH,CD5EoCU,GAE7BC,EAA+C,CACnD,CACE5T,MAAO,UACP6T,UAAW,OACXtP,IAAK,KACLuP,OAAS5T,IACP,4BACE,SAAC,KAAD,CAAQA,KAAMA,KACd,SAAC,KAAD,CAAUA,KAAMA,OAGpB6T,OAAQ,CAACjF,EAAGkF,IAAMnL,OAAOiG,EAAE5O,KAAKC,IAAM0I,OAAOmL,EAAE9T,KAAKC,KAEtD,CACEH,MAAO,SACP6T,UAAW,OACXtP,IAAK,SACLuP,OAAS5T,IAAe,SAAC,KAAD,CAAYA,KAAMA,EAAMX,MAAO,MAEzD,CACES,MAAO,OACP6T,UAAW,OACXtP,IAAK,OACLuP,OAAS5T,IACP,iCACE,SAAC,KAAD,CAAUA,KAAMA,EAAM3E,SAAS,QAC/B,SAAC,KAAD,CAAU2E,KAAMA,EAAM3E,SAAS,UAGnCwY,OAAQ,CAACjF,EAAGkF,IAAMlF,EAAE5O,KAAKE,KAAKC,GAAG4T,cAAcD,EAAE9T,KAAKE,KAAKC,KAE7D,CACEL,MAAO,UACP6T,UAAW,UACXtP,IAAK,UACLuP,OAAQ,CAAC1W,EAAD,SAAoB,KAAE8C,GAAtB,SACN,SAAC,IAAD,CAAMoL,IAAK,EAAX,SACGlO,EAAQ4B,KAAI,CAACyM,EAAY1H,EAAO2H,KAC/B,SAACN,EAAD,CAEEK,WAAYA,EACZpE,WAAYA,EACZsE,aAAwB,IAAV5H,EACd6H,YAAa7H,IAAU2H,EAAIrH,OAAS,EACpCwH,UAAQ,GANV,UACUJ,EADV,YACwBvL,EAAKC,QAJ3B,EAcR4T,OAAQ,CAACjF,EAAGkF,IAAMlF,EAAE1R,QAAQmW,KAAK,KAAKU,cAAcD,EAAE5W,QAAQmW,KAAK,OAErE,CACEvT,MAAO,WACP6T,UAAW,uBACXtP,IAAK,WACLuP,OAASV,GAAiDA,EAAqBrJ,SAAW,MAAQ,MAEpG,CACE/J,MAAO,YACP6T,UAAW,UACXtP,IAAK,YACLuP,OAAS1W,IAAuB,IAAD,EAC7B,MAAMyT,EAAK,UAAGoC,EAAS7V,EAAQmW,KAAK,aAAzB,QAAkC,GAC7C,OAAO,8BAAG1C,EAAMxM,OAAS,EAAIwM,EAAMxM,OAAS,IAA5C,EAEF0P,OAAQ,CAACjF,EAAGkF,KAAO,IAAD,IAChB,MAAME,EAAM,UAAGjB,EAASnE,EAAE1R,QAAQmW,KAAK,aAA3B,QAAoC,GAEhD,OADY,UAAGN,EAASe,EAAE5W,QAAQmW,KAAK,aAA3B,QAAoC,IAClClP,OAAS6P,EAAO7P,MAA9B,IAKN,OACE,iBAAK/F,UAAU,OAAf,WACE,SAAC,UAAD,CAAkBL,MAAO,EAAzB,8BACA,SAAC,KAAD,CAAOkW,WAAYnB,EAAcY,QAASA,EAAS3C,WAAY,CAAEmD,iBAAiB,OAGvF,C,2DEpED,MAAMC,GAAiB,CAAC,GAAI,IAAK,KAAM,MAAO,KAAM,KAS7C,SAASC,KACd,MAAM,WAAEjN,EAAF,iBAAcJ,EAAd,uBAAgCR,EAAhC,QAAwDF,GAAYyD,KACpE,QAAE5M,GAAYwH,EAAAA,EAAAA,UAEb2P,EAAUC,IAAexR,EAAAA,EAAAA,UAAkB,KAC3CyR,EAAsBC,IAA2B1R,EAAAA,EAAAA,UAAiB,KAClErC,EAAMgU,IAAW3R,EAAAA,EAAAA,WAAkB,IACnC4R,EAAkBC,IAAuB7R,EAAAA,EAAAA,UAAmB,KAC5D8R,EAAoBC,IAAyB/R,EAAAA,EAAAA,UAA6B,KAC1EgS,EAAyBC,IAA8BjS,EAAAA,EAAAA,UAAwB,OAC/EkS,EAAUC,IAAenS,EAAAA,EAAAA,UAA4B,CAC1D7C,IAAI,EACJkC,QAAQ,EACRC,QAAQ,EACR8S,aAAa,IAkGTC,EAAoB9Q,IACxB4Q,GAAahM,IAAD,IAAgBA,EAAM,CAAC5E,IAAO4E,EAAK5E,MAA/C,EAGF,OACE,iBAAKjG,UAAU,OAAf,WACE,SAAC,UAAD,CAAkBL,MAAO,EAAzB,wBAEA,SAAC,cAAD,qHAIA,UAAC,IAAD,CAAMuN,MAAI,EAACF,IAAK,GAAhB,WACE,SAAC,KAAD,CACErP,MAAM,YACNyC,MAAO6V,EACP5V,SAAWD,GAAU8V,EAAY9V,GACjCE,QAAS,CAAC,GAAI,OAEhB,SAAC,KAAD,CACE3C,MAAM,wBACNyC,MAAO+V,EACP9V,SAAWD,GAAUgW,EAAwBhW,GAC7CW,KAAM,EACNF,IAAK,GACLC,IAAK,OAEP,SAAC,KAAD,CAAcnD,MAAM,OAAOyC,MAAOiC,EAAMhC,SAAUgW,KAClD,SAAC,KAAD,CAAQha,QA3HM,KAClB,MAAM2a,EAAmC,CAAC,EAEpCC,GAActG,EAAAA,EAAAA,SAAQhI,GAE5B,KAAOhF,OAAOC,OAAOoT,GAAUjR,OAASkQ,GAAU,CAChD,MAAMlT,EAASkU,EAAYC,MAC3B,IAAKnU,EAAQ,MAEb,MAAMwF,EAAsBJ,EAAuBpF,GAE9CwF,KAEFA,EAAoBkD,WACpBlD,EAAoBuO,aACrBvO,EAAoBuO,YAAcX,IAI/B9T,GAAQ4F,EAAQlF,GAAQV,OAEzBkG,EAAoBtC,MAAQ+Q,EAASzO,EAAoBtC,KAC3D+Q,EAASzO,EAAoBtC,KAAOlD,EAEpCzE,QAAQC,IAAI,oDAAqD0J,EAAQlF,GAAQjB,KAAKC,KAEzF,CACD,MAAMoV,EAASxT,OAAOC,OAAOoT,GACzBG,EAAOpR,OAASkQ,GAClBnX,EAAQzB,MAAR,8CAAqD8Z,EAAOpR,OAA5D,WAGFwQ,GAAoBpD,EAAAA,EAAAA,QAAOgE,GAASpU,GAAWwH,OAAOxH,MAGtD,MAAMqU,EAwMV,SACEC,EACAC,EACAvO,GAGA,MAAMwO,EAA2C,CAAC,EAC5CC,EAA2C,CAAC,EAClDH,EAA8BnT,SAASqE,IAChCA,GACL5E,OAAOW,KAAKiE,EAAoBQ,YAAY7E,SAAS+B,IAC/CsC,EAAoBQ,WAAW9C,GAAO,IACxCsR,EAAiBtR,IAAQsR,EAAiBtR,IAAQ,GAAK,GAErDsC,EAAoBQ,WAAW9C,KAAS4F,EAAAA,GAAAA,gBAC1C2L,EAAsBvR,IAAO,EAC7BsR,EAAiBtR,IAAQsR,EAAiBtR,IAAQ,GAAK,GAErDsC,EAAoBQ,WAAW9C,KAAS4F,EAAAA,GAAAA,WAC1C0L,EAAiBtR,IAAQsR,EAAiBtR,IAAQ,GAAK,EACxD,GAVH,IAcF,MAAMwR,EAA+B,CACnC,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,GAML,SAASC,EAAgCpT,GACvC,OAAOA,EAAKa,QAAQc,IAClBwR,EAAW1O,EAAW9C,GAAKtG,WAEvB8X,EAAW,GAAK,KAClBnZ,QAAQC,IAAI,+BAAgC0H,IACrC,KAIZ,CAED,MAAM0R,EAAoBD,EAAgC/T,OAAOW,KAAKkT,IAChEI,EAAuBF,GAC3BpT,EAAAA,EAAAA,MAAKiT,GAAkBpS,QAAQc,IAAS0R,EAAkBtS,SAASY,MAKrE,GAHA3H,QAAQC,IAAI,CAAEkZ,eAGVH,IAAaK,EAAkB5R,OAEjC,OADAzH,QAAQC,IAAI,8BACLoZ,EA8BT,GA1BArZ,QAAQC,IAAIgZ,GA0BqB,IAA7BI,EAAkB5R,OACpB,MAAO,GAGT,MAAM8R,EAA0BF,EAAkB9T,QAAO,CAACC,EAA+BmC,KACvF,MAAM7F,EAAQmX,EAAiBtR,GAK/B,OAJKnC,EAAI1D,KACP0D,EAAI1D,GAAS,IAEf0D,EAAI1D,GAAOyQ,KAAK5K,GACTnC,CAAP,GACC,CAAC,GACEgU,GAAoCxT,EAAAA,EAAAA,MAAKuT,GAAyBE,MACtE,CAACvH,EAAGkF,IAAMnL,OAAOmL,GAAKnL,OAAOiG,KAE/BlS,QAAQC,IAAI,CAAEuZ,sCAEd,MAAME,EAA6BJ,EAAqB/T,QAAO,CAACC,EAA+BmC,KAC7F,MAAM7F,EAAQmX,EAAiBtR,GAK/B,OAJKnC,EAAI1D,KACP0D,EAAI1D,GAAS,IAEf0D,EAAI1D,GAAOyQ,KAAK5K,GACTnC,CAAP,GACC,CAAC,GACJxF,QAAQC,IAAIyZ,GACZ,MAAMC,GAAuC3T,EAAAA,EAAAA,MAAK0T,GAA4BD,MAC5E,CAACvH,EAAGkF,IAAMnL,OAAOmL,GAAKnL,OAAOiG,KAG/B,IAAI2G,EAAmB,GAEvB,IAAK,MAAM5E,KAASuF,EAAmC,CACrD,GAAIX,EAAOpR,SAAWuR,EACpB,MAEFH,EAAOtG,SAAQJ,EAAAA,EAAAA,YAAWoH,EAAwBtF,GAAQ+E,EAAWH,EAAOpR,QAC7E,CAED,IAAK,MAAMwM,KAAS0F,EAAsC,CACxD,GAAId,EAAOpR,SAAWuR,EACpB,MAEFH,EAAOtG,SAAQJ,EAAAA,EAAAA,YAAWuH,EAA2BzF,GAAQ+E,EAAWH,EAAOpR,QAChF,CAED,OAAOoR,CACR,CA5U4Be,CACvBf,EAAOzW,KAAKqC,GAAWoF,EAAuBpF,KAC9C,GACAgG,GAIF,GAAIqO,EAAiBrR,OAAS,GAAI,CAChC,MAAMoS,GAAsB7T,EAAAA,EAAAA,MAAKyE,GAAY5D,QAAQc,IAASmR,EAAiB/R,SAASY,KAElFmS,GADgCjF,EAAAA,EAAAA,QAAOgF,GAAsBlS,GAAQ8C,EAAW9C,GAAKoS,WAC3C3E,MAAM,EAAG,GAAK0D,EAAiBrR,QAC/EzH,QAAQC,IAAI,qCAAsC6Z,GAClDhB,EAAiBvG,QAAQuH,EAC1B,CAED,MAAME,EAAQlB,EAAiBvT,QAC7B,CACEC,EAMAmC,KAEAkR,EAAOjT,SAASnB,IACd,MAAMwF,EAAsBJ,EAAuBpF,GACnD,GAAKwF,EACL,OAAQA,EAAoBQ,WAAW9C,IACrC,KAAK4F,EAAAA,GAAAA,QACH/H,EAAIyU,aAAatS,IAAQnC,EAAIyU,aAAatS,IAAQ,GAAK,EACvD,MACF,KAAK4F,EAAAA,GAAAA,cACH/H,EAAI0U,mBAAmBvS,IAAQnC,EAAI0U,mBAAmBvS,IAAQ,GAAK,EACnE,MACF,KAAK4F,EAAAA,GAAAA,QACH/H,EAAI6K,aAAa1I,IAAQnC,EAAI6K,aAAa1I,IAAQ,GAAK,EACvD,MACF,KAAK4F,EAAAA,GAAAA,SACH/H,EAAI2U,cAAcxS,IAAQnC,EAAI2U,cAAcxS,IAAQ,GAAK,EAX7D,IAgBKnC,IAET,CAAEyU,aAAc,CAAC,EAAGC,mBAAoB,CAAC,EAAG7J,aAAc,CAAC,EAAG8J,cAAe,CAAC,IAGhFhC,EACEW,EAAiBW,OAAOrX,KAAKuF,IAAD,IACvB8C,EAAW9C,GACdsS,aAAcD,EAAMC,aAAatS,GACjCuS,mBAAoBF,EAAME,mBAAmBvS,GAC7C0I,aAAc2J,EAAM3J,aAAa1I,GACjCwS,cAAeH,EAAMG,cAAcxS,OANvC,EAuCkC9G,KAAK,UAAnC,kCAIF,UAAC,IAAD,CAAM+N,MAAI,EAACF,IAAK,GAAhB,WACE,SAAC,KAAD,CAAgBrP,MAAM,UAAUyC,QAASwW,EAAS/U,GAAIxB,SAAU,IAAM0W,EAAiB,SACvF,SAAC,KAAD,CACEpZ,MAAM,iBACNyC,QAASwW,EAAS7S,OAClB1D,SAAU,IAAM0W,EAAiB,aAEnC,SAAC,KAAD,CACEpZ,MAAM,iBACNyC,QAASwW,EAAS5S,OAClB3D,SAAU,IAAM0W,EAAiB,aAEnC,SAAC,KAAD,CACEpZ,MAAM,mBACNyC,QAASwW,EAASE,YAClBzW,SAAU,IAAM0W,EAAiB,qBAIrC,gBAAK/W,UAAU,iBAAiBQ,MAAO,CAAEkY,oBAAoB,UAAD,OAAYjK,KAAKkK,KAAK1C,GAAtB,WAA5D,SACGK,EAAiB5V,KAAKqC,IACrB,MAAMnB,EAAOqG,EAAQlF,GACfwF,EAAsBJ,EAAuBpF,GACnD,OACE,UAAC,IAAD,CAEEuI,UAAU,WACVtL,WAAWE,EAAAA,EAAAA,GACT,wBACAwW,GACEnO,EAAoBQ,WAAW2N,GAA2B,GAC1D,sCAEJhJ,MAAM,SATR,WAWE,UAAC,IAAD,YACE,UAAC,IAAD,CAAMT,UAAQ,EAAd,UACG2J,EAAS/U,KAAM,SAAC,KAAD,CAAQD,KAAMA,IAE7BgV,EAASE,cACR,2BACE,SAAC,KAAD,CACE1U,QAAQ,SAACwW,GAAA,EAAD,IACRrY,YAAY,cACZ+B,QAAQ,aACRlD,KAAK,QACLgB,MAAOmI,EAAoBuO,YAC3BvU,UAAQ,EACR/B,MAAO,CAAES,MAAO,OAChB4X,UAAYzY,GAAD,UAAcA,EAAd,SAKhBwW,EAAS/U,KAAM,SAAC,KAAD,CAAUD,KAAMA,QAGlC,SAAC,KAAD,CAAYA,KAAMA,EAAMX,MAAO,QAGhC2V,EAAS7S,SAAU,SAAC,KAAD,CAAUnC,KAAMA,EAAM3E,SAAS,OAClD2Z,EAAS5S,SAAU,SAAC,KAAD,CAAUpC,KAAMA,EAAM3E,SAAS,SApC9C8F,EAFT,OA4CJ,gBAAK/C,UAAU,sBAAf,SACGwW,EAAmB9V,KAAKoY,IAAD,mBACtB,UAAC,KAAD,CAEE9Y,WAAWE,EAAAA,EAAAA,GACT,wBACA,yBACAwW,IAA4BoC,EAAiBjX,IAAM,sCAErDxF,QAAS,IAAMsa,EAA2BmC,EAAiBjX,IAP7D,UASGiX,EAAiBhX,KAAKC,GATzB,IAS8BgU,GAAe+C,EAAiBnZ,QAC5D,UAAC,IAAD,CAAMqN,IAAK,EAAGY,QAAQ,SAAS5N,UAAU,OAAzC,WACE,6BACE,SAAC+Y,GAAA,EAAD,CACEvY,MAAO,CAAE/C,MAAOqb,EAAiBN,mBAAqB,kBAAetS,KACpE,IAHL,UAIG4S,EAAiBN,0BAJpB,QAI0C,MAE1C,6BACE,SAACQ,GAAA,EAAD,CAAoBxY,MAAO,CAAE/C,MAAOqb,EAAiBP,aAAe,aAAUrS,KAAgB,IADhG,UAEG4S,EAAiBP,oBAFpB,QAEoC,MAEpC,6BACE,SAACU,GAAA,EAAD,CAAqBzY,MAAO,CAAE/C,MAAOqb,EAAiBL,cAAgB,WAAQvS,KAAgB,IADhG,UAEG4S,EAAiBL,qBAFpB,QAEqC,MAErC,6BACE,SAACpM,EAAA,EAAD,CACE7L,MAAO,CAAE/C,MAAOqb,EAAiBnK,aAAe,YAASzI,KACxD,IAHL,UAIG4S,EAAiBnK,oBAJpB,QAIoC,UA5BjCmK,EAAiBjX,GAFF,QAsC/B,CChRM,SAASqX,KACd,MAAM,KAAElW,GAASsE,IAEjB,MAAa,eAATtE,GAEA,iCACE,SAACoM,GAAD,KACA,SAACL,EAAD,KACA,SAAC,IAAD,CAAMnB,QAAQ,WAAW5N,UAAU,OAAnC,UACE,SAAC2R,GAAD,SAMK,YAAT3O,GACK,SAAC6M,GAAD,IAGI,aAAT7M,GACK,SAACwP,GAAD,IAGI,eAATxP,GACK,SAACyR,GAAD,IAGI,cAATzR,GACK,SAACgT,GAAD,KAGF,SAAC,KAAD,CAAOhW,UAAU,QAAQkK,YAAY,kCAC7C,C,qCCjCM,SAASiP,KACd,MAAM,uBAAEhR,EAAF,iBAA0BQ,EAA1B,eAA4CD,GAAmBgD,KAE/D,MACJ6C,EADI,SAEJ9C,EAFI,qBAGJ2N,EAHI,aAIJC,EAJI,oBAKJC,EALI,SAMJC,EANI,cAOJC,EAPI,gBAQJC,IACE/V,EAAAA,EAAAA,UAAQ,KACV,MAAM6K,EAAQ5F,EAAiB5C,OAC/B,IAAI2T,EAAW,EACXjO,EAAW,EACXgO,EAAkB,EACE9Q,EAAiBjI,KAAKmB,GAAOsG,EAAuBtG,KAC5DqC,SAAQ,IAA2C,IAAxCuH,SAAUkO,EAAZ,WAAwB5Q,GAAiB,GAC3DqB,EAAAA,EAAAA,SAAQrB,KACX2Q,GAAY,GAEV/V,OAAOC,OAAOmF,GAAYhD,SAAW2C,EAAe3C,SACtD0F,GAAY,GAGdgO,GAAmB9V,OAAOC,OAAOmF,GAAYhD,MAA7C,IAGF,MAAMyT,EAAgB7V,OAAOC,OAAO8E,GAAgB3C,OAAS4C,EAAiB5C,OAE9E,MAAO,CACLwI,QACA9C,WACA2N,qBAAsB7K,EAAQ,GAAM9C,EAAW8C,EAAS,KAAKqL,QAAQ,GAAK,EAC1EP,aAAcK,EACdJ,oBAAqB/K,EAAQ,EAAIE,KAAKC,MAAOgL,EAAWnL,EAAS,KAAO,EACxEgL,UAAYE,EAAkBD,EAAiB,KAAKI,QAAQ,GAC5DH,kBACAD,gBARF,GAUC,CAAC9Q,EAAgBC,EAAkBR,IAEtC,OACE,iCACE,UAAC,IAAD,CAAM8E,UAAQ,EAAd,WACE,SAAC,SAAD,CAAiB2B,QAAM,EAAC5O,UAAU,OAAlC,0BAGA,SAACiO,EAAD,CAAMtQ,MAAM,QAAZ,SAAqB4Q,KACrB,UAACN,EAAD,CAAMtQ,MAAM,WAAZ,UACG8N,EADH,KACe2N,EADf,SAGA,UAACnL,EAAD,CAAMtQ,MAAM,YAAZ,UACG0b,EADH,KACmBC,EADnB,SAGA,SAAC,SAAD,CAAiB1K,QAAM,EAAC5O,UAAU,YAAlC,+BAGA,SAACiO,EAAD,CAAMtQ,MAAM,QAAZ,SAAqB6b,KACrB,SAACvL,EAAD,CAAMtQ,MAAM,MAAZ,SAAmB8b,KACnB,UAACxL,EAAD,CAAMtQ,MAAM,WAAZ,UAAwB4b,EAAxB,WAEF,SAAC,IAAD,MAGL,CAEM,SAASM,KACd,MAAM,WAAExR,GAAeqD,KACjB,aAAEnE,EAAF,cAAgBG,GAAkBJ,IAExC,OACE,iCACE,SAAC,KAAD,CAAQ9H,OAAK,EAACnD,QAAS,IAAMgM,EAAW,UAAWlJ,KAAK,UAAxD,0BAGA,SAAC,KAAD,CACExB,MAAM,aACNyC,MAAqC,UAA9BmH,EAAaC,IAAI,SACxBnH,SAAWD,GAAUsH,EAAc,QAAStH,EAAQ,QAAU,IAC9DJ,UAAU,WAIjB,CAEM,SAAS8Z,KACd,MAAM,aAAEvS,EAAF,cAAgBG,GAAkBJ,KAClC,eAAEoB,GAAmBgD,IAErBpL,GAAUoD,EAAAA,EAAAA,UAAQ,IACf,CACL,CAAE/F,MAAO,mBAAoByC,MAAO,aACjCsI,EAAehI,KAAI,QAAC,GAAEmB,EAAF,KAAMC,GAAP,QAAmB,CAAEnE,MAAOmE,EAAKC,GAAI3B,MAAOyB,EAA5C,MAEvB,CAAC6G,IAEJ,OACE,iCACE,SAAC,KAAD,CACE/K,MAAM,oBACNyC,MAAOmH,EAAaC,IAAI,cAAgB,SACxCnH,SAAWW,GAAM0G,EAAc,YAAa1G,GAC5CV,QAASA,KAEX,SAAC,KAAD,CACE3C,MAAM,cACNyC,MAAOmK,OAAOhD,EAAaC,IAAI,SAAW,GAC1CnH,SAAWW,GAAM0G,EAAc,OAAQtC,OAAOpE,IAC9CH,IAAK,EACLC,IAAK,GACLC,KAAM,MAIb,CAEM,SAASgZ,KACd,MAAM,aAAExS,EAAF,cAAgBG,GAAkBJ,KAClC,eAAEoB,GAAmBgD,IAErBpL,GAAUoD,EAAAA,EAAAA,UAAQ,IACfgF,EAAehI,KAAI,QAAC,GAAEmB,EAAF,KAAMC,KAASlC,GAAhB,QAA4B,CACpDjC,MAAM,GAAD,OAAKmE,EAAKC,IAAV,OAAenC,EAAKoa,QAAU,IAAM,IACzC5Z,MAAOyB,EAFiB,KAIzB,CAAC6G,IAEJ,OACE,iCACE,SAAC,KAAD,CACE/K,MAAM,YACNyC,MAAOmH,EAAaC,IAAI,cAAgB,MACxCnH,SAAWW,GAAM0G,EAAc,YAAa1G,GAC5CV,QAASA,KAGX,SAAC,KAAD,CACE3C,MAAM,QACNyC,MAAOmH,EAAaC,IAAI,UAAY,QACpCnH,SAAWW,GAAM0G,EAAc,QAAS1G,GACxCV,QAAS,CAAC,CAAEF,MAAO,QAASzC,MAAO,YAAcsc,EAAAA,OAGnD,SAAC,KAAD,CACEtc,MAAM,mBACNyC,MAAOmH,EAAaC,IAAI,aAAe,GACvCnH,SAAWW,GAAM0G,EAAc,WAAY1G,GAC3CV,QAAS,CAAC,GAAI,GAAI,GAAI,QAI7B,CAEM,SAAS4Z,KACd,MAAM,aAAE3S,EAAF,cAAgBG,GAAkBJ,IACxC,OACE,iCACE,SAAC,KAAD,CACE3J,MAAM,gBACNyC,MAA4C,SAArCmH,EAAaC,IAAI,gBACxBnH,SAAWW,GAAM0G,EAAc,eAAgB1G,EAAI,OAAS,IAC5DhB,UAAU,oBAEZ,SAAC,KAAD,CACErC,MAAM,iBACNyC,MAA6C,SAAtCmH,EAAaC,IAAI,iBACxBnH,SAAWW,GAAM0G,EAAc,gBAAiB1G,EAAI,OAAS,IAC7DhB,UAAU,oBAEZ,SAAC,KAAD,CACErC,MAAM,eACNyC,MAA2C,SAApCmH,EAAaC,IAAI,eACxBnH,SAAWW,GAAM0G,EAAc,cAAe1G,EAAI,OAAS,IAC3DhB,UAAU,qBAIjB,CCzKM,SAASma,KACd,MAAM,QAAE7c,EAAF,KAAWmL,EAAX,sCAAiBK,EAAjB,WAAwDC,EAAxD,SAAoEjL,EAApE,mBAA8EkL,GAClF0C,KAEI,KAAE1I,EAAF,QAAQyE,GAAYH,IAE1B,OACE,UAAC,MAAD,YACE,UAAC,IAAD,CAAM2F,UAAQ,EAACD,IAAK,GAApB,WACE,SAACpP,GAAA,EAAD,CACEN,QAASA,EACTO,OAAQ4K,EACR3K,SAAUA,EACVC,KAAMqc,KAAKC,UAAUrR,MAGvB,SAAChN,GAAA,EAAD,CACEC,KAAM,IA0BhB,SACEsX,EACAxK,GAEA,MAAMwF,EAAQ5K,OAAOW,KAAKyE,GAAYhD,OAuCtC,OArCApC,OAAOW,KAAKiP,GAAiBrP,SAAS+B,IACpC,MAAMsC,EAAsBgL,EAAgBtN,GAGtCuI,EAAY7K,OAAOW,KAAKiE,EAAoBQ,YAAYhD,OAE9D,GAAIyI,IAAcD,EAAO,CAEvBhG,EAAoBkD,UAAW,EAG/B,IAAIkD,EAAe,EACnB,MAAM2L,EAAQ3W,OAAOC,OAAO2E,EAAoBQ,YAAYlF,QAAO,CAACC,EAAa9C,IAC3EA,GAAK,GACHA,IAAM6K,EAAAA,GAAAA,UACR8C,GAAgB,GAEd3N,IAAM6K,EAAAA,GAAAA,WACR/H,GAAO9C,EAAI,GAEN8C,GAGFA,EAAM9C,GACZ,GACHuH,EAAoB+R,MAAQA,EAG5B/R,EAAoBuO,YAAcrI,KAAKC,OAAQF,EAAYG,GAAgBJ,EAAS,KAGpFhG,EAAoBtC,KAAM2G,EAAAA,EAAAA,IAAiCrE,EAAqBQ,GAAY,GAAMkM,KAChG,GAEH,MAGIzJ,EAAAA,EAAAA,IAAa+H,EACrB,CAtEqBgH,CAAuBzR,IAAyCC,GAC5E7M,SAAS,8BACToD,SAAUhC,EACVkC,OAAK,QAGT,SAAC,IAAD,KAEA,SAAC2Z,GAAD,KAEA,SAAC,KAAD,CACExb,MAAM,OACNyC,MAAO4C,EACP3C,SAAUoH,EACVnH,QAAS,CAAC,aAAc,UAAW,WAAY,aAAc,gBAE/D,SAAC,IAAD,IAEU,eAAT0C,IAAyB,SAAC6W,GAAD,IAChB,YAAT7W,IAAsB,SAAC8W,GAAD,IACb,aAAT9W,IAAuB,SAAC+W,GAAD,IACd,eAAT/W,IAAyB,SAACkX,GAAD,MAG/B,C,eCjDD,SAASM,KACP,MAAM,UAAErd,EAAF,MAAaE,EAAb,gBAAoBG,GAAoBkO,IAE9C,OACE,SAAC,MAAD,CAAYhK,MAAM,QAAQ+Y,SAAS,cAAnC,UACE,UAAC,IAAD,CAAQC,UAAQ,EAAhB,WACE,SAACC,GAAA,EAAD,WACE,SAACR,GAAD,OAGF,SAAC,YAAD,CAAgBna,UAAU,UAA1B,UACE,SAAC4a,EAAA,EAAD,CAAoBzd,UAAWA,EAAWE,MAAOA,EAAOG,gBAAiBA,EAAzE,UACE,SAAC0b,GAAD,YAMX,CAUD,SARA,WACE,OACE,SAACjQ,EAAD,WACE,SAACuR,GAAD,KAGL,C","sources":["components/Common/DownloadButton.tsx","components/Common/LanguageFlag.tsx","components/Common/ResponseState.tsx","components/Common/SaveButton.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/Items/ItemBuildingBlocks.tsx","components/Items/ItemsTypeahead.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useUpdateFirebaseDoc.tsx","hooks/useItemQueryParams.ts","hooks/useItemsAttribution.ts","context/ItemsAttributeValuesContext.tsx","components/Items/Attributes/AttributionValueButtons.tsx","components/Items/Attributes/ItemAttributeDescription.tsx","components/Common/Stat.tsx","components/Items/Attributes/ItemAttributeStats.tsx","components/Items/Attributes/ItemAttributionCard.tsx","components/Items/Attributes/ItemAttributionNavigation.tsx","components/Items/Attributes/ItemSamplerCard.tsx","hooks/useItemSampler.ts","components/Common/GoToTopButton.tsx","components/Items/Attributes/ItemGroupingCard.tsx","hooks/useItemGrouping.ts","components/Items/Attributes/ItemComparatorCard.tsx","hooks/useItemsComparator.ts","components/Items/Attributes/ItemSimulation.tsx","components/Items/Attributes/ItemAttributionPageContent.tsx","components/Items/Attributes/ItemAttributionFiltersSections.tsx","components/Items/Attributes/ItemAttributionFilters.tsx","pages/Items/ItemsAttribution.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]);\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Checkbox, Form, InputNumber, Segmented, Select, Switch, Tooltip } from 'antd';\nimport { SegmentedValue } from 'antd/es/segmented';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport function FilterSwitch({ label, value, onChange, className, disabled }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" disabled={disabled} />\n    </Form.Item>\n  );\n}\n\nexport function FilterCheckBox({ label, value, onChange, disabled, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Checkbox checked={value} onChange={(e) => onChange(e.target.checked)} disabled={disabled} />\n    </Form.Item>\n  );\n}\n\ntype FilterSegmentsProps = {\n  label: ReactNode;\n  value?: string;\n  onChange: (mode: SegmentedValue) => void;\n  options: { value: string; title: string; icon: ReactNode }[];\n};\n\nexport function FilterSegments({ value, label, onChange, options }: FilterSegmentsProps) {\n  return (\n    <Form.Item label={label}>\n      <Segmented\n        block\n        value={value}\n        onChange={onChange}\n        options={options.map((option) => ({\n          label: <Tooltip title={option.title}>{option.icon}</Tooltip>,\n          value: option.value,\n        }))}\n      />\n    </Form.Item>\n  );\n}\n","import { Button, Input } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { Item as ItemT } from 'types';\n\nimport { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype ItemBlockProps = {\n  item: ItemT;\n};\n\ntype ItemBlocksAdditionalProps = {\n  className?: string;\n  width: number;\n  language: 'en' | 'pt';\n  to: string;\n};\n\nexport function ItemSprite({\n  item,\n  width,\n  className,\n}: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'width' | 'className'>) {\n  return (\n    <Item id={item.id} width={width} title={`${item.name.en} | ${item.name.pt}`} className={className} />\n  );\n}\n\nexport function ItemId({ item }: ItemBlockProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={item.nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={item.id}\n        readOnly\n        style={{ width: '8ch' }}\n        onClick={() => copyToClipboard(item.id)}\n      />\n    </span>\n  );\n}\n\nexport function ItemName({ item, language }: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'language'>) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Name in ${language.toUpperCase()}`}\n      variant=\"borderless\"\n      size=\"small\"\n      value={item.name[language]}\n      readOnly\n    />\n  );\n}\n\nexport function ItemNsfw({ item }: ItemBlockProps) {\n  return item.nsfw ? <FireFilled style={{ color: 'hotpink' }} /> : <></>;\n}\n\nexport function ItemGoTo({ item }: ItemBlockProps) {\n  const [, setSearchParams] = useSearchParams();\n  const onGoTo = () => {\n    setSearchParams({ itemId: item.id, view: 'classifier' });\n  };\n\n  return (\n    <span>\n      <Button size=\"small\" shape=\"round\" onClick={onGoTo}>\n        Go to\n      </Button>\n    </span>\n  );\n}\n","import { AutoComplete, AutoCompleteProps, Input } from 'antd';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useDebounce } from 'react-use';\nimport { Item } from 'types';\n\ntype ItemsTypeaheadProps = {\n  items?: Dictionary<Item>;\n  isPending?: boolean;\n  onFinish: (id: string) => void;\n} & Omit<AutoCompleteProps, 'options'>;\n\nexport function ItemsTypeahead({\n  items,\n  isPending,\n  style,\n  size,\n  placeholder,\n  allowClear,\n  onFinish,\n  ...rest\n}: ItemsTypeaheadProps) {\n  const tdrItemsQuery = useTDResource<Item>('items', !Boolean(items) && !isPending);\n\n  const { namesDict, options } = useMemo(() => {\n    console.log('Recomputing item names typeahead...');\n\n    const namesDict = Object.values(items ?? tdrItemsQuery.data ?? {}).reduce(\n      (acc: Dictionary<string>, entry) => {\n        const nameEn = `${entry.name.en} (${entry.id})`;\n        const namePt = `${entry.name.pt} (${entry.id})`;\n        acc[nameEn] = entry.id;\n        acc[namePt] = entry.id;\n        // Other names\n        if (entry.aliasesEn) {\n          entry.aliasesEn.forEach((alias) => {\n            acc[`${alias} (${entry.id})*`] = entry.id;\n          });\n        }\n        if (entry.aliasesPt) {\n          entry.aliasesPt.forEach((alias) => {\n            acc[`${alias} (${entry.id})*`] = entry.id;\n          });\n        }\n\n        return acc;\n      },\n      {}\n    );\n\n    const options = orderBy(Object.keys(namesDict), [(name) => name.toLowerCase()]).map((name) => ({\n      value: name,\n    }));\n\n    return { namesDict, options };\n  }, [items, isPending]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [filteredOptions, setFilteredOptions] = useState<{ value: string }[]>([]);\n  const [typedText, setTypedText] = useState('');\n\n  useDebounce(\n    () => {\n      if (typedText) {\n        handleSearch(typedText);\n      }\n    },\n    500,\n    [typedText]\n  );\n\n  const handleSearch = (searchText: string) => {\n    if (!searchText) {\n      setFilteredOptions([]);\n      return;\n    }\n\n    const SEARCH = searchText.trim().toUpperCase();\n\n    const filtered = options.filter((option) =>\n      String(option?.value ?? '')\n        .toUpperCase()\n        .includes(SEARCH)\n    );\n\n    const sorted = orderBy(filtered, [\n      (option) => {\n        const value = String(option?.value ?? '').toUpperCase();\n\n        // Exact match\n        if (value === SEARCH) return 0;\n\n        // Full ID match within parentheses\n        const idMatch = value.match(/\\((.*?)\\)/);\n        if (idMatch && idMatch[1] === SEARCH) return 1;\n\n        // Partial match at the beginning\n        const index = value.indexOf(SEARCH);\n        if (index === 0) return 2;\n\n        // Partial match elsewhere\n        if (index > 0) return 3;\n\n        // No match\n        return 4;\n      },\n    ]);\n\n    setFilteredOptions(sorted);\n  };\n\n  const handlePressEnter = () => {\n    if (filteredOptions.length > 0) {\n      const key = filteredOptions[0].value;\n      if (namesDict[key] !== undefined) {\n        onFinish(namesDict[key]);\n      }\n    }\n  };\n\n  const onSelect = (key: any) => {\n    if (namesDict[key] !== undefined) {\n      onFinish(namesDict[key]);\n    }\n  };\n\n  return (\n    <AutoComplete\n      options={filteredOptions}\n      style={{ width: 250, ...style }}\n      allowClear={allowClear ?? true}\n      placeholder={placeholder ?? 'Search by name or id...'}\n      filterOption={(inputValue, option) =>\n        String(option?.value ?? '')\n          .toUpperCase()\n          .indexOf(inputValue?.toUpperCase()) !== -1\n      }\n      onSearch={setTypedText}\n      notFoundContent={typedText.length > 0 ? 'No items found' : 'Type to search...'}\n      onSelect={onSelect}\n      {...rest}\n    >\n      <Input onPressEnter={handlePressEnter} />\n    </AutoComplete>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { useSearchParams } from 'react-router-dom';\n\nexport function useItemQueryParams() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addQueryParam = (key: string, value: string) => {\n    searchParams.set(key, `${value}`);\n    setSearchParams(searchParams);\n  };\n\n  const removeQueryParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  return {\n    view: searchParams.get('view') ?? 'classifier',\n    setView: (value: string) => setSearchParams({ view: value }),\n    addQueryParam,\n    removeQueryParam,\n    searchParams,\n  };\n}\n","import { App } from 'antd';\nimport { isEmpty, mapKeys, merge, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { deserializeFirebaseData, getNewItem, getNewItemAttributeValues, serializeFirebaseData } from 'utils';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\n/**\n * This is to avoid new items being generated and unused just for the sake of placeholders.\n */\nconst globalNewItemsAttributesValues: Dictionary<ItemAtributesValues> = {};\n\nexport function useItemsAttribution() {\n  const { notification, message } = App.useApp();\n  const queryClient = useQueryClient();\n\n  // Gather basic item data\n  const tdrItemsQuery = useTDResource<Item>('items');\n  const tdrAttributesQuery = useTDResource<ItemAttribute>('items-attributes');\n  const tdrItemsAttributesValuesQuery = useTDResource<ItemAtributesValues>('items-attribute-values');\n  const firebaseItemsAttributeValuesQuery = useGetFirebaseDoc<\n    Dictionary<string>,\n    Dictionary<ItemAtributesValues>\n  >('tdr', 'itemsAttributeValues', {\n    select: deserializeFirebaseData,\n  });\n\n  const [modifiedAttributeValues, setModifiedAttributeValues] = useState<Dictionary<ItemAtributesValues>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', 'itemsAttributeValues', {\n    onSuccess: () => {\n      notification.success({\n        message: 'itemsAttributeValues updated',\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', 'itemsAttributeValues'],\n      });\n      setModifiedAttributeValues({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: 'itemsAttributeValues update failed',\n        description: error.message,\n      });\n    },\n  });\n\n  const savedItemsAttributeValues = useMemo(() => {\n    return {\n      ...(tdrItemsAttributesValuesQuery.data ?? {}),\n      ...(firebaseItemsAttributeValuesQuery.data ?? {}),\n    };\n  }, [tdrItemsAttributesValuesQuery.data, firebaseItemsAttributeValuesQuery.data]);\n\n  const isDirty = !isEmpty(modifiedAttributeValues);\n  const addAttributesToUpdate = (id: string, item: ItemAtributesValues) => {\n    setModifiedAttributeValues((prev) => ({ ...prev, [id]: { ...item, updatedAt: Date.now() } }));\n  };\n  const addMultipleAttributesToUpdate = (itemsArr: ItemAtributesValues[]) => {\n    setModifiedAttributeValues((prev) => ({\n      ...prev,\n      ...mapKeys(\n        itemsArr.map((item) => ({ ...item, updatedAt: Date.now() })),\n        'id'\n      ),\n    }));\n  };\n\n  const firebaseData = firebaseItemsAttributeValuesQuery.data;\n\n  const save = () => {\n    mutation.mutate(serializeFirebaseData({ ...firebaseData, ...modifiedAttributeValues }));\n  };\n\n  // Filter items that have the alien deck only\n  const availableItemIds = useMemo(() => {\n    const items = tdrItemsQuery.data ?? {};\n    return orderBy(\n      Object.keys(items).filter((id) => {\n        return (items[id]?.decks ?? []).includes('alien');\n      }),\n      (id) => Number(id),\n      'asc'\n    );\n  }, [tdrItemsQuery.data]);\n\n  const getItem = (id: string) => {\n    if ((tdrItemsQuery.data ?? {})?.[id]) {\n      return tdrItemsQuery.data[id];\n    }\n    if (id) {\n      message.info(`Item ${id} not found in TDR. Creating a new item...`);\n    }\n    return getNewItem({ id });\n  };\n\n  const getItemAttributeValues = (id: string) => {\n    const storedValue = savedItemsAttributeValues?.[id] ?? {};\n    const modifiedValue = modifiedAttributeValues[id] ?? {};\n\n    if (isEmpty(storedValue) && isEmpty(modifiedValue)) {\n      globalNewItemsAttributesValues[id] = getNewItemAttributeValues({ id });\n      return globalNewItemsAttributesValues[id];\n    }\n\n    return merge(globalNewItemsAttributesValues?.[id] ?? {}, storedValue, modifiedValue);\n  };\n\n  return {\n    availableItemIds,\n    getItem,\n    getItemAttributeValues,\n    attributes: tdrAttributesQuery.data ?? {},\n    isLoading:\n      tdrItemsQuery.isLoading ||\n      tdrAttributesQuery.isLoading ||\n      tdrItemsAttributesValuesQuery.isLoading ||\n      firebaseItemsAttributeValuesQuery.isLoading,\n    error:\n      tdrItemsQuery.error ||\n      tdrAttributesQuery.error ||\n      tdrItemsAttributesValuesQuery.error ||\n      firebaseItemsAttributeValuesQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addAttributesToUpdate,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate: modifiedAttributeValues,\n    isDirty,\n  };\n}\n","import { App } from 'antd';\nimport { useItemsAttribution } from 'hooks/useItemsAttribution';\nimport { isEmpty, orderBy, random } from 'lodash';\nimport { ReactNode, useContext, createContext, useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { getNewItem, getNewItemAttributeValues, sortJsonKeys } from 'utils';\n\nexport type ItemsAttributeValuesContextType = {\n  getItem: (itemId: string) => Item;\n  getItemAttributeValues: (itemId: string) => ItemAtributesValues;\n  isLoading: boolean;\n  error: ResponseError;\n  hasResponseData: boolean;\n  isDirty: boolean;\n  itemAttributeValues: ItemAtributesValues;\n  prepareItemsAttributesFileForDownload: () => Dictionary<ItemAtributesValues>;\n  jumpToItem: (direction: string, itemId?: string) => void;\n  activeItem: Item;\n  onAttributeChange: (attributeId: string, value: number) => void;\n  isSaving: boolean;\n  save: () => void;\n  attributesList: ItemAttribute[];\n  availableItemIds: string[];\n  addAttributesToUpdate: (itemId: string, attributes: ItemAtributesValues) => void;\n  addMultipleAttributesToUpdate: (itemsArr: ItemAtributesValues[]) => void;\n  attributes: Dictionary<ItemAttribute>;\n  attributesToUpdate: Dictionary<ItemAtributesValues>;\n};\n\nconst ItemsAttributeValuesContext = createContext<ItemsAttributeValuesContextType>({\n  getItem: () => getNewItem(),\n  getItemAttributeValues: () => getNewItemAttributeValues(),\n  isLoading: true,\n  error: null,\n  hasResponseData: false,\n  isDirty: false,\n  jumpToItem: () => {},\n  activeItem: getNewItem(),\n  itemAttributeValues: getNewItemAttributeValues(),\n  onAttributeChange: () => {},\n  isSaving: false,\n  save: () => {},\n  attributesList: [],\n  availableItemIds: [],\n  addAttributesToUpdate: () => {},\n  addMultipleAttributesToUpdate: () => {},\n  prepareItemsAttributesFileForDownload: () => ({}),\n  attributes: {},\n  attributesToUpdate: {},\n});\n\ntype ItemsAttributeValuesProviderProps = {\n  children: ReactNode;\n};\n\nexport const ItemsAttributeValuesProvider = ({ children }: ItemsAttributeValuesProviderProps) => {\n  const {\n    getItem,\n    getItemAttributeValues,\n    availableItemIds,\n    isLoading,\n    error,\n    isSaving,\n    save,\n    addAttributesToUpdate,\n    isDirty,\n    attributes,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate,\n  } = useItemsAttribution();\n  const { message } = App.useApp();\n\n  const [itemIndex, setItemIndex] = useState(random(0, availableItemIds.length - 1));\n  const activeItem = getItem(availableItemIds[itemIndex]);\n  const itemAttributeValues = getItemAttributeValues(activeItem.id);\n\n  const jumpToItem = (direction: string, itemId?: string) => {\n    if (direction === 'next') {\n      setItemIndex((prev) => (prev + 1) % availableItemIds.length);\n    }\n    if (direction === 'previous') {\n      setItemIndex((prev) => (prev - 1 + availableItemIds.length) % availableItemIds.length);\n    }\n    if (direction === 'random') {\n      setItemIndex(random(0, availableItemIds.length - 1));\n    }\n\n    if (direction === 'first') {\n      setItemIndex(0);\n    }\n    if (direction === 'last') {\n      setItemIndex(availableItemIds.length - 1);\n    }\n    if (direction === 'next10') {\n      setItemIndex((prev) => (prev + 10) % availableItemIds.length);\n    }\n    if (direction === 'previous10') {\n      setItemIndex((prev) => (prev - 10 + availableItemIds.length) % availableItemIds.length);\n    }\n\n    if (direction === 'goTo' && itemId !== undefined) {\n      const index = availableItemIds.indexOf(itemId);\n      if (index !== -1) {\n        setItemIndex(index);\n      } else {\n        message.error(`Item ${itemId} is not available for attribution.`);\n      }\n    }\n  };\n\n  const attributesList = useMemo(() => orderBy(Object.values(attributes), 'name.en', 'asc'), [attributes]);\n\n  const onAttributeChange = (attributeId: string, value: number) => {\n    addAttributesToUpdate(activeItem.id, {\n      ...itemAttributeValues,\n      attributes: {\n        ...itemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const prepareItemsAttributesFileForDownload = () => {\n    return sortJsonKeys(\n      availableItemIds.reduce((acc: Dictionary<ItemAtributesValues>, itemId) => {\n        // Get items and only the ones with attributes\n        const item = getItemAttributeValues(itemId);\n\n        if (isEmpty(item.attributes)) {\n          return acc;\n        }\n\n        // Assess item completion\n        if (Object.keys(item.attributes).length === attributesList.length) {\n          item.complete = true;\n        } else {\n          delete item.complete;\n        }\n\n        acc[item.id] = item;\n\n        return acc;\n      }, {})\n    );\n  };\n\n  return (\n    <ItemsAttributeValuesContext.Provider\n      value={{\n        getItem,\n        getItemAttributeValues,\n        availableItemIds,\n        isLoading,\n        error,\n        hasResponseData: availableItemIds.length > 0 && !isEmpty(attributes),\n        isDirty,\n        itemAttributeValues,\n        jumpToItem,\n        activeItem,\n        onAttributeChange,\n        isSaving,\n        save,\n        attributes,\n        attributesList,\n        addAttributesToUpdate,\n        addMultipleAttributesToUpdate,\n        prepareItemsAttributesFileForDownload,\n        attributesToUpdate,\n      }}\n    >\n      {children}\n    </ItemsAttributeValuesContext.Provider>\n  );\n};\n\nexport const useItemsAttributeValuesContext = () => useContext(ItemsAttributeValuesContext);\n","import { Radio, Tooltip } from 'antd';\nimport { ItemAttribute } from 'types';\n\nimport { CheckCircleFilled, QuestionCircleOutlined } from '@ant-design/icons';\n\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nconst attributeOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC },\n];\n\nconst attributeLimitedOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC, disabled: true },\n];\n\ntype AttributionValueButtonsProps = {\n  attribute: ItemAttribute;\n  value?: number;\n  onChange: (attributeId: string, value: number) => void;\n  onlyButtons?: boolean;\n};\n\nexport function AttributionValueButtons({\n  attribute,\n  value,\n  onChange,\n  onlyButtons,\n}: AttributionValueButtonsProps) {\n  if (!attribute) return <></>;\n\n  if (onlyButtons) {\n    return (\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n    );\n  }\n\n  return (\n    <div key={attribute.id} className=\"attribute-button-container__row\">\n      <span className=\"attribute-button-container__label\">\n        {attribute.name.en}{' '}\n        <Tooltip title={attribute.description.en}>\n          <QuestionCircleOutlined />\n        </Tooltip>\n      </span>\n\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n\n      <span>\n        <CheckCircleFilled style={{ color: value && value > 7 ? 'green' : 'transparent' }} />\n      </span>\n    </div>\n  );\n}\n","import { Flex } from 'antd';\nimport clsx from 'clsx';\nimport { FilterSwitch } from 'components/Common';\nimport { AlienSign } from 'components/Sprites';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { filterMessage, getItemAttributePriorityResponse, parseAttribute } from 'utils';\n\ntype ItemAttributeDescriptionProps = {\n  itemAttributeValues: ItemAtributesValues;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nexport function ItemAttributeDescription({ itemAttributeValues, attributes }: ItemAttributeDescriptionProps) {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const filteredResponse = useMemo(\n    () =>\n      filterMessage(\n        getItemAttributePriorityResponse(itemAttributeValues, attributes),\n        showUnclear,\n        showUnrelated\n      ),\n    [itemAttributeValues, attributes, showUnclear, showUnrelated]\n  );\n\n  const Component = searchParams.get('signs') === 'true' ? AttributeSprite : AttributeText;\n\n  return (\n    <Flex gap={6} vertical>\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Alien Sings\"\n        value={searchParams.get('signs') === 'true'}\n        onChange={(v) => addQueryParam('signs', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <Flex gap={6} wrap=\"wrap\" className=\"item-attribute-value-statement\">\n        {filteredResponse.map((keyVariant, index, arr) => (\n          <Component\n            key={keyVariant}\n            keyVariant={keyVariant}\n            attributes={attributes}\n            firstElement={index === 0}\n            lastElement={index === arr.length - 1}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  );\n}\n\ntype AttributeSpriteProps = {\n  keyVariant: string;\n  attributes: Dictionary<ItemAttribute>;\n  firstElement: boolean;\n  lastElement: boolean;\n};\n\nexport function AttributeSprite({\n  keyVariant,\n  attributes,\n  withText,\n}: AttributeSpriteProps & { withText?: boolean }) {\n  const { key, className, text } = parseAttribute(keyVariant);\n\n  return (\n    <Flex vertical align=\"center\">\n      <AlienSign\n        width={50}\n        id={attributes[key].spriteId}\n        className={clsx('item-attribute-alien-sign', `item-attribute-alien-sign--${className}`)}\n      />\n      {withText && (\n        <Flex\n          wrap=\"wrap\"\n          justify=\"center\"\n          align=\"center\"\n          style={{ maxWidth: 50, textAlign: 'center', wordBreak: 'break-word' }}\n        >\n          {text} {attributes[key].name.en.toLowerCase()}\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nfunction AttributeText({ keyVariant, attributes, firstElement, lastElement }: AttributeSpriteProps) {\n  const { key, text } = parseAttribute(keyVariant);\n\n  const prefix = firstElement ? \"It's \" : '';\n  const suffix = lastElement ? '.' : ', ';\n\n  return (\n    <>\n      {prefix}\n      {text} {attributes[key].name.en.toLowerCase()}\n      {suffix}\n    </>\n  );\n}\n","import { Tag, Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StatProps = {\n  label: ReactNode;\n  children: ReactNode;\n};\n\nexport function Stat({ label, children }: StatProps) {\n  return (\n    <Typography.Text>\n      {label} <Tag>{children}</Tag>\n    </Typography.Text>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\nimport { Flex, Progress, Typography } from 'antd';\nimport { Stat } from 'components/Common/Stat';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\ntype ItemAttributeStatsProps = {\n  attributesList: ItemAttribute[];\n  itemAttributeValues: ItemAtributesValues;\n};\n\nexport function ItemAttributeStats({ attributesList, itemAttributeValues }: ItemAttributeStatsProps) {\n  const { completion, isDeterministic, value, isOpposing, relevancy } = useMemo(() => {\n    const total = attributesList.length;\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n    const completion = Math.floor((completed / total) * 100);\n\n    let isDeterministic = false;\n    let isOpposing = false;\n    let unclearCount = 0;\n    const value = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n      if (v <= 0) {\n        if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n          unclearCount += 1;\n        }\n        if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n          isOpposing = true;\n          acc += v / 2;\n        }\n        return acc;\n      }\n      if (v === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        isDeterministic = true;\n      }\n\n      return acc + v;\n    }, 0);\n\n    const relevancy = Math.floor(((completed - unclearCount) / total) * 100);\n\n    return { completion, isDeterministic, value, isOpposing, relevancy };\n  }, [attributesList, itemAttributeValues.attributes]);\n\n  return (\n    <div>\n      <Typography.Text strong>Completion</Typography.Text>\n      <Progress percent={completion} size=\"small\" />\n      <Typography.Text strong>Stats</Typography.Text>\n      <Flex vertical>\n        <Stat label=\"Deterministic\">\n          {isDeterministic ? (\n            <CheckCircleFilled style={{ color: 'green' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red' }} />\n          )}\n        </Stat>\n        <Stat label=\"Opposing\">\n          {isOpposing ? (\n            <CheckCircleFilled style={{ color: 'CornflowerBlue' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'grey' }} />\n          )}\n        </Stat>\n        <Stat label=\"Value\">{value}</Stat>\n        <Stat label=\"Reliability\">{relevancy}%</Stat>\n      </Flex>\n    </div>\n  );\n}\n","import { Affix, Button, Card, Divider, Flex, Space, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useEffect, useMemo } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemAttributeDescription } from './ItemAttributeDescription';\nimport { ItemAttributeStats } from './ItemAttributeStats';\nimport { ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\n\nexport function ItemAttributionCard() {\n  const { activeItem, attributesList, itemAttributeValues, onAttributeChange, jumpToItem, attributes } =\n    useItemsAttributeValuesContext();\n  const { searchParams, removeQueryParam } = useItemQueryParams();\n  const queryParamsItemId = searchParams.get('itemId');\n\n  useEffect(() => {\n    if (queryParamsItemId) {\n      removeQueryParam('itemId');\n      jumpToItem('goTo', queryParamsItemId);\n    }\n  }, [queryParamsItemId, jumpToItem, removeQueryParam]);\n\n  const showOnlyUnset = searchParams.get('scope') === 'unset';\n  const filteredAttributesList = useMemo(\n    () =>\n      showOnlyUnset\n        ? attributesList.filter((attribute) => !itemAttributeValues.attributes[attribute.id])\n        : attributesList,\n    [showOnlyUnset, activeItem.id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (!activeItem)\n    return (\n      <Card>\n        <Typography.Text type=\"secondary\">\n          No item selected.{' '}\n          <Button size=\"small\" type=\"primary\" onClick={() => jumpToItem('random')}>\n            Random Item\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n\n  return (\n    <Card>\n      <div className=\"item-attribution-card\" key={`${activeItem.id}`}>\n        <Affix offsetTop={120} className=\"item-attribution-card__item\">\n          <Flex vertical gap={6}>\n            <ItemSprite item={activeItem} width={150} />\n            <ItemId item={activeItem} />\n            <ItemName item={activeItem} language=\"en\" />\n            <ItemName item={activeItem} language=\"pt\" />\n\n            <Divider className=\"my-2\" />\n            <ItemAttributeStats attributesList={attributesList} itemAttributeValues={itemAttributeValues} />\n            <Divider className=\"my-2\" />\n            <Typography.Text type=\"secondary\">\n              <ItemAttributeDescription itemAttributeValues={itemAttributeValues} attributes={attributes} />\n            </Typography.Text>\n          </Flex>\n        </Affix>\n\n        <Space size=\"small\" direction=\"vertical\" className=\"my-4 attribute-button-container\" wrap>\n          {filteredAttributesList.map((attribute, index) => (\n            <AttributionValueButtons\n              key={attribute.id}\n              attribute={attribute}\n              value={itemAttributeValues.attributes[attribute.id]}\n              onChange={onAttributeChange}\n            />\n          ))}\n        </Space>\n      </div>\n    </Card>\n  );\n}\n","import { Button, Popover } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\n\nimport {\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  LeftOutlined,\n  RightOutlined,\n  VerticalLeftOutlined,\n  VerticalRightOutlined,\n} from '@ant-design/icons';\n\nimport { ItemsTypeahead } from '../ItemsTypeahead';\n\nexport function ItemAttributionNavigation() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return (\n    <Button.Group className=\"my-4\">\n      <Button onClick={() => jumpToItem('first')} icon={<VerticalRightOutlined />}>\n        First\n      </Button>\n      <Button onClick={() => jumpToItem('previous10')} icon={<DoubleLeftOutlined />}>\n        Previous 10\n      </Button>\n      <Button onClick={() => jumpToItem('previous')} icon={<LeftOutlined />}>\n        Previous\n      </Button>\n      <Button onClick={() => jumpToItem('next')}>\n        Next <RightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('next10')}>\n        Next 10 <DoubleRightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('last')}>\n        Last <VerticalLeftOutlined />\n      </Button>\n      <Popover content={<GoToItemPopOverContent />} title=\"Title\">\n        <Button>Go To</Button>\n      </Popover>\n    </Button.Group>\n  );\n}\n\nfunction GoToItemPopOverContent() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return <ItemsTypeahead isPending={false} onFinish={(itemId) => jumpToItem('goTo', itemId)} />;\n}\n","import { Button, Card, Divider, Empty, Flex, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemSampler } from 'hooks/useItemSampler';\nimport { isEmpty } from 'lodash';\nimport { Fragment } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\n\nexport function ItemSamplerCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { sampleIds, attribute, onGetSample, updateAttributeValue } = useItemSampler();\n\n  if (isEmpty(sampleIds) && isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">\n          No sample has been generated. Tweak options and{' '}\n          <Button size=\"small\" type=\"primary\" onClick={onGetSample}>\n            Get Sample\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n  }\n\n  const sample = sampleIds.map((itemId) => ({\n    itemAttributes: getItemAttributeValues(itemId),\n    item: getItem(itemId),\n  }));\n\n  const unsetItems = sample.filter(({ itemAttributes }) => !itemAttributes.attributes[attribute!.id]);\n\n  const onMarkRestAsUnrelated = () => {\n    unsetItems.forEach(({ item }) => {\n      updateAttributeValue(item.id, attribute!.id, -3);\n    });\n  };\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} - {attribute?.description.en}\n        </Typography.Text>\n      }\n      actions={[\n        <Button onClick={onMarkRestAsUnrelated} danger disabled={unsetItems.length === 0}>\n          Mark rest as unrelated\n        </Button>,\n        <Button type=\"primary\" ghost onClick={onGetSample}>\n          Get New Sample\n        </Button>,\n      ]}\n      extra={\n        <Button type=\"primary\" size=\"small\" onClick={onGetSample}>\n          Get New Sample\n        </Button>\n      }\n    >\n      <Flex vertical gap={6}>\n        {sample.length === 0 && (\n          <Empty\n            description=\"No unset items found for this attribute.\"\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        )}\n        {sample.map(({ item, itemAttributes }) => {\n          return (\n            <Fragment key={`${item.id}-${itemAttributes.updatedAt}`}>\n              <Flex gap={6}>\n                <ItemSprite item={item} width={75} />\n                <Flex vertical gap={6}>\n                  <Flex gap={6}>\n                    <ItemId item={item} />\n                    <ItemGoTo item={item} />\n                  </Flex>\n                  <ItemName item={item} language=\"en\" />\n                  <ItemName item={item} language=\"pt\" />\n                </Flex>\n                <AttributionValueButtons\n                  attribute={attribute!}\n                  value={itemAttributes.attributes[attribute!.id]}\n                  onChange={(attributeId: string, value: number) =>\n                    updateAttributeValue(item.id, attributeId, value)\n                  }\n                />\n              </Flex>\n              <Divider className=\"my-1\" />\n            </Fragment>\n          );\n        })}\n      </Flex>\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { sample as lodashSample, shuffle } from 'lodash';\nimport { useState } from 'react';\nimport { ItemAttribute } from 'types';\n\nimport { useItemQueryParams } from './useItemQueryParams';\n\nexport function useItemSampler() {\n  const { attributesList, availableItemIds, addAttributesToUpdate, getItemAttributeValues } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n\n  const [sampleIds, setSampleIds] = useState<string[]>([]);\n  const [attribute, setAttribute] = useState<ItemAttribute>();\n\n  const getSample = () => {\n    const attributeKey = searchParams.get('attribute') ?? lodashSample(attributesList)?.id ?? 'ali';\n    const selectedAttribute =\n      attributesList.find((a) => a.id === attributeKey) ?? lodashSample(attributesList);\n    const sampleSize = Number(searchParams.get('size')) || 9;\n\n    const selected: string[] = [];\n    const options = shuffle(availableItemIds);\n\n    for (let i = 0; i < options.length; i++) {\n      if (selected.length === sampleSize) break;\n\n      const itemId = options[i];\n      const currentAttributeValues = getItemAttributeValues(itemId).attributes;\n\n      if (!currentAttributeValues[attributeKey]) {\n        selected.push(itemId);\n      }\n    }\n\n    return {\n      selectedAttribute,\n      selected,\n    };\n  };\n\n  // Create sample\n  const onGetSample = () => {\n    let tempSample = getSample();\n    let attempts = 0;\n    while (tempSample.selected.length === 0 && attempts < 30) {\n      tempSample = getSample();\n      attempts++;\n    }\n\n    setAttribute(tempSample.selectedAttribute);\n    setSampleIds(tempSample.selected);\n  };\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  return {\n    sampleIds,\n    attribute,\n    onGetSample,\n    updateAttributeValue,\n  };\n}\n","import { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport { useEffect, useState } from 'react';\n\nexport function GoToTopButton(props: ButtonProps) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const handleScroll = () => {\n    setIsVisible(window.pageYOffset > 300);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <Button\n      className={`go-to-top-button ${isVisible ? 'visible' : ''}`}\n      onClick={scrollToTop}\n      icon={<VerticalAlignTopOutlined />}\n      {...props}\n    >\n      Go to Top\n    </Button>\n  );\n}\n","import { Button, Card, Empty, Flex, Pagination, Popconfirm, Select, Typography } from 'antd';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemGrouping } from 'hooks/useItemGrouping';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMedia } from 'react-use';\n\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\nimport { AttributionValueButtons } from './AttributionValueButtons';\n\nconst getStatSentence = (stats: Record<string, number>, scope: string | null) => {\n  if (scope === 'unset' || !scope) {\n    return `${100 - stats.percent}% done, ${stats.group} left`;\n  }\n\n  return `${stats.percent}%  - ${stats.group} items`;\n};\n\nexport function ItemGroupingCard() {\n  const { getItem, getItemAttributeValues, attributesList } = useItemsAttributeValuesContext();\n\n  const { attribute, pageIds, updateAttributeValue, updatePageItemsAsUnrelated, pagination, stats, sorting } =\n    useItemGrouping();\n  const { searchParams } = useItemQueryParams();\n  const isNarrow = useMedia('(max-width: 1024px)');\n\n  if (isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">No group attribute has been selected.</Typography.Text>\n      </Card>\n    );\n  }\n\n  const paginationComponent = (\n    <Pagination\n      key=\"pagination\"\n      onChange={pagination.onChange}\n      current={pagination.current}\n      total={pagination.total}\n      pageSizeOptions={pagination.pageSizeOptions}\n      pageSize={pagination.pageSize}\n      onShowSizeChange={pagination.onShowSizeChange}\n    />\n  );\n\n  const sortingComponent = (\n    <Flex align=\"center\">\n      <Typography.Text className=\"mr-2\">Sort by</Typography.Text>\n      <Select style={{ width: 120 }} value={sorting.sortBy} onChange={(v) => sorting.setSortBy(v)}>\n        <Select.Option value={null}>Last Updated</Select.Option>\n        {attributesList.map((a) => (\n          <Select.Option key={a.id} value={a.id}>\n            {a.name.en}\n          </Select.Option>\n        ))}\n      </Select>\n    </Flex>\n  );\n\n  const isUnsetSet = searchParams.get('scope') === 'unset' || !searchParams.get('scope');\n  const unrelateButton = isUnsetSet && (\n    <Popconfirm\n      key=\"unrelate-button\"\n      title={`Are you sure everything is unrelated to ${attribute.name.en}?`}\n      onConfirm={updatePageItemsAsUnrelated}\n    >\n      <Button type=\"primary\" danger disabled={pageIds.length === 0}>\n        Unrelate Unset Items on Page\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} ({getStatSentence(stats, searchParams.get('scope'))}) -{' '}\n          {attribute.description.en}\n        </Typography.Text>\n      }\n      extra={\n        <Flex align=\"center\">\n          {sortingComponent}\n\n          {paginationComponent}\n        </Flex>\n      }\n      actions={[unrelateButton, <GoToTopButton key=\"go-to-top\" />, paginationComponent].filter(Boolean)}\n    >\n      {pageIds.length === 0 && (\n        <Empty\n          description=\"No items found in this scope for this attribute.\"\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n        />\n      )}\n      {pageIds.map((itemId) => {\n        const itemAttributes = getItemAttributeValues(itemId);\n        const item = getItem(itemId);\n\n        return (\n          <Card.Grid\n            key={`${itemId}-${itemAttributes.updatedAt}`}\n            style={{ width: isNarrow ? '50%' : '25%' }}\n          >\n            <Flex gap={6}>\n              <Flex vertical gap={6}>\n                <ItemSprite item={item} width={75} />\n                <ItemId item={item} />\n                <ItemGoTo item={item} />\n                <ItemName item={item} language=\"en\" />\n                <ItemName item={item} language=\"pt\" />\n              </Flex>\n              <AttributionValueButtons\n                attribute={attribute!}\n                value={itemAttributes.attributes[attribute!.id]}\n                onlyButtons\n                onChange={(attributeId: string, value: number) =>\n                  updateAttributeValue(item.id, attributeId, value)\n                }\n              />\n            </Flex>\n          </Card.Grid>\n        );\n      })}\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useMemo, useState } from 'react';\n\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport { orderBy } from 'lodash';\n\nexport function useItemGrouping() {\n  const {\n    attributesList,\n    addAttributesToUpdate,\n    getItemAttributeValues,\n    availableItemIds,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  const attributeKey = searchParams.get('attribute') ?? 'ali';\n  const scope = searchParams.get('scope') ?? 'unset';\n\n  const page = searchParams.get('page') ?? '1';\n  const pageSize = searchParams.get('pageSize') ?? '12';\n\n  const [previousAttribute, setPreviousAttribute] = useState<string>('ali');\n  const [previousScope, setPreviousScope] = useState<string>('unset');\n\n  const [sortBy, setSortBy] = useState<string | null>(null);\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n\n  const group = useMemo(() => {\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    const scopeValue =\n      scope === 'unset' ? undefined : ATTRIBUTE_VALUE[scope.toUpperCase() as keyof typeof ATTRIBUTE_VALUE];\n\n    const filteredItemIds = itemsAttributes\n      .filter((item) => item.attributes?.[attributeKey] === scopeValue)\n      .map((item) => item.id);\n\n    return orderBy(\n      filteredItemIds,\n      [\n        (id) => (sortBy ? getItemAttributeValues(id)?.attributes?.[sortBy] : true),\n        (id) => getItemAttributeValues(id)?.updatedAt,\n        (id) => Number(id),\n      ],\n      [sortOrder, 'desc', 'asc']\n    );\n  }, [attributeKey, scope, sortBy, sortOrder]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const pageIds = useMemo(() => {\n    if (previousAttribute !== attributeKey || previousScope !== scope) {\n      setPreviousAttribute(attributeKey);\n      setPreviousScope(scope);\n      addQueryParam('page', '1');\n      return group.slice(0, Number(pageSize));\n    }\n\n    const start = (Number(page) - 1) * Number(pageSize);\n    const end = start + Number(pageSize);\n\n    return group.slice(start, end);\n  }, [page, pageSize, group]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const attribute = attributesList.find((a) => a.id === attributeKey);\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const updatePageItemsAsUnrelated = () => {\n    addMultipleAttributesToUpdate(\n      pageIds.map((id) => {\n        const prev = getItemAttributeValues(id);\n        if (!prev.attributes[attributeKey]) {\n          prev.attributes[attributeKey] = ATTRIBUTE_VALUE.UNRELATED;\n        }\n\n        return prev;\n      })\n    );\n  };\n\n  return {\n    group,\n    stats: {\n      total: availableItemIds.length,\n      group: group.length,\n      percent: Math.round((group.length / availableItemIds.length) * 100),\n    },\n    pageIds,\n    attribute,\n    updateAttributeValue,\n    updatePageItemsAsUnrelated,\n    sorting: {\n      sortBy,\n      setSortBy,\n      sortOrder,\n      setSortOrder,\n    },\n    pagination: {\n      total: group.length,\n      current: Number(page),\n      pageSize: Number(pageSize),\n      onChange: (page: number) => addQueryParam('page', String(page)),\n      onShowSizeChange: (_: number, pageSize: number) => addQueryParam('pageSize', String(pageSize)),\n      pageSizeOptions: [12, 24, 48, 96],\n    },\n  };\n}\n","import { Flex, Table, TableColumnsType, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { ItemMessageObject, useItemsComparator } from 'hooks/useItemsComparator';\nimport { Item } from 'types';\n\nimport { AttributeSprite } from './ItemAttributeDescription';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\n\nexport function ItemComparatorCard() {\n  const { attributes } = useItemsAttributeValuesContext();\n  const { itemMessages, grouping } = useItemsComparator();\n\n  const columns: TableColumnsType<ItemMessageObject> = [\n    {\n      title: 'Item Id',\n      dataIndex: 'item',\n      key: 'id',\n      render: (item: Item) => (\n        <div>\n          <ItemId item={item} />\n          <ItemGoTo item={item} />\n        </div>\n      ),\n      sorter: (a, b) => Number(a.item.id) - Number(b.item.id),\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'item',\n      key: 'sprite',\n      render: (item: Item) => <ItemSprite item={item} width={75} />,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'item',\n      key: 'name',\n      render: (item: Item) => (\n        <>\n          <ItemName item={item} language=\"en\" />\n          <ItemName item={item} language=\"pt\" />\n        </>\n      ),\n      sorter: (a, b) => a.item.name.en.localeCompare(b.item.name.en),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'message',\n      key: 'message',\n      render: (message: string[], { item }) => (\n        <Flex gap={6}>\n          {message.map((keyVariant, index, arr) => (\n            <AttributeSprite\n              key={`${keyVariant}-${item.id}`}\n              keyVariant={keyVariant}\n              attributes={attributes}\n              firstElement={index === 0}\n              lastElement={index === arr.length - 1}\n              withText\n            />\n          ))}\n        </Flex>\n      ),\n      sorter: (a, b) => a.message.join(' ').localeCompare(b.message.join(' ')),\n    },\n    {\n      title: 'Complete',\n      dataIndex: 'itemAttributesValues',\n      key: 'complete',\n      render: (itemAttributesValues: { complete: boolean }) => (itemAttributesValues.complete ? 'Yes' : 'No'),\n    },\n    {\n      title: 'Identical',\n      dataIndex: 'message',\n      key: 'identical',\n      render: (message: string[]) => {\n        const group = grouping[message.join(' ')] ?? [];\n        return <>{group.length > 1 ? group.length : ''}</>;\n      },\n      sorter: (a, b) => {\n        const groupA = grouping[a.message.join(' ')] ?? [];\n        const groupB = grouping[b.message.join(' ')] ?? [];\n        return groupB.length - groupA.length;\n      },\n    },\n  ];\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Item Comparator</Typography.Title>\n      <Table dataSource={itemMessages} columns={columns} pagination={{ showQuickJumper: true }} />\n    </div>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keyBy, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { filterMessage, getItemAttributePriorityResponse } from 'utils';\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { Item, ItemAtributesValues } from 'types';\n\nexport type ItemMessageObject = {\n  item: Item;\n  itemAttributesValues: ItemAtributesValues;\n  message: string[];\n  fullMessage: string[];\n};\n\nexport function useItemsComparator() {\n  const { attributes, getItemAttributeValues, availableItemIds, getItem, isLoading } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n  const showComplete = searchParams.get('showComplete') === 'true';\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const { itemMessages, itemMessagesDict, grouping } = useMemo(() => {\n    if (isLoading) {\n      const itemMessages: ItemMessageObject[] = [];\n      return {\n        itemMessages,\n        itemMessagesDict: {},\n        grouping: {},\n      };\n    }\n\n    const itemMessages = orderBy(\n      availableItemIds\n        .map((id) => {\n          const itemAttributesValues = getItemAttributeValues(id);\n          const itemMessage = getItemAttributePriorityResponse(itemAttributesValues, attributes);\n          return {\n            item: getItem(id),\n            itemAttributesValues,\n            message: filterMessage(itemMessage, showUnclear, showUnrelated),\n            fullMessage: itemMessage,\n          };\n        })\n        .filter(({ itemAttributesValues }) => (showComplete ? itemAttributesValues.complete : true)),\n      ['message'],\n      ['asc']\n    );\n\n    const grouping = itemMessages.reduce((acc: Dictionary<string[]>, { message, item: { id } }) => {\n      const key = message.join(' ');\n\n      if (acc[key] === undefined) {\n        acc[key] = [];\n      }\n      acc[key].push(id);\n\n      return acc;\n    }, {});\n\n    const moreThanOne = Object.values(grouping).filter((ids) => ids.length > 1);\n    if (moreThanOne.length > 0) {\n      console.log('More than one', moreThanOne);\n    }\n\n    return {\n      itemMessages,\n      itemMessagesDict: keyBy(itemMessages, 'item.id'),\n      grouping,\n    };\n  }, [\n    attributes,\n    availableItemIds,\n    getItemAttributeValues,\n    getItem,\n    isLoading,\n    showComplete,\n    showUnclear,\n    showUnrelated,\n  ]);\n\n  return {\n    itemMessages,\n    itemMessagesDict,\n    grouping,\n  };\n}\n","import { App, Button, Flex, InputNumber, Space, Typography } from 'antd';\nimport {\n  FilterCheckBox,\n  FilterNumber,\n  FilterSelect,\n  FilterSwitch,\n  TransparentButton,\n} from 'components/Common';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keys, sampleSize, shuffle, sortBy } from 'lodash';\nimport { useState } from 'react';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from '../ItemBuildingBlocks';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport clsx from 'clsx';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport {\n  CheckSquareOutlined,\n  CloseSquareOutlined,\n  LineChartOutlined,\n  PlusSquareOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\n\nconst ROMAN_NUMERALS = ['', 'I', 'II', 'III', 'IV', 'V'];\n\ntype AttributeSummary = {\n  relatedCount: number;\n  deterministicCount: number;\n  unclearCount: number;\n  oppositeCount: number;\n} & ItemAttribute;\n\nexport function ItemSimulation() {\n  const { attributes, availableItemIds, getItemAttributeValues, getItem } = useItemsAttributeValuesContext();\n  const { message } = App.useApp();\n\n  const [gridSize, setGridSize] = useState<16 | 25>(25);\n  const [reliabilityThreshold, setReliabilityThreshold] = useState<number>(90);\n  const [nsfw, setNsfw] = useState<boolean>(false);\n  const [selectedItemsIds, setSelectedItemsIds] = useState<string[]>([]);\n  const [selectedAttributes, setSelectedAttributes] = useState<AttributeSummary[]>([]);\n  const [highlightedAttributeKey, setHighlightedAttributeKey] = useState<string | null>(null);\n  const [displays, setDisplays] = useState<BooleanDictionary>({\n    id: true,\n    nameEn: true,\n    namePt: true,\n    reliability: true,\n  });\n\n  const onGetSample = () => {\n    const keysDict: Record<string, string> = {};\n\n    const shuffledIds = shuffle(availableItemIds);\n\n    while (Object.values(keysDict).length < gridSize) {\n      const itemId = shuffledIds.pop();\n      if (!itemId) break;\n\n      const itemAttributeValues = getItemAttributeValues(itemId);\n\n      if (!itemAttributeValues) continue;\n      if (\n        !itemAttributeValues.complete ||\n        !itemAttributeValues.reliability ||\n        itemAttributeValues.reliability < reliabilityThreshold\n      )\n        continue;\n\n      if (!nsfw && getItem(itemId).nsfw) continue;\n\n      if (itemAttributeValues.key && !keysDict[itemAttributeValues.key]) {\n        keysDict[itemAttributeValues.key] = itemId;\n      } else {\n        console.log('Item has identical key to another item. Skipping.', getItem(itemId).name.en);\n      }\n    }\n    const result = Object.values(keysDict);\n    if (result.length < gridSize) {\n      message.error(`Could not generate sample. Got only ${result.length} items`);\n    }\n\n    setSelectedItemsIds(sortBy(result, (itemId) => Number(itemId)));\n\n    // Get the most common attributes\n    const attributesResult = getHighestAttributeKeys(\n      result.map((itemId) => getItemAttributeValues(itemId)),\n      25,\n      attributes\n    );\n\n    // If less than 25 attributes are found, add more by priority\n    if (attributesResult.length < 25) {\n      const remainingAttributes = keys(attributes).filter((key) => !attributesResult.includes(key));\n      const remainingAttributesByPriority = sortBy(remainingAttributes, (key) => attributes[key].priority);\n      const toBeAdded = remainingAttributesByPriority.slice(0, 25 - attributesResult.length);\n      console.log('Adding more attributes by priority', toBeAdded);\n      attributesResult.push(...toBeAdded);\n    }\n\n    const dicts = attributesResult.reduce(\n      (\n        acc: {\n          relatedCount: NumberDictionary;\n          deterministicCount: NumberDictionary;\n          unclearCount: NumberDictionary;\n          oppositeCount: NumberDictionary;\n        },\n        key\n      ) => {\n        result.forEach((itemId) => {\n          const itemAttributeValues = getItemAttributeValues(itemId);\n          if (!itemAttributeValues) return;\n          switch (itemAttributeValues.attributes[key]) {\n            case ATTRIBUTE_VALUE.RELATED:\n              acc.relatedCount[key] = (acc.relatedCount[key] || 0) + 1;\n              break;\n            case ATTRIBUTE_VALUE.DETERMINISTIC:\n              acc.deterministicCount[key] = (acc.deterministicCount[key] || 0) + 1;\n              break;\n            case ATTRIBUTE_VALUE.UNCLEAR:\n              acc.unclearCount[key] = (acc.unclearCount[key] || 0) + 1;\n              break;\n            case ATTRIBUTE_VALUE.OPPOSITE:\n              acc.oppositeCount[key] = (acc.oppositeCount[key] || 0) + 1;\n              break;\n          }\n        });\n\n        return acc;\n      },\n      { relatedCount: {}, deterministicCount: {}, unclearCount: {}, oppositeCount: {} }\n    );\n\n    setSelectedAttributes(\n      attributesResult.sort().map((key) => ({\n        ...attributes[key],\n        relatedCount: dicts.relatedCount[key],\n        deterministicCount: dicts.deterministicCount[key],\n        unclearCount: dicts.unclearCount[key],\n        oppositeCount: dicts.oppositeCount[key],\n      }))\n    );\n  };\n\n  const onUpdateDisplays = (key: string) => {\n    setDisplays((prev) => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Simulator</Typography.Title>\n\n      <Typography.Paragraph>\n        Generates a board with items different enough to get Deterministic values in all selected attributes.\n      </Typography.Paragraph>\n\n      <Flex wrap gap={12}>\n        <FilterSelect\n          label=\"Grid Size\"\n          value={gridSize}\n          onChange={(value) => setGridSize(value)}\n          options={[16, 25]}\n        />\n        <FilterNumber\n          label=\"Reliability Threshold\"\n          value={reliabilityThreshold}\n          onChange={(value) => setReliabilityThreshold(value)}\n          step={5}\n          min={10}\n          max={100}\n        />\n        <FilterSwitch label=\"NSFW\" value={nsfw} onChange={setNsfw} />\n        <Button onClick={onGetSample} type=\"primary\">\n          Get Sample Board\n        </Button>\n      </Flex>\n      <Flex wrap gap={12}>\n        <FilterCheckBox label=\"Show Id\" value={!!displays.id} onChange={() => onUpdateDisplays('id')} />\n        <FilterCheckBox\n          label=\"Show Name (EN)\"\n          value={!!displays.nameEn}\n          onChange={() => onUpdateDisplays('nameEn')}\n        />\n        <FilterCheckBox\n          label=\"Show Name (PT)\"\n          value={!!displays.namePt}\n          onChange={() => onUpdateDisplays('namePt')}\n        />\n        <FilterCheckBox\n          label=\"Show Reliability\"\n          value={!!displays.reliability}\n          onChange={() => onUpdateDisplays('reliability')}\n        />\n      </Flex>\n\n      <div className=\"simulator-grid\" style={{ gridTemplateColumns: `repeat(${Math.sqrt(gridSize)}, 1fr)` }}>\n        {selectedItemsIds.map((itemId) => {\n          const item = getItem(itemId);\n          const itemAttributeValues = getItemAttributeValues(itemId);\n          return (\n            <Space\n              key={itemId}\n              direction=\"vertical\"\n              className={clsx(\n                'simulator-grid__entry',\n                highlightedAttributeKey &&\n                  itemAttributeValues.attributes[highlightedAttributeKey] > 0 &&\n                  'simulator-grid__entry--highlighted'\n              )}\n              align=\"center\"\n            >\n              <Space>\n                <Flex vertical>\n                  {displays.id && <ItemId item={item} />}\n\n                  {displays.reliability && (\n                    <span>\n                      <InputNumber\n                        prefix={<LineChartOutlined />}\n                        placeholder=\"Reliability\"\n                        variant=\"borderless\"\n                        size=\"small\"\n                        value={itemAttributeValues.reliability}\n                        readOnly\n                        style={{ width: '8ch' }}\n                        formatter={(value) => `${value}%`}\n                      />\n                    </span>\n                  )}\n\n                  {displays.id && <ItemGoTo item={item} />}\n                </Flex>\n\n                <ItemSprite item={item} width={50} />\n              </Space>\n\n              {displays.nameEn && <ItemName item={item} language=\"en\" />}\n              {displays.namePt && <ItemName item={item} language=\"pt\" />}\n            </Space>\n          );\n        })}\n      </div>\n\n      <div className=\"simulator-grid my-4\">\n        {selectedAttributes.map((attributeSummary) => (\n          <TransparentButton\n            key={attributeSummary.id}\n            className={clsx(\n              'simulator-grid__entry',\n              'simulator-grid__button',\n              highlightedAttributeKey === attributeSummary.id && 'simulator-grid__entry--highlighted'\n            )}\n            onClick={() => setHighlightedAttributeKey(attributeSummary.id)}\n          >\n            {attributeSummary.name.en} {ROMAN_NUMERALS[attributeSummary.level]}\n            <Flex gap={6} justify=\"center\" className=\"my-1\">\n              <span>\n                <CheckSquareOutlined\n                  style={{ color: attributeSummary.deterministicCount ? 'dodgerblue' : undefined }}\n                />{' '}\n                {attributeSummary.deterministicCount ?? 0}\n              </span>\n              <span>\n                <PlusSquareOutlined style={{ color: attributeSummary.relatedCount ? 'green' : undefined }} />{' '}\n                {attributeSummary.relatedCount ?? 0}\n              </span>\n              <span>\n                <CloseSquareOutlined style={{ color: attributeSummary.oppositeCount ? 'red' : undefined }} />{' '}\n                {attributeSummary.oppositeCount ?? 0}\n              </span>\n              <span>\n                <QuestionCircleOutlined\n                  style={{ color: attributeSummary.unclearCount ? 'gold' : undefined }}\n                />{' '}\n                {attributeSummary.unclearCount ?? 0}\n              </span>\n            </Flex>\n          </TransparentButton>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction getHighestAttributeKeys(\n  selectedItemsAttributesValues: ItemAtributesValues[],\n  quantity: number,\n  attributes: Dictionary<ItemAttribute>\n): string[] {\n  // 1. Count the number of times each attribute is present. Make sure to gather any deterministic value\n  const attributesCounts: Record<string, number> = {};\n  const deterministicKeysDict: BooleanDictionary = {};\n  selectedItemsAttributesValues.forEach((itemAttributeValues) => {\n    if (!itemAttributeValues) return;\n    Object.keys(itemAttributeValues.attributes).forEach((key) => {\n      if (itemAttributeValues.attributes[key] > 0) {\n        attributesCounts[key] = (attributesCounts[key] || 0) + 1;\n      }\n      if (itemAttributeValues.attributes[key] === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        deterministicKeysDict[key] = true;\n        attributesCounts[key] = (attributesCounts[key] || 0) + 2;\n      }\n      if (itemAttributeValues.attributes[key] === ATTRIBUTE_VALUE.OPPOSITE) {\n        attributesCounts[key] = (attributesCounts[key] || 0) + 1;\n      }\n    });\n  });\n\n  const levelCount: NumberDictionary = {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n  };\n\n  /**\n   * Filters the given keys array based on the count of attribute levels and guards against having more than one level 4 attribute.\n   */\n  function filterCountLevelsAndGuardLevel4(keys: string[]) {\n    return keys.filter((key) => {\n      levelCount[attributes[key].level]++;\n\n      if (levelCount[4] > 1) {\n        console.log('Discarding level 4 attribute', key);\n        return false;\n      }\n      return true;\n    });\n  }\n\n  const deterministicKeys = filterCountLevelsAndGuardLevel4(Object.keys(deterministicKeysDict));\n  const nondeterministicKeys = filterCountLevelsAndGuardLevel4(\n    keys(attributesCounts).filter((key) => !deterministicKeys.includes(key))\n  );\n  console.log({ levelCount });\n\n  // 1.b If deterministic keys are exactly the quantity, return them\n  if (quantity === deterministicKeys.length) {\n    console.log('All keys are deterministic');\n    return deterministicKeys;\n  }\n\n  // 2. Get all keys and sort them by value in descending order, but have only one level 5 attribute\n  console.log(attributesCounts);\n  // let hasLevel5Attribute = false;\n  // const sortedKeys = keys(attributesCounts)\n  //   .sort((a, b) => {\n  //     if (attributesCounts[a] !== attributesCounts[b]) {\n  //       return attributesCounts[b] - attributesCounts[a];\n  //     }\n\n  //     return attributes[a].priority - attributes[b].priority;\n  //   })\n  //   .filter((key) => {\n  //     if (attributes[key].level !== 4) return true;\n\n  //     if (!hasLevel5Attribute) {\n  //       console.log('Keeping level 4 attribute', key, attributesCounts[key]);\n  //       hasLevel5Attribute = true;\n  //       return true;\n  //     }\n  //     console.log('Discarding level 4 attribute', key, attributesCounts[key]);\n\n  //     return false;\n  //   });\n\n  // console.log(sortedKeys);\n\n  // 2.b. Handle edge cases: empty object or quantity exceeding keys\n  if (deterministicKeys.length === 0) {\n    return [];\n  }\n\n  const deterministicTiedGroups = deterministicKeys.reduce((acc: Record<string, string[]>, key) => {\n    const value = attributesCounts[key];\n    if (!acc[value]) {\n      acc[value] = [];\n    }\n    acc[value].push(key);\n    return acc;\n  }, {});\n  const sortedDeterministicTiedGroupsKeys = keys(deterministicTiedGroups).sort(\n    (a, b) => Number(b) - Number(a)\n  );\n  console.log({ sortedDeterministicTiedGroupsKeys });\n\n  const nondeterministicTiedGroups = nondeterministicKeys.reduce((acc: Record<string, string[]>, key) => {\n    const value = attributesCounts[key];\n    if (!acc[value]) {\n      acc[value] = [];\n    }\n    acc[value].push(key);\n    return acc;\n  }, {});\n  console.log(nondeterministicTiedGroups);\n  const sortedNondeterministicTiedGroupsKeys = keys(nondeterministicTiedGroups).sort(\n    (a, b) => Number(b) - Number(a)\n  );\n\n  let result: string[] = [];\n\n  for (const group of sortedDeterministicTiedGroupsKeys) {\n    if (result.length === quantity) {\n      break;\n    }\n    result.push(...sampleSize(deterministicTiedGroups[group], quantity - result.length));\n  }\n\n  for (const group of sortedNondeterministicTiedGroupsKeys) {\n    if (result.length === quantity) {\n      break;\n    }\n    result.push(...sampleSize(nondeterministicTiedGroups[group], quantity - result.length));\n  }\n\n  return result;\n}\n","import { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAttributionCard } from './ItemAttributionCard';\nimport { ItemAttributionNavigation } from './ItemAttributionNavigation';\nimport { Empty, Flex } from 'antd';\nimport { ItemSamplerCard } from './ItemSamplerCard';\nimport { ItemGroupingCard } from './ItemGroupingCard';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { ItemComparatorCard } from './ItemComparatorCard';\nimport { ItemSimulation } from './ItemSimulation';\n\nexport function ItemAttributionPageContent() {\n  const { view } = useItemQueryParams();\n\n  if (view === 'classifier') {\n    return (\n      <>\n        <ItemAttributionNavigation />\n        <ItemAttributionCard />\n        <Flex justify=\"flex-end\" className=\"my-4\">\n          <GoToTopButton />\n        </Flex>\n      </>\n    );\n  }\n\n  if (view === 'sampler') {\n    return <ItemSamplerCard />;\n  }\n\n  if (view === 'grouping') {\n    return <ItemGroupingCard />;\n  }\n\n  if (view === 'comparator') {\n    return <ItemComparatorCard />;\n  }\n\n  if (view === 'simulator') {\n    return <ItemSimulation />;\n  }\n\n  return <Empty className=\"my-10\" description=\"Unknown view has been selected\" />;\n}\n","import { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterNumber, FilterSelect, FilterSwitch } from 'components/Common';\nimport { Stat } from 'components/Common/Stat';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMemo } from 'react';\nimport { ATTRIBUTE_GROUP_VALUES } from 'utils/constants';\n\nexport function ItemAttributionStats() {\n  const { getItemAttributeValues, availableItemIds, attributesList } = useItemsAttributeValuesContext();\n\n  const {\n    total,\n    complete,\n    completionPercentage,\n    hasDataCount,\n    initiatedPercentage,\n    progress,\n    progressTotal,\n    currentProgress,\n  } = useMemo(() => {\n    const total = availableItemIds.length;\n    let someData = 0;\n    let complete = 0;\n    let currentProgress = 0;\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    itemsAttributes.forEach(({ complete: isComplete, attributes }) => {\n      if (!isEmpty(attributes)) {\n        someData += 1;\n      }\n      if (Object.values(attributes).length === attributesList.length) {\n        complete += 1;\n      }\n\n      currentProgress += Object.values(attributes).length;\n    });\n\n    const progressTotal = Object.values(attributesList).length * availableItemIds.length;\n\n    return {\n      total,\n      complete,\n      completionPercentage: total > 0 ? ((complete / total) * 100).toFixed(1) : 0,\n      hasDataCount: someData,\n      initiatedPercentage: total > 0 ? Math.floor((someData / total) * 100) : 0,\n      progress: ((currentProgress / progressTotal) * 100).toFixed(1),\n      currentProgress,\n      progressTotal,\n    };\n  }, [attributesList, availableItemIds, getItemAttributeValues]);\n\n  return (\n    <>\n      <Flex vertical>\n        <Typography.Text strong className=\"mb-2\">\n          Items Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{total}</Stat>\n        <Stat label=\"Complete\">\n          {complete} ({completionPercentage}%)\n        </Stat>\n        <Stat label=\"Initiated\">\n          {hasDataCount} ({initiatedPercentage}%)\n        </Stat>\n        <Typography.Text strong className=\"mt-4 mb-2\">\n          Attributes Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{progressTotal}</Stat>\n        <Stat label=\"Set\">{currentProgress}</Stat>\n        <Stat label=\"Progress\">{progress}%</Stat>\n      </Flex>\n      <Divider />\n    </>\n  );\n}\n\nexport function ItemAttributionClassifierFilters() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  return (\n    <>\n      <Button block onClick={() => jumpToItem('random')} type=\"primary\">\n        Random Item\n      </Button>\n      <FilterSwitch\n        label=\"Unset Only\"\n        value={searchParams.get('scope') === 'unset'}\n        onChange={(value) => addQueryParam('scope', value ? 'unset' : '')}\n        className=\"mt-4\"\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionSamplerFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return [\n      { label: 'Random Attribute', value: 'random' },\n      ...attributesList.map(({ id, name }) => ({ label: name.en, value: id })),\n    ];\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Sampler Attribute\"\n        value={searchParams.get('attribute') || 'random'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n      <FilterNumber\n        label=\"Sample Size\"\n        value={Number(searchParams.get('size') || 9)}\n        onChange={(v) => addQueryParam('size', String(v))}\n        min={3}\n        max={21}\n        step={3}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionGroupingFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return attributesList.map(({ id, name, ...rest }) => ({\n      label: `${name.en}${rest.default ? '*' : ''}`,\n      value: id,\n    }));\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Attribute\"\n        value={searchParams.get('attribute') || 'ali'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n\n      <FilterSelect\n        label=\"Scope\"\n        value={searchParams.get('scope') || 'unset'}\n        onChange={(v) => addQueryParam('scope', v)}\n        options={[{ value: 'unset', label: 'Unset' }, ...ATTRIBUTE_GROUP_VALUES]}\n      />\n\n      <FilterSelect\n        label=\"Results per page\"\n        value={searchParams.get('pageSize') || 12}\n        onChange={(v) => addQueryParam('pageSize', v)}\n        options={[12, 24, 48, 96]}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionComparatorFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  return (\n    <>\n      <FilterSwitch\n        label=\"Only Complete\"\n        value={searchParams.get('showComplete') === 'true'}\n        onChange={(v) => addQueryParam('showComplete', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n    </>\n  );\n}\n","import { Divider, Flex } from 'antd';\nimport { FilterSelect } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { getItemAttributePriorityResponse, sortJsonKeys } from 'utils';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nimport {\n  ItemAttributionClassifierFilters,\n  ItemAttributionComparatorFilters,\n  ItemAttributionGroupingFilters,\n  ItemAttributionSamplerFilters,\n  ItemAttributionStats,\n} from './ItemAttributionFiltersSections';\n\nexport function ItemAttributionFilters() {\n  const { isDirty, save, prepareItemsAttributesFileForDownload, attributes, isSaving, attributesToUpdate } =\n    useItemsAttributeValuesContext();\n\n  const { view, setView } = useItemQueryParams();\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(attributesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(prepareItemsAttributesFileForDownload(), attributes)}\n          fileName=\"items-attribute-values.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider />\n\n      <ItemAttributionStats />\n\n      <FilterSelect\n        label=\"View\"\n        value={view}\n        onChange={setView}\n        options={['classifier', 'sampler', 'grouping', 'comparator', 'simulator']}\n      />\n      <Divider />\n\n      {view === 'classifier' && <ItemAttributionClassifierFilters />}\n      {view === 'sampler' && <ItemAttributionSamplerFilters />}\n      {view === 'grouping' && <ItemAttributionGroupingFilters />}\n      {view === 'comparator' && <ItemAttributionComparatorFilters />}\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(\n  itemsAttributes: Dictionary<ItemAtributesValues>,\n  attributes: Dictionary<ItemAttribute>\n) {\n  const total = Object.keys(attributes).length;\n\n  Object.keys(itemsAttributes).forEach((key) => {\n    const itemAttributeValues = itemsAttributes[key];\n\n    // Check completion\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n\n    if (completed === total) {\n      // Add completion\n      itemAttributeValues.complete = true;\n\n      // Add score\n      let unclearCount = 0;\n      const score = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n        if (v <= 0) {\n          if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n            unclearCount += 1;\n          }\n          if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n            acc += v / 2;\n          }\n          return acc;\n        }\n\n        return acc + v;\n      }, 0);\n      itemAttributeValues.score = score;\n\n      // Add reliability\n      itemAttributeValues.reliability = Math.floor(((completed - unclearCount) / total) * 100);\n\n      // Add key with only relevant attributes\n      itemAttributeValues.key = getItemAttributePriorityResponse(itemAttributeValues, attributes, true).join(\n        ''\n      );\n    }\n  });\n\n  return sortJsonKeys(itemsAttributes);\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemAttributionPageContent } from 'components/Items/Attributes/ItemAttributionPageContent';\nimport { ItemAttributionFilters } from 'components/Items/Attributes/ItemAttributionFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport {\n  ItemsAttributeValuesProvider,\n  useItemsAttributeValuesContext,\n} from 'context/ItemsAttributeValuesContext';\n\nfunction ItemsAttributionPage() {\n  const { isLoading, error, hasResponseData } = useItemsAttributeValuesContext();\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Attribution\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemAttributionFilters />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            <ItemAttributionPageContent />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nfunction ItemsAttribution() {\n  return (\n    <ItemsAttributeValuesProvider>\n      <ItemsAttributionPage />\n    </ItemsAttributeValuesProvider>\n  );\n}\n\nexport default ItemsAttribution;\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","label","SaveButton","onSave","isSaving","dirt","interval","buttonProps","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","disabled","danger","block","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","value","onChange","options","placeholder","style","minWidth","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","FilterCheckBox","e","target","FilterSegments","option","title","ItemSprite","item","id","name","en","pt","ItemId","copyToClipboard","useCopyToClipboardFunction","prefix","nsfw","variant","readOnly","ItemName","toUpperCase","ItemNsfw","ItemGoTo","setSearchParams","useSearchParams","shape","itemId","view","ItemsTypeahead","items","isPending","allowClear","onFinish","tdrItemsQuery","useTDResource","Boolean","namesDict","useMemo","Object","values","reduce","acc","nameEn","namePt","aliasesEn","forEach","alias","aliasesPt","orderBy","keys","toLowerCase","filteredOptions","setFilteredOptions","useState","typedText","setTypedText","useDebounce","handleSearch","searchText","SEARCH","trim","filtered","filter","String","includes","sorted","idMatch","match","index","indexOf","filterOption","inputValue","onSearch","notFoundContent","length","onSelect","key","undefined","onPressEnter","state","useCopyToClipboard","App","info","truncate","omission","success","updateQueryFunction","path","docId","docRef","doc","firestore","updateDoc","useUpdateFirebaseDoc","useMutation","mutationFn","async","useItemQueryParams","searchParams","get","setView","addQueryParam","set","removeQueryParam","delete","globalNewItemsAttributesValues","ItemsAttributeValuesContext","createContext","getItem","getNewItem","getItemAttributeValues","getNewItemAttributeValues","jumpToItem","activeItem","itemAttributeValues","onAttributeChange","save","attributesList","availableItemIds","addAttributesToUpdate","addMultipleAttributesToUpdate","prepareItemsAttributesFileForDownload","attributes","attributesToUpdate","ItemsAttributeValuesProvider","notification","queryClient","useQueryClient","tdrAttributesQuery","tdrItemsAttributesValuesQuery","firebaseItemsAttributeValuesQuery","useGetFirebaseDoc","select","deserializeFirebaseData","modifiedAttributeValues","setModifiedAttributeValues","mutation","onSuccess","refetchQueries","queryKey","onError","description","savedItemsAttributeValues","isEmpty","firebaseData","decks","Number","storedValue","modifiedValue","merge","mutate","serializeFirebaseData","prev","updatedAt","itemsArr","mapKeys","useItemsAttribution","itemIndex","setItemIndex","random","Provider","direction","attributeId","sortJsonKeys","complete","useItemsAttributeValuesContext","useContext","attributeOptions","ATTRIBUTE_VALUE","attributeLimitedOptions","AttributionValueButtons","attribute","onlyButtons","limited","optionType","buttonStyle","QuestionCircleOutlined","CheckCircleFilled","ItemAttributeDescription","showUnclear","showUnrelated","filteredResponse","filterMessage","getItemAttributePriorityResponse","Component","AttributeSprite","AttributeText","gap","vertical","wrap","keyVariant","arr","firstElement","lastElement","withText","text","parseAttribute","align","spriteId","justify","maxWidth","textAlign","wordBreak","suffix","Stat","ItemAttributeStats","completion","isDeterministic","isOpposing","relevancy","total","completed","Math","floor","unclearCount","strong","percent","CloseCircleOutlined","ItemAttributionCard","queryParamsItemId","showOnlyUnset","filteredAttributesList","offsetTop","ItemAttributionNavigation","VerticalRightOutlined","DoubleLeftOutlined","LeftOutlined","RightOutlined","DoubleRightOutlined","VerticalLeftOutlined","content","GoToItemPopOverContent","ItemSamplerCard","sampleIds","onGetSample","updateAttributeValue","setSampleIds","setAttribute","getSample","attributeKey","lodashSample","selectedAttribute","find","a","sampleSize","selected","shuffle","i","push","tempSample","attempts","currentItemAttributeValues","useItemSampler","sample","itemAttributes","unsetItems","actions","ghost","extra","image","Empty","Fragment","GoToTopButton","isVisible","setIsVisible","handleScroll","pageYOffset","scrollTo","top","behavior","VerticalAlignTopOutlined","getStatSentence","stats","scope","group","ItemGroupingCard","pageIds","updatePageItemsAsUnrelated","pagination","sorting","page","pageSize","previousAttribute","setPreviousAttribute","previousScope","setPreviousScope","sortBy","setSortBy","sortOrder","setSortOrder","itemsAttributes","scopeValue","filteredItemIds","slice","start","end","round","current","onShowSizeChange","_","pageSizeOptions","useItemGrouping","isNarrow","useMedia","paginationComponent","sortingComponent","unrelateButton","onConfirm","ItemComparatorCard","itemMessages","grouping","showComplete","itemMessagesDict","itemAttributesValues","itemMessage","fullMessage","join","moreThanOne","ids","keyBy","useItemsComparator","columns","dataIndex","render","sorter","b","localeCompare","groupA","dataSource","showQuickJumper","ROMAN_NUMERALS","ItemSimulation","gridSize","setGridSize","reliabilityThreshold","setReliabilityThreshold","setNsfw","selectedItemsIds","setSelectedItemsIds","selectedAttributes","setSelectedAttributes","highlightedAttributeKey","setHighlightedAttributeKey","displays","setDisplays","reliability","onUpdateDisplays","keysDict","shuffledIds","pop","result","attributesResult","selectedItemsAttributesValues","quantity","attributesCounts","deterministicKeysDict","levelCount","filterCountLevelsAndGuardLevel4","deterministicKeys","nondeterministicKeys","deterministicTiedGroups","sortedDeterministicTiedGroupsKeys","sort","nondeterministicTiedGroups","sortedNondeterministicTiedGroupsKeys","getHighestAttributeKeys","remainingAttributes","toBeAdded","priority","dicts","relatedCount","deterministicCount","oppositeCount","gridTemplateColumns","sqrt","LineChartOutlined","formatter","attributeSummary","CheckSquareOutlined","PlusSquareOutlined","CloseSquareOutlined","ItemAttributionPageContent","ItemAttributionStats","completionPercentage","hasDataCount","initiatedPercentage","progress","progressTotal","currentProgress","someData","isComplete","toFixed","ItemAttributionClassifierFilters","ItemAttributionSamplerFilters","ItemAttributionGroupingFilters","default","ATTRIBUTE_GROUP_VALUES","ItemAttributionComparatorFilters","ItemAttributionFilters","JSON","stringify","score","prepareFileForDownload","ItemsAttributionPage","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}