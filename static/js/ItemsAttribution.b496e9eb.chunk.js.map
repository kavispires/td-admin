{"version":3,"file":"static/js/ItemsAttribution.b496e9eb.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/LanguageFlag.tsx","components/Items/ItemBuildingBlocks.tsx","components/Items/ItemsTypeahead.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useGetFirebaseDoc.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","hooks/useItemQueryParams.ts","hooks/useItemsAttribution.ts","context/ItemsAttributeValuesContext.tsx","components/Items/AttributionValueButtons.tsx","components/Items/ItemAttributeDescription.tsx","components/Common/Stat.tsx","components/Items/ItemAttributeStats.tsx","components/Items/ItemAttributionCard.tsx","components/Items/ItemAttributionNavigation.tsx","components/Items/ItemSamplerCard.tsx","hooks/useItemSampler.ts","components/Common/GoToTopButton.tsx","components/Items/ItemGroupingCard.tsx","hooks/useItemGrouping.ts","components/Items/ItemComparatorCard.tsx","hooks/useItemsComparator.ts","components/Items/ItemAttributionPageContent.tsx","components/Items/ItemAttributionFilersSections.tsx","components/Items/ItemAttributionFilters.tsx","pages/Items/ItemsAttribution.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Button, Input } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { Item as ItemT } from 'types';\n\nimport { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype ItemBlockProps = {\n  item: ItemT;\n};\n\ntype ItemBlocksAdditionalProps = {\n  className?: string;\n  width: number;\n  language: 'en' | 'pt';\n  to: string;\n};\n\nexport function ItemSprite({\n  item,\n  width,\n  className,\n}: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'width' | 'className'>) {\n  return (\n    <Item id={item.id} width={width} title={`${item.name.en} | ${item.name.pt}`} className={className} />\n  );\n}\n\nexport function ItemId({ item }: ItemBlockProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={item.nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={item.id}\n        readOnly\n        style={{ width: '8ch' }}\n        onClick={() => copyToClipboard(item.id)}\n      />\n    </span>\n  );\n}\n\nexport function ItemName({ item, language }: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'language'>) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Name in ${language.toUpperCase()}`}\n      variant=\"borderless\"\n      size=\"small\"\n      value={item.name[language]}\n      readOnly\n    />\n  );\n}\n\nexport function ItemNsfw({ item }: ItemBlockProps) {\n  return item.nsfw ? <FireFilled style={{ color: 'hotpink' }} /> : <></>;\n}\n\nexport function ItemGoTo({ item }: ItemBlockProps) {\n  const [, setSearchParams] = useSearchParams();\n  const onGoTo = () => {\n    setSearchParams({ itemId: item.id, view: 'classifier' });\n  };\n\n  return (\n    <span>\n      <Button size=\"small\" shape=\"round\" onClick={onGoTo}>\n        Go to\n      </Button>\n    </span>\n  );\n}\n","import { AutoComplete, AutoCompleteProps, Input } from 'antd';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item } from 'types';\n\ntype ItemsTypeaheadProps = {\n  items?: Dictionary<Item>;\n  isPending?: boolean;\n  onFinish: (id: string) => void;\n} & Omit<AutoCompleteProps, 'options'>;\n\nexport function ItemsTypeahead({\n  items,\n  isPending,\n  style,\n  size,\n  placeholder,\n  allowClear,\n  onFinish,\n  ...rest\n}: ItemsTypeaheadProps) {\n  const tdrItemsQuery = useTDResource<Item>('items', !Boolean(items) && !isPending);\n\n  const { namesDict, options } = useMemo(() => {\n    console.log('Recomputing item names typeahead...');\n\n    const namesDict = Object.values(items ?? tdrItemsQuery.data ?? {}).reduce(\n      (acc: Dictionary<string>, entry) => {\n        const nameEn = `${entry.name.en} (${entry.id})`;\n        const namePt = `${entry.name.pt} (${entry.id})`;\n        acc[nameEn] = entry.id;\n        acc[namePt] = entry.id;\n        return acc;\n      },\n      {}\n    );\n\n    const options = orderBy(Object.keys(namesDict), [(name) => name.toLowerCase()]).map((name) => ({\n      value: name,\n    }));\n\n    return { namesDict, options };\n  }, [items, isPending]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [filteredOptions, setFilteredOptions] = useState<{ value: string }[]>([]);\n\n  const handleSearch = (searchText: string) => {\n    const SEARCH = searchText.trim();\n    const filtered = options.filter((option) =>\n      String(option?.value ?? '')\n        .toUpperCase()\n        .includes(SEARCH)\n    );\n    const sorted = orderBy(filtered, [\n      (option) => {\n        const value = String(option?.value ?? '');\n        if (value.includes(`${SEARCH} `)) return -1;\n        const index = value.toUpperCase().indexOf(SEARCH);\n        return index === 0 ? -1 : index === -1 ? value.length : index;\n      },\n    ]);\n    setFilteredOptions(sorted);\n  };\n\n  const handlePressEnter = () => {\n    if (filteredOptions.length > 0) {\n      const key = filteredOptions[0].value;\n      if (namesDict[key] !== undefined) {\n        onFinish(namesDict[key]);\n      }\n    }\n  };\n\n  const onSelect = (key: any) => {\n    if (namesDict[key] !== undefined) {\n      onFinish(namesDict[key]);\n    }\n  };\n\n  return (\n    <AutoComplete\n      options={options}\n      style={{ width: 250, ...style }}\n      allowClear={allowClear ?? true}\n      placeholder={placeholder ?? 'Search by name or id...'}\n      filterOption={(inputValue, option) =>\n        String(option?.value ?? '')\n          .toUpperCase()\n          .indexOf(inputValue?.toUpperCase()) !== -1\n      }\n      onSearch={handleSearch}\n      notFoundContent=\"No items found\"\n      onSelect={onSelect}\n      {...rest}\n    >\n      <Input onPressEnter={handlePressEnter} />\n    </AutoComplete>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('tdr');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? {},\n    hasResponseData,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { useSearchParams } from 'react-router-dom';\n\nexport function useItemQueryParams() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addQueryParam = (key: string, value: string) => {\n    searchParams.set(key, `${value}`);\n    setSearchParams(searchParams);\n  };\n\n  const removeQueryParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  return {\n    view: searchParams.get('view') ?? 'classifier',\n    setView: (value: string) => setSearchParams({ view: value }),\n    addQueryParam,\n    removeQueryParam,\n    searchParams,\n  };\n}\n","import { App } from 'antd';\nimport { isEmpty, mapKeys, merge, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { deserializeFirebaseData, getNewItem, getNewItemAttributeValues, serializeFirebaseData } from 'utils';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\n/**\n * This is to avoid new items being generated and unused just for the sake of placeholders.\n */\nconst globalNewItemsAttributesValues: Dictionary<ItemAtributesValues> = {};\n\nexport function useItemsAttribution() {\n  const { notification, message } = App.useApp();\n  const queryClient = useQueryClient();\n\n  // Gather basic item data\n  const tdrItemsQuery = useTDResource<Item>('items');\n  const tdrAttributesQuery = useTDResource<ItemAttribute>('items-attributes');\n  const tdrItemsAttributesValuesQuery = useTDResource<ItemAtributesValues>('items-attribute-values');\n  const firebaseItemsAttributeValuesQuery = useGetFirebaseDoc<\n    Dictionary<string>,\n    Dictionary<ItemAtributesValues>\n  >('data', 'itemsAttributeValues', {\n    select: deserializeFirebaseData,\n  });\n\n  const [modifiedAttributeValues, setModifiedAttributeValues] = useState<Dictionary<ItemAtributesValues>>({});\n\n  const mutation = useUpdateFirebaseDoc('data', 'itemsAttributeValues', {\n    onSuccess: () => {\n      notification.success({\n        message: 'itemsAttributeValues updated',\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'data', 'itemsAttributeValues'],\n      });\n      setModifiedAttributeValues({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: 'itemsAttributeValues update failed',\n        description: error.message,\n      });\n    },\n  });\n\n  const savedItemsAttributeValues = useMemo(() => {\n    return {\n      ...(tdrItemsAttributesValuesQuery.data ?? {}),\n      ...(firebaseItemsAttributeValuesQuery.data ?? {}),\n    };\n  }, [tdrItemsAttributesValuesQuery.data, firebaseItemsAttributeValuesQuery.data]);\n\n  const isDirty = !isEmpty(modifiedAttributeValues);\n  const addAttributesToUpdate = (id: string, item: ItemAtributesValues) => {\n    setModifiedAttributeValues((prev) => ({ ...prev, [id]: { ...item, updatedAt: Date.now() } }));\n  };\n  const addMultipleAttributesToUpdate = (itemsArr: ItemAtributesValues[]) => {\n    setModifiedAttributeValues((prev) => ({\n      ...prev,\n      ...mapKeys(\n        itemsArr.map((item) => ({ ...item, updatedAt: Date.now() })),\n        'id'\n      ),\n    }));\n  };\n\n  const firebaseData = firebaseItemsAttributeValuesQuery.data;\n\n  const save = () => {\n    mutation.mutate(serializeFirebaseData({ ...firebaseData, ...modifiedAttributeValues }));\n  };\n\n  // Filter items that have the alien category only\n  const availableItemIds = useMemo(() => {\n    const items = tdrItemsQuery.data ?? {};\n    return orderBy(\n      Object.keys(items).filter((id) => {\n        return (items[id]?.categories ?? []).includes('alien');\n      }),\n      (id) => Number(id),\n      'asc'\n    );\n  }, [tdrItemsQuery.data]);\n\n  const getItem = (id: string) => {\n    if ((tdrItemsQuery.data ?? {})?.[id]) {\n      return tdrItemsQuery.data[id];\n    }\n    if (id) {\n      message.info(`Item ${id} not found in TDR. Creating a new item...`);\n    }\n    return getNewItem({ id });\n  };\n\n  const getItemAttributeValues = (id: string) => {\n    const storedValue = savedItemsAttributeValues?.[id] ?? {};\n    const modifiedValue = modifiedAttributeValues[id] ?? {};\n\n    if (isEmpty(storedValue) && isEmpty(modifiedValue)) {\n      globalNewItemsAttributesValues[id] = getNewItemAttributeValues({ id });\n      return globalNewItemsAttributesValues[id];\n    }\n\n    return merge(globalNewItemsAttributesValues?.[id] ?? {}, storedValue, modifiedValue);\n  };\n\n  return {\n    availableItemIds,\n    getItem,\n    getItemAttributeValues,\n    attributes: tdrAttributesQuery.data ?? {},\n    isLoading:\n      tdrItemsQuery.isLoading ||\n      tdrAttributesQuery.isLoading ||\n      tdrItemsAttributesValuesQuery.isLoading ||\n      firebaseItemsAttributeValuesQuery.isLoading,\n    error:\n      tdrItemsQuery.error ||\n      tdrAttributesQuery.error ||\n      tdrItemsAttributesValuesQuery.error ||\n      firebaseItemsAttributeValuesQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addAttributesToUpdate,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate: modifiedAttributeValues,\n    isDirty,\n  };\n}\n","import { App } from 'antd';\nimport { useItemsAttribution } from 'hooks/useItemsAttribution';\nimport { isEmpty, orderBy, random } from 'lodash';\nimport { ReactNode, useContext, createContext, useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { getNewItem, getNewItemAttributeValues, sortJsonKeys } from 'utils';\n\nexport type ItemsAttributeValuesContextType = {\n  getItem: (itemId: string) => Item;\n  getItemAttributeValues: (itemId: string) => ItemAtributesValues;\n  isLoading: boolean;\n  error: ResponseError;\n  hasResponseData: boolean;\n  isDirty: boolean;\n  itemAttributeValues: ItemAtributesValues;\n  prepareItemsAttributesFileForDownload: () => Dictionary<ItemAtributesValues>;\n  jumpToItem: (direction: string, itemId?: string) => void;\n  activeItem: Item;\n  onAttributeChange: (attributeId: string, value: number) => void;\n  isSaving: boolean;\n  save: () => void;\n  attributesList: ItemAttribute[];\n  availableItemIds: string[];\n  addAttributesToUpdate: (itemId: string, attributes: ItemAtributesValues) => void;\n  addMultipleAttributesToUpdate: (itemsArr: ItemAtributesValues[]) => void;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nconst ItemsAttributeValuesContext = createContext<ItemsAttributeValuesContextType>({\n  getItem: () => getNewItem(),\n  getItemAttributeValues: () => getNewItemAttributeValues(),\n  isLoading: true,\n  error: null,\n  hasResponseData: false,\n  isDirty: false,\n  jumpToItem: () => {},\n  activeItem: getNewItem(),\n  itemAttributeValues: getNewItemAttributeValues(),\n  onAttributeChange: () => {},\n  isSaving: false,\n  save: () => {},\n  attributesList: [],\n  availableItemIds: [],\n  addAttributesToUpdate: () => {},\n  addMultipleAttributesToUpdate: () => {},\n  prepareItemsAttributesFileForDownload: () => ({}),\n  attributes: {},\n});\n\ntype ItemsAttributeValuesProviderProps = {\n  children: ReactNode;\n};\n\nexport const ItemsAttributeValuesProvider = ({ children }: ItemsAttributeValuesProviderProps) => {\n  const {\n    getItem,\n    getItemAttributeValues,\n    availableItemIds,\n    isLoading,\n    error,\n    isSaving,\n    save,\n    addAttributesToUpdate,\n    isDirty,\n    attributes,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttribution();\n  const { message } = App.useApp();\n\n  const [itemIndex, setItemIndex] = useState(random(0, availableItemIds.length - 1));\n  const activeItem = getItem(availableItemIds[itemIndex]);\n  const itemAttributeValues = getItemAttributeValues(activeItem.id);\n\n  const jumpToItem = (direction: string, itemId?: string) => {\n    if (direction === 'next') {\n      setItemIndex((prev) => (prev + 1) % availableItemIds.length);\n    }\n    if (direction === 'previous') {\n      setItemIndex((prev) => (prev - 1 + availableItemIds.length) % availableItemIds.length);\n    }\n    if (direction === 'random') {\n      setItemIndex(random(0, availableItemIds.length - 1));\n    }\n\n    if (direction === 'first') {\n      setItemIndex(0);\n    }\n    if (direction === 'last') {\n      setItemIndex(availableItemIds.length - 1);\n    }\n    if (direction === 'next10') {\n      setItemIndex((prev) => (prev + 10) % availableItemIds.length);\n    }\n    if (direction === 'previous10') {\n      setItemIndex((prev) => (prev - 10 + availableItemIds.length) % availableItemIds.length);\n    }\n\n    if (direction === 'goTo' && itemId !== undefined) {\n      const index = availableItemIds.indexOf(itemId);\n      if (index !== -1) {\n        setItemIndex(index);\n      } else {\n        message.error(`Item ${itemId} is not available for attribution.`);\n      }\n    }\n  };\n\n  const attributesList = useMemo(() => orderBy(Object.values(attributes), 'name.en', 'asc'), [attributes]);\n\n  const onAttributeChange = (attributeId: string, value: number) => {\n    addAttributesToUpdate(activeItem.id, {\n      ...itemAttributeValues,\n      attributes: {\n        ...itemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const prepareItemsAttributesFileForDownload = () => {\n    return sortJsonKeys(\n      availableItemIds.reduce((acc: Dictionary<ItemAtributesValues>, itemId) => {\n        // Get items and only the ones with attributes\n        const item = getItemAttributeValues(itemId);\n\n        if (isEmpty(item.attributes)) {\n          return acc;\n        }\n\n        // Assess item completion\n        if (Object.keys(item.attributes).length === attributesList.length) {\n          item.complete = true;\n        } else {\n          delete item.complete;\n        }\n\n        acc[item.id] = item;\n\n        return acc;\n      }, {})\n    );\n  };\n\n  return (\n    <ItemsAttributeValuesContext.Provider\n      value={{\n        getItem,\n        getItemAttributeValues,\n        availableItemIds,\n        isLoading,\n        error,\n        hasResponseData: availableItemIds.length > 0 && !isEmpty(attributes),\n        isDirty,\n        itemAttributeValues,\n        jumpToItem,\n        activeItem,\n        onAttributeChange,\n        isSaving,\n        save,\n        attributes,\n        attributesList,\n        addAttributesToUpdate,\n        addMultipleAttributesToUpdate,\n        prepareItemsAttributesFileForDownload,\n      }}\n    >\n      {children}\n    </ItemsAttributeValuesContext.Provider>\n  );\n};\n\nexport const useItemsAttributeValuesContext = () => useContext(ItemsAttributeValuesContext);\n","import { Radio, Tooltip } from 'antd';\nimport { ItemAttribute } from 'types';\n\nimport { CheckCircleFilled, QuestionCircleOutlined } from '@ant-design/icons';\n\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nconst attributeOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC },\n];\n\nconst attributeLimitedOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC, disabled: true },\n];\n\ntype AttributionValueButtonsProps = {\n  attribute: ItemAttribute;\n  value?: number;\n  onChange: (attributeId: string, value: number) => void;\n  onlyButtons?: boolean;\n};\n\nexport function AttributionValueButtons({\n  attribute,\n  value,\n  onChange,\n  onlyButtons,\n}: AttributionValueButtonsProps) {\n  if (!attribute) return <></>;\n\n  if (onlyButtons) {\n    return (\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n    );\n  }\n\n  return (\n    <div key={attribute.id} className=\"attribute-button-container__row\">\n      <span className=\"attribute-button-container__label\">\n        {attribute.name.en}{' '}\n        <Tooltip title={attribute.description.en}>\n          <QuestionCircleOutlined />\n        </Tooltip>\n      </span>\n\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n\n      <span>\n        <CheckCircleFilled style={{ color: value && value > 7 ? 'green' : 'transparent' }} />\n      </span>\n    </div>\n  );\n}\n","import { Flex } from 'antd';\nimport clsx from 'clsx';\nimport { FilterSwitch } from 'components/Common';\nimport { AlienSign } from 'components/Sprites';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { filterMessage, getItemAttributePriorityResponse, parseAttribute } from 'utils';\n\ntype ItemAttributeDescriptionProps = {\n  itemAttributeValues: ItemAtributesValues;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nexport function ItemAttributeDescription({ itemAttributeValues, attributes }: ItemAttributeDescriptionProps) {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const filteredResponse = useMemo(\n    () =>\n      filterMessage(\n        getItemAttributePriorityResponse(itemAttributeValues, attributes),\n        showUnclear,\n        showUnrelated\n      ),\n    [itemAttributeValues, attributes, showUnclear, showUnrelated]\n  );\n\n  const Component = searchParams.get('signs') === 'true' ? AttributeSprite : AttributeText;\n\n  return (\n    <Flex gap={6} vertical>\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Alien Sings\"\n        value={searchParams.get('signs') === 'true'}\n        onChange={(v) => addQueryParam('signs', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <Flex gap={6} wrap=\"wrap\" className=\"item-attribute-value-statement\">\n        {filteredResponse.map((keyVariant, index, arr) => (\n          <Component\n            key={keyVariant}\n            keyVariant={keyVariant}\n            attributes={attributes}\n            firstElement={index === 0}\n            lastElement={index === arr.length - 1}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  );\n}\n\ntype AttributeSpriteProps = {\n  keyVariant: string;\n  attributes: Dictionary<ItemAttribute>;\n  firstElement: boolean;\n  lastElement: boolean;\n};\n\nexport function AttributeSprite({\n  keyVariant,\n  attributes,\n  withText,\n}: AttributeSpriteProps & { withText?: boolean }) {\n  const { key, className, text } = parseAttribute(keyVariant);\n\n  return (\n    <Flex vertical align=\"center\">\n      <AlienSign\n        width={50}\n        id={attributes[key].spriteId}\n        className={clsx('item-attribute-alien-sign', `item-attribute-alien-sign--${className}`)}\n      />\n      {withText && (\n        <Flex\n          wrap=\"wrap\"\n          justify=\"center\"\n          align=\"center\"\n          style={{ maxWidth: 50, textAlign: 'center', wordBreak: 'break-word' }}\n        >\n          {text} {attributes[key].name.en.toLowerCase()}\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nfunction AttributeText({ keyVariant, attributes, firstElement, lastElement }: AttributeSpriteProps) {\n  const { key, text } = parseAttribute(keyVariant);\n\n  const prefix = firstElement ? \"It's \" : '';\n  const suffix = lastElement ? '.' : ', ';\n\n  return (\n    <>\n      {prefix}\n      {text} {attributes[key].name.en.toLowerCase()}\n      {suffix}\n    </>\n  );\n}\n","import { Tag, Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StatProps = {\n  label: ReactNode;\n  children: ReactNode;\n};\n\nexport function Stat({ label, children }: StatProps) {\n  return (\n    <Typography.Text>\n      {label} <Tag>{children}</Tag>\n    </Typography.Text>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\nimport { Flex, Progress, Typography } from 'antd';\nimport { Stat } from 'components/Common/Stat';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\ntype ItemAttributeStatsProps = {\n  attributesList: ItemAttribute[];\n  itemAttributeValues: ItemAtributesValues;\n};\n\nexport function ItemAttributeStats({ attributesList, itemAttributeValues }: ItemAttributeStatsProps) {\n  const { completion, isDeterministic, value, isOpposing, relevancy } = useMemo(() => {\n    const total = attributesList.length;\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n    const completion = Math.floor((completed / total) * 100);\n\n    let isDeterministic = false;\n    let isOpposing = false;\n    let unclearCount = 0;\n    const value = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n      if (v <= 0) {\n        if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n          unclearCount += 1;\n        }\n        if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n          isOpposing = true;\n        }\n        return acc;\n      }\n      if (v === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        isDeterministic = true;\n      }\n\n      return acc + v;\n    }, 0);\n\n    const relevancy = Math.floor(((completed - unclearCount) / total) * 100);\n\n    return { completion, isDeterministic, value, isOpposing, relevancy };\n  }, [attributesList, itemAttributeValues.attributes]);\n\n  return (\n    <div>\n      <Typography.Text strong>Completion</Typography.Text>\n      <Progress percent={completion} size=\"small\" />\n      <Typography.Text strong>Stats</Typography.Text>\n      <Flex vertical>\n        <Stat label=\"Deterministic\">\n          {isDeterministic ? (\n            <CheckCircleFilled style={{ color: 'green' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red' }} />\n          )}\n        </Stat>\n        <Stat label=\"Opposing\">\n          {isOpposing ? (\n            <CheckCircleFilled style={{ color: 'CornflowerBlue' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'grey' }} />\n          )}\n        </Stat>\n        <Stat label=\"Value\">{value}</Stat>\n        <Stat label=\"Reliability\">{relevancy}%</Stat>\n      </Flex>\n    </div>\n  );\n}\n","import { Affix, Button, Card, Divider, Flex, Space, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useEffect, useMemo } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemAttributeDescription } from './ItemAttributeDescription';\nimport { ItemAttributeStats } from './ItemAttributeStats';\nimport { ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemAttributionCard() {\n  const { activeItem, attributesList, itemAttributeValues, onAttributeChange, jumpToItem, attributes } =\n    useItemsAttributeValuesContext();\n  const { searchParams, removeQueryParam } = useItemQueryParams();\n  const queryParamsItemId = searchParams.get('itemId');\n\n  useEffect(() => {\n    if (queryParamsItemId) {\n      removeQueryParam('itemId');\n      jumpToItem('goTo', queryParamsItemId);\n    }\n  }, [queryParamsItemId, jumpToItem, removeQueryParam]);\n\n  const showOnlyUnset = searchParams.get('scope') === 'unset';\n  const filteredAttributesList = useMemo(\n    () =>\n      showOnlyUnset\n        ? attributesList.filter((attribute) => !itemAttributeValues.attributes[attribute.id])\n        : attributesList,\n    [showOnlyUnset, activeItem.id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (!activeItem)\n    return (\n      <Card>\n        <Typography.Text type=\"secondary\">\n          No item selected.{' '}\n          <Button size=\"small\" type=\"primary\" onClick={() => jumpToItem('random')}>\n            Random Item\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n\n  return (\n    <Card>\n      <div className=\"item-attribution-card\" key={`${activeItem.id}`}>\n        <Affix offsetTop={120} className=\"item-attribution-card__item\">\n          <Flex vertical gap={6}>\n            <ItemSprite item={activeItem} width={150} />\n            <ItemId item={activeItem} />\n            <ItemName item={activeItem} language=\"en\" />\n            <ItemName item={activeItem} language=\"pt\" />\n\n            <Divider className=\"my-2\" />\n            <ItemAttributeStats attributesList={attributesList} itemAttributeValues={itemAttributeValues} />\n            <Divider className=\"my-2\" />\n            <Typography.Text type=\"secondary\">\n              <ItemAttributeDescription itemAttributeValues={itemAttributeValues} attributes={attributes} />\n            </Typography.Text>\n          </Flex>\n        </Affix>\n\n        <Space size=\"small\" direction=\"vertical\" className=\"my-4 attribute-button-container\" wrap>\n          {filteredAttributesList.map((attribute, index) => (\n            <AttributionValueButtons\n              key={attribute.id}\n              attribute={attribute}\n              value={itemAttributeValues.attributes[attribute.id]}\n              onChange={onAttributeChange}\n            />\n          ))}\n        </Space>\n      </div>\n    </Card>\n  );\n}\n","import { Button, Popover } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\n\nimport {\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  LeftOutlined,\n  RightOutlined,\n  VerticalLeftOutlined,\n  VerticalRightOutlined,\n} from '@ant-design/icons';\n\nimport { ItemsTypeahead } from './ItemsTypeahead';\n\nexport function ItemAttributionNavigation() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return (\n    <Button.Group className=\"my-4\">\n      <Button onClick={() => jumpToItem('first')} icon={<VerticalRightOutlined />}>\n        First\n      </Button>\n      <Button onClick={() => jumpToItem('previous10')} icon={<DoubleLeftOutlined />}>\n        Previous 10\n      </Button>\n      <Button onClick={() => jumpToItem('previous')} icon={<LeftOutlined />}>\n        Previous\n      </Button>\n      <Button onClick={() => jumpToItem('next')}>\n        Next <RightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('next10')}>\n        Next 10 <DoubleRightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('last')}>\n        Last <VerticalLeftOutlined />\n      </Button>\n      <Popover content={<GoToItemPopOverContent />} title=\"Title\">\n        <Button>Go To</Button>\n      </Popover>\n    </Button.Group>\n  );\n}\n\nfunction GoToItemPopOverContent() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return <ItemsTypeahead isPending={false} onFinish={(itemId) => jumpToItem('goTo', itemId)} />;\n}\n","import { Button, Card, Divider, Flex, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemSampler } from 'hooks/useItemSampler';\nimport { isEmpty } from 'lodash';\nimport { Fragment } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemSamplerCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { sampleIds, attribute, onGetSample, updateAttributeValue } = useItemSampler();\n\n  if (isEmpty(sampleIds) && isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">\n          No sample has been generated. Tweak options and{' '}\n          <Button size=\"small\" type=\"primary\" onClick={onGetSample}>\n            Get Sample\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={<Typography.Text>{attribute?.name.en}</Typography.Text>}\n      actions={[\n        <Button type=\"primary\" block ghost onClick={onGetSample}>\n          Get New Sample\n        </Button>,\n      ]}\n      extra={\n        <Button type=\"primary\" size=\"small\" onClick={onGetSample}>\n          Get New Sample\n        </Button>\n      }\n    >\n      <Flex vertical gap={6}>\n        {sampleIds.map((itemId) => {\n          const itemAttributes = getItemAttributeValues(itemId);\n          const item = getItem(itemId);\n\n          return (\n            <Fragment key={`${itemId}-${itemAttributes.updatedAt}`}>\n              <Flex gap={6}>\n                <ItemSprite item={item} width={75} />\n                <Flex vertical gap={6}>\n                  <Flex gap={6}>\n                    <ItemId item={item} />\n                    <ItemGoTo item={item} />\n                  </Flex>\n                  <ItemName item={item} language=\"en\" />\n                  <ItemName item={item} language=\"pt\" />\n                </Flex>\n                <AttributionValueButtons\n                  attribute={attribute!}\n                  value={itemAttributes.attributes[attribute!.id]}\n                  onChange={(attributeId: string, value: number) =>\n                    updateAttributeValue(item.id, attributeId, value)\n                  }\n                />\n              </Flex>\n              <Divider className=\"my-1\" />\n            </Fragment>\n          );\n        })}\n      </Flex>\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { sample as lodashSample, shuffle } from 'lodash';\nimport { useState } from 'react';\nimport { ItemAttribute } from 'types';\n\nimport { useItemQueryParams } from './useItemQueryParams';\n\nexport function useItemSampler() {\n  const { attributesList, availableItemIds, addAttributesToUpdate, getItemAttributeValues } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n\n  const [sampleIds, setSampleIds] = useState<string[]>([]);\n  const [attribute, setAttribute] = useState<ItemAttribute>();\n\n  // Create sample\n  const onGetSample = () => {\n    const attributeKey = searchParams.get('attribute') ?? lodashSample(attributesList)?.id ?? 'ali';\n    const selectedAttribute =\n      attributesList.find((a) => a.id === attributeKey) ?? lodashSample(attributesList);\n    const sampleSize = Number(searchParams.get('size')) || 9;\n\n    const selected: string[] = [];\n    const options = shuffle(availableItemIds);\n\n    for (let i = 0; i < options.length; i++) {\n      if (selected.length === sampleSize) break;\n\n      const itemId = options[i];\n      const currentAttributeValues = getItemAttributeValues(itemId).attributes;\n\n      if (!currentAttributeValues[attributeKey]) {\n        selected.push(itemId);\n      }\n    }\n\n    setAttribute(selectedAttribute);\n    setSampleIds(selected);\n  };\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  return {\n    sampleIds,\n    attribute,\n    onGetSample,\n    updateAttributeValue,\n  };\n}\n","import { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport { useEffect, useState } from 'react';\n\nexport function GoToTopButton(props: ButtonProps) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const handleScroll = () => {\n    setIsVisible(window.pageYOffset > 300);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <Button\n      className={`go-to-top-button ${isVisible ? 'visible' : ''}`}\n      onClick={scrollToTop}\n      icon={<VerticalAlignTopOutlined />}\n      {...props}\n    >\n      Go to Top\n    </Button>\n  );\n}\n","import { Button, Card, Flex, Pagination, Popconfirm, Typography } from 'antd';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemGrouping } from 'hooks/useItemGrouping';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMedia } from 'react-use';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemGroupingCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { attribute, pageIds, group, updateAttributeValue, updatePageItemsAsUnrelated, pagination } =\n    useItemGrouping();\n  const { searchParams } = useItemQueryParams();\n  const isNarrow = useMedia('(max-width: 1024px)');\n\n  if (isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">No group attribute has been selected.</Typography.Text>\n      </Card>\n    );\n  }\n\n  const paginationComponent = (\n    <Pagination\n      key=\"pagination\"\n      onChange={pagination.onChange}\n      current={pagination.current}\n      total={pagination.total}\n      pageSizeOptions={pagination.pageSizeOptions}\n      pageSize={pagination.pageSize}\n      onShowSizeChange={pagination.onShowSizeChange}\n    />\n  );\n\n  const isUnsetSet = searchParams.get('scope') === 'unset' || !searchParams.get('scope');\n  const unrelateButton = isUnsetSet && (\n    <Popconfirm\n      key=\"unrelate-button\"\n      title={`Are you sure everything is unrelated to ${attribute.name.en}?`}\n      onConfirm={updatePageItemsAsUnrelated}\n    >\n      <Button type=\"primary\" danger disabled={pageIds.length === 0}>\n        Unrelate Unset Items on Page\n      </Button>\n    </Popconfirm>\n  );\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} ({group.length})\n        </Typography.Text>\n      }\n      extra={paginationComponent}\n      actions={[unrelateButton, <GoToTopButton key=\"go-to-top\" />, paginationComponent].filter(Boolean)}\n    >\n      {pageIds.map((itemId) => {\n        const itemAttributes = getItemAttributeValues(itemId);\n        const item = getItem(itemId);\n\n        return (\n          <Card.Grid\n            key={`${itemId}-${itemAttributes.updatedAt}`}\n            style={{ width: isNarrow ? '50%' : '25%' }}\n          >\n            <Flex gap={6}>\n              <Flex vertical gap={6}>\n                <ItemSprite item={item} width={75} />\n                <ItemId item={item} />\n                <ItemGoTo item={item} />\n                <ItemName item={item} language=\"en\" />\n                <ItemName item={item} language=\"pt\" />\n              </Flex>\n              <AttributionValueButtons\n                attribute={attribute!}\n                value={itemAttributes.attributes[attribute!.id]}\n                onlyButtons\n                onChange={(attributeId: string, value: number) =>\n                  updateAttributeValue(item.id, attributeId, value)\n                }\n              />\n            </Flex>\n          </Card.Grid>\n        );\n      })}\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useMemo, useState } from 'react';\n\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport { orderBy } from 'lodash';\n\nexport function useItemGrouping() {\n  const {\n    attributesList,\n    addAttributesToUpdate,\n    getItemAttributeValues,\n    availableItemIds,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  const attributeKey = searchParams.get('attribute') ?? 'ali';\n  const scope = searchParams.get('scope') ?? 'unset';\n\n  const page = searchParams.get('page') ?? '1';\n  const pageSize = searchParams.get('pageSize') ?? '12';\n\n  const [previousAttribute, setPreviousAttribute] = useState<string>('ali');\n  const [previousScope, setPreviousScope] = useState<string>('unset');\n\n  const group = useMemo(() => {\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    const scopeValue =\n      scope === 'unset' ? undefined : ATTRIBUTE_VALUE[scope.toUpperCase() as keyof typeof ATTRIBUTE_VALUE];\n\n    const filteredItemIds = itemsAttributes\n      .filter((item) => item.attributes?.[attributeKey] === scopeValue)\n      .map((item) => item.id);\n\n    return orderBy(\n      filteredItemIds,\n      [(id) => getItemAttributeValues(id)?.updatedAt, (id) => Number(id)],\n      ['desc', 'asc']\n    );\n  }, [attributeKey, scope]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const pageIds = useMemo(() => {\n    if (previousAttribute !== attributeKey || previousScope !== scope) {\n      setPreviousAttribute(attributeKey);\n      setPreviousScope(scope);\n      addQueryParam('page', '1');\n      return group.slice(0, Number(pageSize));\n    }\n\n    const start = (Number(page) - 1) * Number(pageSize);\n    const end = start + Number(pageSize);\n\n    return group.slice(start, end);\n  }, [page, pageSize, group]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const attribute = attributesList.find((a) => a.id === attributeKey);\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const updatePageItemsAsUnrelated = () => {\n    addMultipleAttributesToUpdate(\n      pageIds.map((id) => {\n        const prev = getItemAttributeValues(id);\n        if (!prev.attributes[attributeKey]) {\n          prev.attributes[attributeKey] = ATTRIBUTE_VALUE.UNRELATED;\n        }\n\n        return prev;\n      })\n    );\n  };\n\n  return {\n    group,\n    pageIds,\n    attribute,\n    updateAttributeValue,\n    updatePageItemsAsUnrelated,\n    pagination: {\n      total: group.length,\n      current: Number(page),\n      pageSize: Number(pageSize),\n      onChange: (page: number) => addQueryParam('page', String(page)),\n      onShowSizeChange: (_: number, pageSize: number) => addQueryParam('pageSize', String(pageSize)),\n      pageSizeOptions: [12, 24, 48, 96],\n    },\n  };\n}\n","import { Flex, Table, TableColumnsType, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { ItemMessageObject, useItemsComparator } from 'hooks/useItemsComparator';\nimport { Item } from 'types';\n\nimport { AttributeSprite } from './ItemAttributeDescription';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemComparatorCard() {\n  const { attributes } = useItemsAttributeValuesContext();\n  const { itemMessages, grouping } = useItemsComparator();\n\n  const columns: TableColumnsType<ItemMessageObject> = [\n    {\n      title: 'Item Id',\n      dataIndex: 'item',\n      key: 'id',\n      render: (item: Item) => (\n        <div>\n          <ItemId item={item} />\n          <ItemGoTo item={item} />\n        </div>\n      ),\n      sorter: (a, b) => Number(a.item.id) - Number(b.item.id),\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'item',\n      key: 'sprite',\n      render: (item: Item) => <ItemSprite item={item} width={75} />,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'item',\n      key: 'name',\n      render: (item: Item) => (\n        <>\n          <ItemName item={item} language=\"en\" />\n          <ItemName item={item} language=\"pt\" />\n        </>\n      ),\n      sorter: (a, b) => a.item.name.en.localeCompare(b.item.name.en),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'message',\n      key: 'message',\n      render: (message: string[], { item }) => (\n        <Flex gap={6}>\n          {message.map((keyVariant, index, arr) => (\n            <AttributeSprite\n              key={`${keyVariant}-${item.id}`}\n              keyVariant={keyVariant}\n              attributes={attributes}\n              firstElement={index === 0}\n              lastElement={index === arr.length - 1}\n              withText\n            />\n          ))}\n        </Flex>\n      ),\n      sorter: (a, b) => a.message.join(' ').localeCompare(b.message.join(' ')),\n    },\n    {\n      title: 'Complete',\n      dataIndex: 'itemAttributesValues',\n      key: 'complete',\n      render: (itemAttributesValues: { complete: boolean }) => (itemAttributesValues.complete ? 'Yes' : 'No'),\n    },\n    {\n      title: 'Identical',\n      dataIndex: 'message',\n      key: 'identical',\n      render: (message: string[]) => {\n        const group = grouping[message.join(' ')] ?? [];\n        return <>{group.length > 1 ? group.length : ''}</>;\n      },\n      sorter: (a, b) => {\n        const groupA = grouping[a.message.join(' ')] ?? [];\n        const groupB = grouping[b.message.join(' ')] ?? [];\n        return groupB.length - groupA.length;\n      },\n    },\n  ];\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Item Comparator</Typography.Title>\n      <Table dataSource={itemMessages} columns={columns} />\n    </div>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keyBy, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { filterMessage, getItemAttributePriorityResponse } from 'utils';\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { Item, ItemAtributesValues } from 'types';\n\nexport type ItemMessageObject = {\n  item: Item;\n  itemAttributesValues: ItemAtributesValues;\n  message: string[];\n  fullMessage: string[];\n};\n\nexport function useItemsComparator() {\n  const { attributes, getItemAttributeValues, availableItemIds, getItem, isLoading } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n  const showComplete = searchParams.get('showComplete') === 'true';\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const { itemMessages, itemMessagesDict, grouping } = useMemo(() => {\n    if (isLoading) {\n      const itemMessages: ItemMessageObject[] = [];\n      return {\n        itemMessages,\n        itemMessagesDict: {},\n        grouping: {},\n      };\n    }\n    console.log('useItemsComparator');\n\n    const itemMessages = orderBy(\n      availableItemIds\n        .map((id) => {\n          const itemAttributesValues = getItemAttributeValues(id);\n          const itemMessage = getItemAttributePriorityResponse(itemAttributesValues, attributes);\n          return {\n            item: getItem(id),\n            itemAttributesValues,\n            message: filterMessage(itemMessage, showUnclear, showUnrelated),\n            fullMessage: itemMessage,\n          };\n        })\n        .filter(({ itemAttributesValues }) => (showComplete ? itemAttributesValues.complete : true)),\n      ['message'],\n      ['asc']\n    );\n\n    const grouping = itemMessages.reduce((acc: Dictionary<string[]>, { message, item: { id } }) => {\n      const key = message.join(' ');\n\n      if (acc[key] === undefined) {\n        acc[key] = [];\n      }\n      acc[key].push(id);\n\n      return acc;\n    }, {});\n\n    const moreThanOne = Object.values(grouping).filter((ids) => ids.length > 1);\n    if (moreThanOne.length > 0) {\n      console.log('More than one', moreThanOne);\n    }\n    console.log(grouping);\n\n    return {\n      itemMessages,\n      itemMessagesDict: keyBy(itemMessages, 'item.id'),\n      grouping,\n    };\n  }, [\n    attributes,\n    availableItemIds,\n    getItemAttributeValues,\n    getItem,\n    isLoading,\n    showComplete,\n    showUnclear,\n    showUnrelated,\n  ]);\n\n  return {\n    itemMessages,\n    itemMessagesDict,\n    grouping,\n  };\n}\n","import { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAttributionCard } from './ItemAttributionCard';\nimport { ItemAttributionNavigation } from './ItemAttributionNavigation';\nimport { Empty, Flex } from 'antd';\nimport { ItemSamplerCard } from './ItemSamplerCard';\nimport { ItemGroupingCard } from './ItemGroupingCard';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { ItemComparatorCard } from './ItemComparatorCard';\n\nexport function ItemAttributionPageContent() {\n  const { view } = useItemQueryParams();\n\n  if (view === 'classifier') {\n    return (\n      <>\n        <ItemAttributionNavigation />\n        <ItemAttributionCard />\n        <Flex justify=\"flex-end\" className=\"my-4\">\n          <GoToTopButton />\n        </Flex>\n      </>\n    );\n  }\n\n  if (view === 'sampler') {\n    return <ItemSamplerCard />;\n  }\n\n  if (view === 'grouping') {\n    return <ItemGroupingCard />;\n  }\n\n  if (view === 'comparator') {\n    return <ItemComparatorCard />;\n  }\n\n  return <Empty className=\"my-10\" description=\"Unknown view has been selected\" />;\n}\n","import { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterNumber, FilterSelect, FilterSwitch } from 'components/Common';\nimport { Stat } from 'components/Common/Stat';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMemo } from 'react';\nimport { ATTRIBUTE_GROUP_VALUES } from 'utils/constants';\n\nexport function ItemAttributionStats() {\n  const { getItemAttributeValues, availableItemIds, attributesList } = useItemsAttributeValuesContext();\n\n  const {\n    total,\n    complete,\n    completionPercentage,\n    hasDataCount,\n    initiatedPercentage,\n    progress,\n    progressTotal,\n    currentProgress,\n  } = useMemo(() => {\n    const total = availableItemIds.length;\n    let someData = 0;\n    let complete = 0;\n    let currentProgress = 0;\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    itemsAttributes.forEach(({ complete: isComplete, attributes }) => {\n      if (!isEmpty(attributes)) {\n        someData += 1;\n      }\n      if (Object.values(attributes).length === attributesList.length) {\n        complete += 1;\n      }\n\n      currentProgress += Object.values(attributes).length;\n    });\n\n    const progressTotal = Object.values(attributesList).length * availableItemIds.length;\n\n    return {\n      total,\n      complete,\n      completionPercentage: total > 0 ? ((complete / total) * 100).toFixed(1) : 0,\n      hasDataCount: someData,\n      initiatedPercentage: total > 0 ? Math.floor((someData / total) * 100) : 0,\n      progress: ((currentProgress / progressTotal) * 100).toFixed(1),\n      currentProgress,\n      progressTotal,\n    };\n  }, [attributesList, availableItemIds, getItemAttributeValues]);\n\n  return (\n    <>\n      <Flex vertical>\n        <Typography.Text strong className=\"mb-2\">\n          Items Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{total}</Stat>\n        <Stat label=\"Complete\">\n          {complete} ({completionPercentage}%)\n        </Stat>\n        <Stat label=\"Initiated\">\n          {hasDataCount} ({initiatedPercentage}%)\n        </Stat>\n        <Typography.Text strong className=\"mt-4 mb-2\">\n          Attributes Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{progressTotal}</Stat>\n        <Stat label=\"Set\">{currentProgress}</Stat>\n        <Stat label=\"Progress\">{progress}%</Stat>\n      </Flex>\n      <Divider />\n    </>\n  );\n}\n\nexport function ItemAttributionClassifierFilters() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  return (\n    <>\n      <Button block onClick={() => jumpToItem('random')} type=\"primary\">\n        Random Item\n      </Button>\n      <FilterSwitch\n        label=\"Unset Only\"\n        value={searchParams.get('scope') === 'unset'}\n        onChange={(value) => addQueryParam('scope', value ? 'unset' : '')}\n        className=\"mt-4\"\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionSamplerFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return [\n      { label: 'Random Attribute', value: 'random' },\n      ...attributesList.map(({ id, name }) => ({ label: name.en, value: id })),\n    ];\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Sampler Attribute\"\n        value={searchParams.get('attribute') || 'random'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n      <FilterNumber\n        label=\"Sample Size\"\n        value={Number(searchParams.get('size') || 9)}\n        onChange={(v) => addQueryParam('size', String(v))}\n        min={3}\n        max={21}\n        step={3}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionGroupingFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return attributesList.map(({ id, name }) => ({ label: name.en, value: id }));\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Attribute\"\n        value={searchParams.get('attribute') || 'ali'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n\n      <FilterSelect\n        label=\"Scope\"\n        value={searchParams.get('scope') || 'unset'}\n        onChange={(v) => addQueryParam('scope', v)}\n        options={[{ value: 'unset', label: 'Unset' }, ...ATTRIBUTE_GROUP_VALUES]}\n      />\n\n      <FilterSelect\n        label=\"Results per page\"\n        value={searchParams.get('pageSize') || 12}\n        onChange={(v) => addQueryParam('pageSize', v)}\n        options={[12, 24, 48, 96]}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionComparatorFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  return (\n    <>\n      <FilterSwitch\n        label=\"Only Complete\"\n        value={searchParams.get('showComplete') === 'true'}\n        onChange={(v) => addQueryParam('showComplete', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n    </>\n  );\n}\n","import { Button, Divider, Flex } from 'antd';\nimport { FilterSelect } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SiderContent } from 'components/Layout';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\n\nimport {\n  ItemAttributionClassifierFilters,\n  ItemAttributionComparatorFilters,\n  ItemAttributionGroupingFilters,\n  ItemAttributionSamplerFilters,\n  ItemAttributionStats,\n} from './ItemAttributionFilersSections';\n\nexport function ItemAttributionFilters() {\n  const { isDirty, save, prepareItemsAttributesFileForDownload } = useItemsAttributeValuesContext();\n\n  const { view, setView } = useItemQueryParams();\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <Button block danger type=\"primary\" disabled={!isDirty} onClick={save} size=\"large\">\n          Save\n        </Button>\n        <DownloadButton\n          data={() => prepareItemsAttributesFileForDownload()}\n          fileName=\"items-attribute-values.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider />\n\n      <ItemAttributionStats />\n\n      <FilterSelect\n        label=\"View\"\n        value={view}\n        onChange={setView}\n        options={['classifier', 'sampler', 'grouping', 'comparator']}\n      />\n      <Divider />\n\n      {view === 'classifier' && <ItemAttributionClassifierFilters />}\n      {view === 'sampler' && <ItemAttributionSamplerFilters />}\n      {view === 'grouping' && <ItemAttributionGroupingFilters />}\n      {view === 'comparator' && <ItemAttributionComparatorFilters />}\n    </SiderContent>\n  );\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemAttributionPageContent } from 'components/Items/ItemAttributionPageContent';\nimport { ItemAttributionFilters } from 'components/Items/ItemAttributionFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport {\n  ItemsAttributeValuesProvider,\n  useItemsAttributeValuesContext,\n} from 'context/ItemsAttributeValuesContext';\n\nfunction ItemsAttributionPage() {\n  const { isLoading, error, hasResponseData } = useItemsAttributeValuesContext();\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Attribution\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemAttributionFilters />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            <ItemAttributionPageContent />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nfunction ItemsAttribution() {\n  return (\n    <ItemsAttributeValuesProvider>\n      <ItemsAttributionPage />\n    </ItemsAttributeValuesProvider>\n  );\n}\n\nexport default ItemsAttribution;\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","ItemSprite","item","width","className","id","title","name","en","pt","ItemId","copyToClipboard","useCopyToClipboardFunction","prefix","nsfw","style","color","placeholder","variant","size","value","readOnly","ItemName","toUpperCase","ItemNsfw","ItemGoTo","setSearchParams","useSearchParams","shape","itemId","view","ItemsTypeahead","items","isPending","allowClear","onFinish","rest","tdrItemsQuery","useTDResource","Boolean","namesDict","options","useMemo","console","log","Object","values","reduce","acc","entry","nameEn","namePt","orderBy","keys","toLowerCase","map","filteredOptions","setFilteredOptions","useState","filterOption","inputValue","option","String","indexOf","onSearch","searchText","SEARCH","trim","filtered","filter","includes","sorted","index","length","notFoundContent","onSelect","key","undefined","onPressEnter","state","useCopyToClipboard","message","App","useEffect","info","truncate","omission","success","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","useQuery","queryKey","queryFn","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","hasResponseData","isEmpty","updateQueryFunction","updateDoc","useUpdateFirebaseDoc","useMutation","mutationFn","useItemQueryParams","searchParams","get","setView","addQueryParam","set","removeQueryParam","delete","globalNewItemsAttributesValues","ItemsAttributeValuesContext","createContext","getItem","getNewItem","getItemAttributeValues","getNewItemAttributeValues","isLoading","error","isDirty","jumpToItem","activeItem","itemAttributeValues","onAttributeChange","isSaving","save","attributesList","availableItemIds","addAttributesToUpdate","addMultipleAttributesToUpdate","prepareItemsAttributesFileForDownload","attributes","ItemsAttributeValuesProvider","children","notification","queryClient","useQueryClient","tdrAttributesQuery","tdrItemsAttributesValuesQuery","firebaseItemsAttributeValuesQuery","select","deserializeFirebaseData","modifiedAttributeValues","setModifiedAttributeValues","mutation","onSuccess","refetchQueries","onError","description","savedItemsAttributeValues","firebaseData","categories","Number","storedValue","modifiedValue","merge","mutate","serializeFirebaseData","prev","updatedAt","Date","now","itemsArr","mapKeys","attributesToUpdate","useItemsAttribution","itemIndex","setItemIndex","random","Provider","direction","attributeId","sortJsonKeys","complete","useItemsAttributeValuesContext","useContext","attributeOptions","label","ATTRIBUTE_VALUE","attributeLimitedOptions","disabled","AttributionValueButtons","attribute","onChange","onlyButtons","limited","target","v","optionType","buttonStyle","QuestionCircleOutlined","CheckCircleFilled","ItemAttributeDescription","showUnclear","showUnrelated","filteredResponse","filterMessage","getItemAttributePriorityResponse","Component","AttributeSprite","AttributeText","gap","vertical","wrap","keyVariant","arr","firstElement","lastElement","withText","text","parseAttribute","align","spriteId","clsx","justify","maxWidth","textAlign","wordBreak","suffix","Stat","ItemAttributeStats","completion","isDeterministic","isOpposing","relevancy","total","completed","Math","floor","unclearCount","strong","percent","CloseCircleOutlined","ItemAttributionCard","queryParamsItemId","showOnlyUnset","filteredAttributesList","offsetTop","type","ItemAttributionNavigation","icon","VerticalRightOutlined","DoubleLeftOutlined","LeftOutlined","RightOutlined","DoubleRightOutlined","VerticalLeftOutlined","content","GoToItemPopOverContent","ItemSamplerCard","sampleIds","onGetSample","updateAttributeValue","setSampleIds","setAttribute","attributeKey","lodashSample","selectedAttribute","find","a","sampleSize","selected","shuffle","i","push","currentItemAttributeValues","useItemSampler","actions","block","ghost","extra","itemAttributes","Fragment","GoToTopButton","isVisible","setIsVisible","handleScroll","window","pageYOffset","addEventListener","removeEventListener","scrollTo","top","behavior","VerticalAlignTopOutlined","ItemGroupingCard","pageIds","group","updatePageItemsAsUnrelated","pagination","scope","page","pageSize","previousAttribute","setPreviousAttribute","previousScope","setPreviousScope","itemsAttributes","scopeValue","filteredItemIds","slice","start","end","current","onShowSizeChange","_","pageSizeOptions","useItemGrouping","isNarrow","useMedia","paginationComponent","unrelateButton","onConfirm","danger","ItemComparatorCard","itemMessages","grouping","showComplete","itemMessagesDict","itemAttributesValues","itemMessage","fullMessage","join","moreThanOne","ids","keyBy","useItemsComparator","columns","dataIndex","render","sorter","b","localeCompare","groupA","level","dataSource","ItemAttributionPageContent","ItemAttributionStats","completionPercentage","hasDataCount","initiatedPercentage","progress","progressTotal","currentProgress","someData","forEach","isComplete","toFixed","ItemAttributionClassifierFilters","ItemAttributionSamplerFilters","min","max","step","ItemAttributionGroupingFilters","ATTRIBUTE_GROUP_VALUES","ItemAttributionComparatorFilters","ItemAttributionFilters","ItemsAttributionPage","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}