{"version":3,"file":"static/js/ItemsAttribution.cad97ab0.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/LanguageFlag.tsx","components/Common/ResponseState.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/DataLoadingWrapper.tsx","components/Items/ItemsTypeahead.tsx","components/Sprites/Sprite.tsx","components/Sprites/AlienSign.tsx","components/Sprites/Emoji.tsx","components/Sprites/Glyph.tsx","components/Sprites/Item.tsx","hooks/useBaseUrl.ts","hooks/useCopyToClipboardFunction.ts","hooks/useGetFirebaseDoc.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","hooks/useItemQueryParams.ts","hooks/useItemsAttribution.ts","context/ItemsAttributeValuesContext.tsx","components/Items/AttributionValueButtons.tsx","components/Items/ItemAttributeDescription.tsx","components/Common/Stat.tsx","components/Items/ItemAttributeStats.tsx","components/Items/ItemBuildingBlocks.tsx","components/Items/ItemAttributionCard.tsx","components/Items/ItemAttributionNavigation.tsx","components/Items/ItemSamplerCard.tsx","hooks/useItemSampler.ts","components/Common/GoToTopButton.tsx","components/Items/ItemGroupingCard.tsx","hooks/useItemGrouping.ts","components/Items/ItemComparatorCard.tsx","hooks/useItemsComparator.ts","components/Items/ItemAttributionPageContent.tsx","components/Items/ItemAttributionFilersSections.tsx","components/Items/ItemAttributionFilters.tsx","pages/Items/ItemsAttribution.tsx","utils/constants.ts","utils/index.ts"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, InputNumber, Select, Switch } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n};\n\nexport function FilterSwitch({ label, value, onChange, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" />\n    </Form.Item>\n  );\n}\n","import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  isIdle?: boolean;\n  isLoading: boolean;\n  error?: ResponseError;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({\n  isLoading,\n  isIdle,\n  error,\n  hasResponseData,\n  children,\n}: DataLoadingWrapperProps) {\n  if (!isIdle && isLoading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" showIcon />\n      </Layout.Content>\n    );\n  }\n\n  if (isIdle || hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { AutoComplete, AutoCompleteProps, Input } from 'antd';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item } from 'types';\n\ntype ItemsTypeaheadProps = {\n  items?: Dictionary<Item>;\n  isPending: boolean;\n  onFinish: (id: string) => void;\n} & Omit<AutoCompleteProps, 'options'>;\n\nexport function ItemsTypeahead({\n  items,\n  isPending,\n  style,\n  size,\n  placeholder,\n  allowClear,\n  onFinish,\n  ...rest\n}: ItemsTypeaheadProps) {\n  const tdrItemsQuery = useTDResource<Item>('items', !Boolean(items) && !isPending);\n\n  const { namesDict, options } = useMemo(() => {\n    console.log('Recomputing item names typeahead...');\n\n    const namesDict = Object.values(items ?? tdrItemsQuery.data ?? {}).reduce(\n      (acc: Dictionary<string>, entry) => {\n        const nameEn = `${entry.name.en} (${entry.id})`;\n        const namePt = `${entry.name.pt} (${entry.id})`;\n        acc[nameEn] = entry.id;\n        acc[namePt] = entry.id;\n        return acc;\n      },\n      {}\n    );\n\n    const options = orderBy(Object.keys(namesDict), [(name) => name.toLowerCase()]).map((name) => ({\n      value: name,\n    }));\n\n    return { namesDict, options };\n  }, [items, isPending]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [filteredOptions, setFilteredOptions] = useState<{ value: string }[]>([]);\n\n  const handleSearch = (searchText: string) => {\n    setFilteredOptions(\n      options.filter(\n        (option) =>\n          String(option?.value ?? '')\n            .toUpperCase()\n            .indexOf(searchText?.toUpperCase()) !== -1\n      )\n    );\n  };\n\n  const handlePressEnter = () => {\n    if (filteredOptions.length > 0) {\n      const key = filteredOptions[0].value;\n      if (namesDict[key] !== undefined) {\n        onFinish(namesDict[key]);\n      }\n    }\n  };\n\n  const onSelect = (key: any) => {\n    if (namesDict[key] !== undefined) {\n      onFinish(namesDict[key]);\n    }\n  };\n\n  return (\n    <AutoComplete\n      options={options}\n      style={{ width: 250, ...style }}\n      allowClear={allowClear ?? true}\n      placeholder={placeholder ?? 'Search by name or id...'}\n      filterOption={(inputValue, option) =>\n        String(option?.value ?? '')\n          .toUpperCase()\n          .indexOf(inputValue?.toUpperCase()) !== -1\n      }\n      onSearch={handleSearch}\n      notFoundContent=\"No items found\"\n      onSelect={onSelect}\n      {...rest}\n    >\n      <Input onPressEnter={handlePressEnter} />\n    </AutoComplete>\n  );\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const { getUrl } = useBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${getUrl('sprites')}/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype AlienSignProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function AlienSign({ id, width = 75, className = '' }: AlienSignProps) {\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={id} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype EmojiProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function Emoji({ id, width, className }: EmojiProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\ntype GlyphProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n});\n\n/**\n * A glyph card component.\n */\nexport function Glyph({ id, width, className }: GlyphProps) {\n  const [source, glyphId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\nexport type ItemProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function Item({ id, width, className, title }: ItemProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div\n      className={clsx('sprite', className)}\n      style={{ width: `${width ?? 75}px`, height: `${width ?? 75}px` }}\n    >\n      <Sprite source={source} id={itemId} width={width} title={title} />\n    </div>\n  );\n}\n","/**\n * Returns the base url for the given library and path\n * @param library\n * @param path\n * @returns\n */\nexport function useBaseUrl(library: 'tdr' | 'tdi' | 'tdi-data') {\n  let baseUrl: string | undefined = '';\n  let folder: string | undefined = '';\n\n  switch (library) {\n    case 'tdi':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_IMAGES;\n      break;\n    case 'tdi-data':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_DATA;\n      break;\n    default:\n      baseUrl =\n        process.env.NODE_ENV === 'development'\n          ? process.env.REACT_APP_LOCAL_URL\n          : process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TD_RESOURCES;\n  }\n\n  return {\n    baseUrl,\n    getUrl: (path: string) => [baseUrl, folder, path].join('/'),\n  };\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('tdr');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? {},\n    hasResponseData,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { useSearchParams } from 'react-router-dom';\n\nexport function useItemQueryParams() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addQueryParam = (key: string, value: string) => {\n    searchParams.set(key, `${value}`);\n    setSearchParams(searchParams);\n  };\n\n  const removeQueryParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  return {\n    view: searchParams.get('view') ?? 'classifier',\n    setView: (value: string) => setSearchParams({ view: value }),\n    addQueryParam,\n    removeQueryParam,\n    searchParams,\n  };\n}\n","import { App } from 'antd';\nimport { isEmpty, mapKeys, merge, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { deserializeFirebaseData, getNewItem, getNewItemAttributeValues, serializeFirebaseData } from 'utils';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\n\n/**\n * This is to avoid new items being generated and unused just for the sake of placeholders.\n */\nconst globalNewItemsAttributesValues: Dictionary<ItemAtributesValues> = {};\n\nexport function useItemsAttribution() {\n  const { notification, message } = App.useApp();\n  const queryClient = useQueryClient();\n\n  // Gather basic item data\n  const tdrItemsQuery = useTDResource<Item>('items');\n  const tdrAttributesQuery = useTDResource<ItemAttribute>('items-attributes');\n  const tdrItemsAttributesValuesQuery = useTDResource<ItemAtributesValues>('items-attribute-values');\n  const firebaseItemsAttributeValuesQuery = useGetFirebaseDoc<\n    Dictionary<string>,\n    Dictionary<ItemAtributesValues>\n  >('data', 'itemsAttributeValues', {\n    select: deserializeFirebaseData,\n  });\n\n  const [modifiedAttributeValues, setModifiedAttributeValues] = useState<Dictionary<ItemAtributesValues>>({});\n\n  const mutation = useUpdateFirebaseDoc('data', 'itemsAttributeValues', {\n    onSuccess: () => {\n      notification.success({\n        message: 'itemsAttributeValues updated',\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'data', 'itemsAttributeValues'],\n      });\n      setModifiedAttributeValues({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: 'itemsAttributeValues update failed',\n        description: error.message,\n      });\n    },\n  });\n\n  const savedItemsAttributeValues = useMemo(() => {\n    return {\n      ...(tdrItemsAttributesValuesQuery.data ?? {}),\n      ...(firebaseItemsAttributeValuesQuery.data ?? {}),\n    };\n  }, [tdrItemsAttributesValuesQuery.data, firebaseItemsAttributeValuesQuery.data]);\n\n  const isDirty = !isEmpty(modifiedAttributeValues);\n  const addAttributesToUpdate = (id: string, item: ItemAtributesValues) => {\n    setModifiedAttributeValues((prev) => ({ ...prev, [id]: { ...item, updatedAt: Date.now() } }));\n  };\n  const addMultipleAttributesToUpdate = (itemsArr: ItemAtributesValues[]) => {\n    setModifiedAttributeValues((prev) => ({\n      ...prev,\n      ...mapKeys(\n        itemsArr.map((item) => ({ ...item, updatedAt: Date.now() })),\n        'id'\n      ),\n    }));\n  };\n\n  const firebaseData = firebaseItemsAttributeValuesQuery.data;\n\n  const save = () => {\n    mutation.mutate(serializeFirebaseData({ ...firebaseData, ...modifiedAttributeValues }));\n  };\n\n  // Filter items that have the alien category only\n  const availableItemIds = useMemo(() => {\n    const items = tdrItemsQuery.data ?? {};\n    return orderBy(\n      Object.keys(items).filter((id) => {\n        return (items[id]?.categories ?? []).includes('alien');\n      }),\n      (id) => Number(id),\n      'asc'\n    );\n  }, [tdrItemsQuery.data]);\n\n  const getItem = (id: string) => {\n    if ((tdrItemsQuery.data ?? {})?.[id]) {\n      return tdrItemsQuery.data[id];\n    }\n    if (id) {\n      message.info(`Item ${id} not found in TDR. Creating a new item...`);\n    }\n    return getNewItem({ id });\n  };\n\n  const getItemAttributeValues = (id: string) => {\n    const storedValue = savedItemsAttributeValues?.[id] ?? {};\n    const modifiedValue = modifiedAttributeValues[id] ?? {};\n\n    if (isEmpty(storedValue) && isEmpty(modifiedValue)) {\n      globalNewItemsAttributesValues[id] = getNewItemAttributeValues({ id });\n      return globalNewItemsAttributesValues[id];\n    }\n\n    return merge(globalNewItemsAttributesValues?.[id] ?? {}, storedValue, modifiedValue);\n  };\n\n  return {\n    availableItemIds,\n    getItem,\n    getItemAttributeValues,\n    attributes: tdrAttributesQuery.data ?? {},\n    isLoading:\n      tdrItemsQuery.isLoading ||\n      tdrAttributesQuery.isLoading ||\n      tdrItemsAttributesValuesQuery.isLoading ||\n      firebaseItemsAttributeValuesQuery.isLoading,\n    error:\n      tdrItemsQuery.error ||\n      tdrAttributesQuery.error ||\n      tdrItemsAttributesValuesQuery.error ||\n      firebaseItemsAttributeValuesQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addAttributesToUpdate,\n    addMultipleAttributesToUpdate,\n    attributesToUpdate: modifiedAttributeValues,\n    isDirty,\n  };\n}\n","import { App } from 'antd';\nimport { useItemsAttribution } from 'hooks/useItemsAttribution';\nimport { isEmpty, orderBy, random } from 'lodash';\nimport { ReactNode, useContext, createContext, useMemo, useState } from 'react';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\nimport { getNewItem, getNewItemAttributeValues, sortJsonKeys } from 'utils';\n\nexport type ItemsAttributeValuesContextType = {\n  getItem: (itemId: string) => Item;\n  getItemAttributeValues: (itemId: string) => ItemAtributesValues;\n  isLoading: boolean;\n  error: ResponseError;\n  hasResponseData: boolean;\n  isDirty: boolean;\n  itemAttributeValues: ItemAtributesValues;\n  prepareItemsAttributesFileForDownload: () => Dictionary<ItemAtributesValues>;\n  jumpToItem: (direction: string, itemId?: string) => void;\n  activeItem: Item;\n  onAttributeChange: (attributeId: string, value: number) => void;\n  isSaving: boolean;\n  save: () => void;\n  attributesList: ItemAttribute[];\n  availableItemIds: string[];\n  addAttributesToUpdate: (itemId: string, attributes: ItemAtributesValues) => void;\n  addMultipleAttributesToUpdate: (itemsArr: ItemAtributesValues[]) => void;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nconst ItemsAttributeValuesContext = createContext<ItemsAttributeValuesContextType>({\n  getItem: () => getNewItem(),\n  getItemAttributeValues: () => getNewItemAttributeValues(),\n  isLoading: true,\n  error: null,\n  hasResponseData: false,\n  isDirty: false,\n  jumpToItem: () => {},\n  activeItem: getNewItem(),\n  itemAttributeValues: getNewItemAttributeValues(),\n  onAttributeChange: () => {},\n  isSaving: false,\n  save: () => {},\n  attributesList: [],\n  availableItemIds: [],\n  addAttributesToUpdate: () => {},\n  addMultipleAttributesToUpdate: () => {},\n  prepareItemsAttributesFileForDownload: () => ({}),\n  attributes: {},\n});\n\ntype ItemsAttributeValuesProviderProps = {\n  children: ReactNode;\n};\n\nexport const ItemsAttributeValuesProvider = ({ children }: ItemsAttributeValuesProviderProps) => {\n  const {\n    getItem,\n    getItemAttributeValues,\n    availableItemIds,\n    isLoading,\n    error,\n    isSaving,\n    save,\n    addAttributesToUpdate,\n    isDirty,\n    attributes,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttribution();\n  const { message } = App.useApp();\n\n  const [itemIndex, setItemIndex] = useState(random(0, availableItemIds.length - 1));\n  const activeItem = getItem(availableItemIds[itemIndex]);\n  const itemAttributeValues = getItemAttributeValues(activeItem.id);\n\n  const jumpToItem = (direction: string, itemId?: string) => {\n    if (direction === 'next') {\n      setItemIndex((prev) => (prev + 1) % availableItemIds.length);\n    }\n    if (direction === 'previous') {\n      setItemIndex((prev) => (prev - 1 + availableItemIds.length) % availableItemIds.length);\n    }\n    if (direction === 'random') {\n      setItemIndex(random(0, availableItemIds.length - 1));\n    }\n\n    if (direction === 'first') {\n      setItemIndex(0);\n    }\n    if (direction === 'last') {\n      setItemIndex(availableItemIds.length - 1);\n    }\n    if (direction === 'next10') {\n      setItemIndex((prev) => (prev + 10) % availableItemIds.length);\n    }\n    if (direction === 'previous10') {\n      setItemIndex((prev) => (prev - 10 + availableItemIds.length) % availableItemIds.length);\n    }\n\n    if (direction === 'goTo' && itemId !== undefined) {\n      const index = availableItemIds.indexOf(itemId);\n      if (index !== -1) {\n        setItemIndex(index);\n      } else {\n        message.error(`Item ${itemId} is not available for attribution.`);\n      }\n    }\n  };\n\n  const attributesList = useMemo(() => orderBy(Object.values(attributes), 'name.en', 'asc'), [attributes]);\n\n  const onAttributeChange = (attributeId: string, value: number) => {\n    addAttributesToUpdate(activeItem.id, {\n      ...itemAttributeValues,\n      attributes: {\n        ...itemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const prepareItemsAttributesFileForDownload = () => {\n    return sortJsonKeys(\n      availableItemIds.reduce((acc: Dictionary<ItemAtributesValues>, itemId) => {\n        // Get items and only the ones with attributes\n        const item = getItemAttributeValues(itemId);\n\n        if (isEmpty(item.attributes)) {\n          return acc;\n        }\n\n        // Assess item completion\n        if (Object.keys(item.attributes).length === attributesList.length) {\n          item.complete = true;\n        } else {\n          delete item.complete;\n        }\n\n        acc[item.id] = item;\n\n        return acc;\n      }, {})\n    );\n  };\n\n  return (\n    <ItemsAttributeValuesContext.Provider\n      value={{\n        getItem,\n        getItemAttributeValues,\n        availableItemIds,\n        isLoading,\n        error,\n        hasResponseData: availableItemIds.length > 0 && !isEmpty(attributes),\n        isDirty,\n        itemAttributeValues,\n        jumpToItem,\n        activeItem,\n        onAttributeChange,\n        isSaving,\n        save,\n        attributes,\n        attributesList,\n        addAttributesToUpdate,\n        addMultipleAttributesToUpdate,\n        prepareItemsAttributesFileForDownload,\n      }}\n    >\n      {children}\n    </ItemsAttributeValuesContext.Provider>\n  );\n};\n\nexport const useItemsAttributeValuesContext = () => useContext(ItemsAttributeValuesContext);\n","import { Radio, Tooltip } from 'antd';\nimport { ItemAttribute } from 'types';\n\nimport { CheckCircleFilled, QuestionCircleOutlined } from '@ant-design/icons';\n\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\nconst attributeOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC },\n];\n\nconst attributeLimitedOptions = [\n  { label: 'Opposite', value: ATTRIBUTE_VALUE.OPPOSITE },\n  { label: 'Unrelated', value: ATTRIBUTE_VALUE.UNRELATED },\n  { label: 'Unclear', value: ATTRIBUTE_VALUE.UNCLEAR },\n  { label: 'Related', value: ATTRIBUTE_VALUE.RELATED },\n  { label: 'Deterministic', value: ATTRIBUTE_VALUE.DETERMINISTIC, disabled: true },\n];\n\ntype AttributionValueButtonsProps = {\n  attribute: ItemAttribute;\n  value?: number;\n  onChange: (attributeId: string, value: number) => void;\n  onlyButtons?: boolean;\n};\n\nexport function AttributionValueButtons({\n  attribute,\n  value,\n  onChange,\n  onlyButtons,\n}: AttributionValueButtonsProps) {\n  if (!attribute) return <></>;\n\n  if (onlyButtons) {\n    return (\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n    );\n  }\n\n  return (\n    <div key={attribute.id} className=\"attribute-button-container__row\">\n      <span className=\"attribute-button-container__label\">\n        {attribute.name.en}{' '}\n        <Tooltip title={attribute.description.en}>\n          <QuestionCircleOutlined />\n        </Tooltip>\n      </span>\n\n      <Radio.Group\n        options={attribute.limited ? attributeLimitedOptions : attributeOptions}\n        onChange={({ target: { value: v } }) => onChange(attribute.id, v)}\n        value={value}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n\n      <span>\n        <CheckCircleFilled style={{ color: value && value > 7 ? 'green' : 'transparent' }} />\n      </span>\n    </div>\n  );\n}\n","import { Flex } from 'antd';\nimport clsx from 'clsx';\nimport { FilterSwitch } from 'components/Common';\nimport { AlienSign } from 'components/Sprites';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { filterMessage, getItemAttributePriorityResponse, parseAttribute } from 'utils';\n\ntype ItemAttributeDescriptionProps = {\n  itemAttributeValues: ItemAtributesValues;\n  attributes: Dictionary<ItemAttribute>;\n};\n\nexport function ItemAttributeDescription({ itemAttributeValues, attributes }: ItemAttributeDescriptionProps) {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const filteredResponse = useMemo(\n    () =>\n      filterMessage(\n        getItemAttributePriorityResponse(itemAttributeValues, attributes),\n        showUnclear,\n        showUnrelated\n      ),\n    [itemAttributeValues, attributes, showUnclear, showUnrelated]\n  );\n\n  const Component = searchParams.get('signs') === 'true' ? AttributeSprite : AttributeText;\n\n  return (\n    <Flex gap={6} vertical>\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Alien Sings\"\n        value={searchParams.get('signs') === 'true'}\n        onChange={(v) => addQueryParam('signs', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <Flex gap={6} wrap=\"wrap\" className=\"item-attribute-value-statement\">\n        {filteredResponse.map((keyVariant, index, arr) => (\n          <Component\n            key={keyVariant}\n            keyVariant={keyVariant}\n            attributes={attributes}\n            firstElement={index === 0}\n            lastElement={index === arr.length - 1}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  );\n}\n\ntype AttributeSpriteProps = {\n  keyVariant: string;\n  attributes: Dictionary<ItemAttribute>;\n  firstElement: boolean;\n  lastElement: boolean;\n};\n\nexport function AttributeSprite({\n  keyVariant,\n  attributes,\n  withText,\n}: AttributeSpriteProps & { withText?: boolean }) {\n  const { key, className, text } = parseAttribute(keyVariant);\n\n  return (\n    <Flex vertical align=\"center\">\n      <AlienSign\n        width={50}\n        id={attributes[key].spriteId}\n        className={clsx('item-attribute-alien-sign', `item-attribute-alien-sign--${className}`)}\n      />\n      {withText && (\n        <Flex\n          wrap=\"wrap\"\n          justify=\"center\"\n          align=\"center\"\n          style={{ maxWidth: 50, textAlign: 'center', wordBreak: 'break-word' }}\n        >\n          {text} {attributes[key].name.en.toLowerCase()}\n        </Flex>\n      )}\n    </Flex>\n  );\n}\n\nfunction AttributeText({ keyVariant, attributes, firstElement, lastElement }: AttributeSpriteProps) {\n  const { key, text } = parseAttribute(keyVariant);\n\n  const prefix = firstElement ? \"It's \" : '';\n  const suffix = lastElement ? '.' : ', ';\n\n  return (\n    <>\n      {prefix}\n      {text} {attributes[key].name.en.toLowerCase()}\n      {suffix}\n    </>\n  );\n}\n","import { Tag, Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype StatProps = {\n  label: ReactNode;\n  children: ReactNode;\n};\n\nexport function Stat({ label, children }: StatProps) {\n  return (\n    <Typography.Text>\n      {label} <Tag>{children}</Tag>\n    </Typography.Text>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\nimport { Flex, Progress, Typography } from 'antd';\nimport { Stat } from 'components/Common/Stat';\nimport { useMemo } from 'react';\nimport { ItemAtributesValues, ItemAttribute } from 'types';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\n\ntype ItemAttributeStatsProps = {\n  attributesList: ItemAttribute[];\n  itemAttributeValues: ItemAtributesValues;\n};\n\nexport function ItemAttributeStats({ attributesList, itemAttributeValues }: ItemAttributeStatsProps) {\n  const { completion, isDeterministic, value, isOpposing, relevancy } = useMemo(() => {\n    const total = attributesList.length;\n    const completed = Object.keys(itemAttributeValues.attributes).length;\n    const completion = Math.floor((completed / total) * 100);\n\n    let isDeterministic = false;\n    let isOpposing = false;\n    let unclearCount = 0;\n    const value = Object.values(itemAttributeValues.attributes).reduce((acc: number, v) => {\n      if (v <= 0) {\n        if (v === ATTRIBUTE_VALUE.UNCLEAR) {\n          unclearCount += 1;\n        }\n        if (v === ATTRIBUTE_VALUE.OPPOSITE) {\n          isOpposing = true;\n        }\n        return acc;\n      }\n      if (v === ATTRIBUTE_VALUE.DETERMINISTIC) {\n        isDeterministic = true;\n      }\n\n      return acc + v;\n    }, 0);\n\n    const relevancy = Math.floor(((completed - unclearCount) / total) * 100);\n\n    return { completion, isDeterministic, value, isOpposing, relevancy };\n  }, [attributesList, itemAttributeValues.attributes]);\n\n  return (\n    <div>\n      <Typography.Text strong>Completion</Typography.Text>\n      <Progress percent={completion} size=\"small\" />\n      <Typography.Text strong>Stats</Typography.Text>\n      <Flex vertical>\n        <Stat label=\"Deterministic\">\n          {isDeterministic ? (\n            <CheckCircleFilled style={{ color: 'green' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red' }} />\n          )}\n        </Stat>\n        <Stat label=\"Opposing\">\n          {isOpposing ? (\n            <CheckCircleFilled style={{ color: 'CornflowerBlue' }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'grey' }} />\n          )}\n        </Stat>\n        <Stat label=\"Value\">{value}</Stat>\n        <Stat label=\"Reliability\">{relevancy}%</Stat>\n      </Flex>\n    </div>\n  );\n}\n","import { Button, Input } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { Item as ItemT } from 'types';\n\nimport { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype ItemBlockProps = {\n  item: ItemT;\n};\n\ntype ItemBlocksAdditionalProps = {\n  className?: string;\n  width: number;\n  language: 'en' | 'pt';\n  to: string;\n};\n\nexport function ItemSprite({\n  item,\n  width,\n  className,\n}: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'width' | 'className'>) {\n  return (\n    <Item id={item.id} width={width} title={`${item.name.en} | ${item.name.pt}`} className={className} />\n  );\n}\n\nexport function ItemId({ item }: ItemBlockProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={item.nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={item.id}\n        readOnly\n        style={{ width: '8ch' }}\n        onClick={() => copyToClipboard(item.id)}\n      />\n    </span>\n  );\n}\n\nexport function ItemName({ item, language }: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'language'>) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Name in ${language.toUpperCase()}`}\n      variant=\"borderless\"\n      size=\"small\"\n      value={item.name[language]}\n      readOnly\n    />\n  );\n}\n\nexport function ItemGoTo({ item }: ItemBlockProps) {\n  const [, setSearchParams] = useSearchParams();\n  const onGoTo = () => {\n    setSearchParams({ itemId: item.id, view: 'classifier' });\n  };\n\n  return (\n    <span>\n      <Button size=\"small\" shape=\"round\" onClick={onGoTo}>\n        Go to\n      </Button>\n    </span>\n  );\n}\n","import { Affix, Button, Card, Divider, Flex, Space, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { useEffect, useMemo } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemAttributeDescription } from './ItemAttributeDescription';\nimport { ItemAttributeStats } from './ItemAttributeStats';\nimport { ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemAttributionCard() {\n  const { activeItem, attributesList, itemAttributeValues, onAttributeChange, jumpToItem, attributes } =\n    useItemsAttributeValuesContext();\n  const { searchParams, removeQueryParam } = useItemQueryParams();\n  const queryParamsItemId = searchParams.get('itemId');\n\n  useEffect(() => {\n    if (queryParamsItemId) {\n      removeQueryParam('itemId');\n      jumpToItem('goTo', queryParamsItemId);\n    }\n  }, [queryParamsItemId, jumpToItem, removeQueryParam]);\n\n  const showOnlyUnset = searchParams.get('scope') === 'unset';\n  const filteredAttributesList = useMemo(\n    () =>\n      showOnlyUnset\n        ? attributesList.filter((attribute) => !itemAttributeValues.attributes[attribute.id])\n        : attributesList,\n    [showOnlyUnset, activeItem.id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (!activeItem)\n    return (\n      <Card>\n        <Typography.Text type=\"secondary\">\n          No item selected.{' '}\n          <Button size=\"small\" type=\"primary\" onClick={() => jumpToItem('random')}>\n            Random Item\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n\n  return (\n    <Card>\n      <div className=\"item-attribution-card\" key={`${activeItem.id}`}>\n        <Affix offsetTop={120} className=\"item-attribution-card__item\">\n          <Flex vertical gap={6}>\n            <ItemSprite item={activeItem} width={150} />\n            <ItemId item={activeItem} />\n            <ItemName item={activeItem} language=\"en\" />\n            <ItemName item={activeItem} language=\"pt\" />\n\n            <Divider className=\"my-2\" />\n            <ItemAttributeStats attributesList={attributesList} itemAttributeValues={itemAttributeValues} />\n            <Divider className=\"my-2\" />\n            <Typography.Text type=\"secondary\">\n              <ItemAttributeDescription itemAttributeValues={itemAttributeValues} attributes={attributes} />\n            </Typography.Text>\n          </Flex>\n        </Affix>\n\n        <Space size=\"small\" direction=\"vertical\" className=\"my-4 attribute-button-container\" wrap>\n          {filteredAttributesList.map((attribute, index) => (\n            <AttributionValueButtons\n              key={attribute.id}\n              attribute={attribute}\n              value={itemAttributeValues.attributes[attribute.id]}\n              onChange={onAttributeChange}\n            />\n          ))}\n        </Space>\n      </div>\n    </Card>\n  );\n}\n","import { Button, Popover } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\n\nimport {\n  DoubleLeftOutlined,\n  DoubleRightOutlined,\n  LeftOutlined,\n  RightOutlined,\n  VerticalLeftOutlined,\n  VerticalRightOutlined,\n} from '@ant-design/icons';\n\nimport { ItemsTypeahead } from './ItemsTypeahead';\n\nexport function ItemAttributionNavigation() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return (\n    <Button.Group className=\"my-4\">\n      <Button onClick={() => jumpToItem('first')} icon={<VerticalRightOutlined />}>\n        First\n      </Button>\n      <Button onClick={() => jumpToItem('previous10')} icon={<DoubleLeftOutlined />}>\n        Previous 10\n      </Button>\n      <Button onClick={() => jumpToItem('previous')} icon={<LeftOutlined />}>\n        Previous\n      </Button>\n      <Button onClick={() => jumpToItem('next')}>\n        Next <RightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('next10')}>\n        Next 10 <DoubleRightOutlined />\n      </Button>\n      <Button onClick={() => jumpToItem('last')}>\n        Last <VerticalLeftOutlined />\n      </Button>\n      <Popover content={<GoToItemPopOverContent />} title=\"Title\">\n        <Button>Go To</Button>\n      </Popover>\n    </Button.Group>\n  );\n}\n\nfunction GoToItemPopOverContent() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  return <ItemsTypeahead isPending={false} onFinish={(itemId) => jumpToItem('goTo', itemId)} />;\n}\n","import { Button, Card, Divider, Flex, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemSampler } from 'hooks/useItemSampler';\nimport { isEmpty } from 'lodash';\nimport { Fragment } from 'react';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemSamplerCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { sampleIds, attribute, onGetSample, updateAttributeValue } = useItemSampler();\n\n  if (isEmpty(sampleIds) && isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">\n          No sample has been generated. Tweak options and{' '}\n          <Button size=\"small\" type=\"primary\" onClick={onGetSample}>\n            Get Sample\n          </Button>\n        </Typography.Text>\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      className=\"my-4\"\n      title={<Typography.Text>{attribute?.name.en}</Typography.Text>}\n      actions={[\n        <Button type=\"primary\" block ghost onClick={onGetSample}>\n          Get New Sample\n        </Button>,\n      ]}\n      extra={\n        <Button type=\"primary\" size=\"small\" onClick={onGetSample}>\n          Get New Sample\n        </Button>\n      }\n    >\n      <Flex vertical gap={6}>\n        {sampleIds.map((itemId) => {\n          const itemAttributes = getItemAttributeValues(itemId);\n          const item = getItem(itemId);\n\n          return (\n            <Fragment key={`${itemId}-${itemAttributes.updatedAt}`}>\n              <Flex gap={6}>\n                <ItemSprite item={item} width={75} />\n                <Flex vertical gap={6}>\n                  <Flex gap={6}>\n                    <ItemId item={item} />\n                    <ItemGoTo item={item} />\n                  </Flex>\n                  <ItemName item={item} language=\"en\" />\n                  <ItemName item={item} language=\"pt\" />\n                </Flex>\n                <AttributionValueButtons\n                  attribute={attribute!}\n                  value={itemAttributes.attributes[attribute!.id]}\n                  onChange={(attributeId: string, value: number) =>\n                    updateAttributeValue(item.id, attributeId, value)\n                  }\n                />\n              </Flex>\n              <Divider className=\"my-1\" />\n            </Fragment>\n          );\n        })}\n      </Flex>\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { sample as lodashSample, shuffle } from 'lodash';\nimport { useState } from 'react';\nimport { ItemAttribute } from 'types';\n\nimport { useItemQueryParams } from './useItemQueryParams';\n\nexport function useItemSampler() {\n  const { attributesList, availableItemIds, addAttributesToUpdate, getItemAttributeValues } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n\n  const [sampleIds, setSampleIds] = useState<string[]>([]);\n  const [attribute, setAttribute] = useState<ItemAttribute>();\n\n  // Create sample\n  const onGetSample = () => {\n    const attributeKey = searchParams.get('attribute') ?? lodashSample(attributesList)?.id ?? 'ali';\n    const selectedAttribute =\n      attributesList.find((a) => a.id === attributeKey) ?? lodashSample(attributesList);\n    const sampleSize = Number(searchParams.get('size')) || 9;\n\n    const selected: string[] = [];\n    const options = shuffle(availableItemIds);\n\n    for (let i = 0; i < options.length; i++) {\n      if (selected.length === sampleSize) break;\n\n      const itemId = options[i];\n      const currentAttributeValues = getItemAttributeValues(itemId).attributes;\n\n      if (!currentAttributeValues[attributeKey]) {\n        selected.push(itemId);\n      }\n    }\n\n    setAttribute(selectedAttribute);\n    setSampleIds(selected);\n  };\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  return {\n    sampleIds,\n    attribute,\n    onGetSample,\n    updateAttributeValue,\n  };\n}\n","import { VerticalAlignTopOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport { useEffect, useState } from 'react';\n\nexport function GoToTopButton(props: ButtonProps) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const handleScroll = () => {\n    setIsVisible(window.pageYOffset > 300);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <Button\n      className={`go-to-top-button ${isVisible ? 'visible' : ''}`}\n      onClick={scrollToTop}\n      icon={<VerticalAlignTopOutlined />}\n      {...props}\n    >\n      Go to Top\n    </Button>\n  );\n}\n","import { Button, Card, Flex, Pagination, Popconfirm, Typography } from 'antd';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemGrouping } from 'hooks/useItemGrouping';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMedia } from 'react-use';\n\nimport { AttributionValueButtons } from './AttributionValueButtons';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemGroupingCard() {\n  const { getItem, getItemAttributeValues } = useItemsAttributeValuesContext();\n  const { attribute, pageIds, group, updateAttributeValue, updatePageItemsAsUnrelated, pagination } =\n    useItemGrouping();\n  const { searchParams } = useItemQueryParams();\n  const isNarrow = useMedia('(max-width: 1024px)');\n\n  if (isEmpty(attribute)) {\n    return (\n      <Card className=\"my-4\">\n        <Typography.Text type=\"secondary\">No group attribute has been selected.</Typography.Text>\n      </Card>\n    );\n  }\n\n  const paginationComponent = (\n    <Pagination\n      key=\"pagination\"\n      onChange={pagination.onChange}\n      current={pagination.current}\n      total={pagination.total}\n      pageSizeOptions={pagination.pageSizeOptions}\n      pageSize={pagination.pageSize}\n      onShowSizeChange={pagination.onShowSizeChange}\n    />\n  );\n\n  const isUnsetSet = searchParams.get('scope') === 'unset' || !searchParams.get('scope');\n  const unrelateButton = isUnsetSet && (\n    <Popconfirm\n      key=\"unrelate-button\"\n      title={`Are you sure everything is unrelated to ${attribute.name.en}?`}\n      onConfirm={updatePageItemsAsUnrelated}\n    >\n      <Button type=\"primary\" danger disabled={pageIds.length === 0}>\n        Unrelate Unset Items on Page\n      </Button>\n    </Popconfirm>\n  );\n  return (\n    <Card\n      className=\"my-4\"\n      title={\n        <Typography.Text>\n          {attribute?.name.en} ({group.length})\n        </Typography.Text>\n      }\n      extra={paginationComponent}\n      actions={[unrelateButton, <GoToTopButton key=\"go-to-top\" />, paginationComponent].filter(Boolean)}\n    >\n      {pageIds.map((itemId) => {\n        const itemAttributes = getItemAttributeValues(itemId);\n        const item = getItem(itemId);\n\n        return (\n          <Card.Grid\n            key={`${itemId}-${itemAttributes.updatedAt}`}\n            style={{ width: isNarrow ? '50%' : '25%' }}\n          >\n            <Flex gap={6}>\n              <Flex vertical gap={6}>\n                <ItemSprite item={item} width={75} />\n                <ItemId item={item} />\n                <ItemGoTo item={item} />\n                <ItemName item={item} language=\"en\" />\n                <ItemName item={item} language=\"pt\" />\n              </Flex>\n              <AttributionValueButtons\n                attribute={attribute!}\n                value={itemAttributes.attributes[attribute!.id]}\n                onlyButtons\n                onChange={(attributeId: string, value: number) =>\n                  updateAttributeValue(item.id, attributeId, value)\n                }\n              />\n            </Flex>\n          </Card.Grid>\n        );\n      })}\n    </Card>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useMemo, useState } from 'react';\n\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { ATTRIBUTE_VALUE } from 'utils/constants';\nimport { orderBy } from 'lodash';\n\nexport function useItemGrouping() {\n  const {\n    attributesList,\n    addAttributesToUpdate,\n    getItemAttributeValues,\n    availableItemIds,\n    addMultipleAttributesToUpdate,\n  } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  const attributeKey = searchParams.get('attribute') ?? 'ali';\n  const scope = searchParams.get('scope') ?? 'unset';\n\n  const page = searchParams.get('page') ?? '1';\n  const pageSize = searchParams.get('pageSize') ?? '12';\n\n  const [previousAttribute, setPreviousAttribute] = useState<string>('ali');\n  const [previousScope, setPreviousScope] = useState<string>('unset');\n\n  const group = useMemo(() => {\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    const scopeValue =\n      scope === 'unset' ? undefined : ATTRIBUTE_VALUE[scope.toUpperCase() as keyof typeof ATTRIBUTE_VALUE];\n\n    const filteredItemIds = itemsAttributes\n      .filter((item) => item.attributes?.[attributeKey] === scopeValue)\n      .map((item) => item.id);\n\n    return orderBy(\n      filteredItemIds,\n      [(id) => getItemAttributeValues(id)?.updatedAt, (id) => Number(id)],\n      ['desc', 'asc']\n    );\n  }, [attributeKey, scope]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const pageIds = useMemo(() => {\n    if (previousAttribute !== attributeKey || previousScope !== scope) {\n      setPreviousAttribute(attributeKey);\n      setPreviousScope(scope);\n      addQueryParam('page', '1');\n      return group.slice(0, Number(pageSize));\n    }\n\n    const start = (Number(page) - 1) * Number(pageSize);\n    const end = start + Number(pageSize);\n\n    return group.slice(start, end);\n  }, [page, pageSize, group]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const attribute = attributesList.find((a) => a.id === attributeKey);\n\n  const updateAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    const currentItemAttributeValues = getItemAttributeValues(itemId);\n\n    addAttributesToUpdate(itemId, {\n      ...currentItemAttributeValues,\n      attributes: {\n        ...currentItemAttributeValues.attributes,\n        [attributeId]: value,\n      },\n    });\n  };\n\n  const updatePageItemsAsUnrelated = () => {\n    addMultipleAttributesToUpdate(\n      pageIds.map((id) => {\n        const prev = getItemAttributeValues(id);\n        if (!prev.attributes[attributeKey]) {\n          prev.attributes[attributeKey] = ATTRIBUTE_VALUE.UNRELATED;\n        }\n\n        return prev;\n      })\n    );\n  };\n\n  return {\n    group,\n    pageIds,\n    attribute,\n    updateAttributeValue,\n    updatePageItemsAsUnrelated,\n    pagination: {\n      total: group.length,\n      current: Number(page),\n      pageSize: Number(pageSize),\n      onChange: (page: number) => addQueryParam('page', String(page)),\n      onShowSizeChange: (_: number, pageSize: number) => addQueryParam('pageSize', String(pageSize)),\n      pageSizeOptions: [12, 24, 48, 96],\n    },\n  };\n}\n","import { Flex, Table, TableColumnsType, Typography } from 'antd';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { ItemMessageObject, useItemsComparator } from 'hooks/useItemsComparator';\nimport { Item } from 'types';\n\nimport { AttributeSprite } from './ItemAttributeDescription';\nimport { ItemGoTo, ItemId, ItemName, ItemSprite } from './ItemBuildingBlocks';\n\nexport function ItemComparatorCard() {\n  const { attributes } = useItemsAttributeValuesContext();\n  const { itemMessages, grouping } = useItemsComparator();\n\n  const columns: TableColumnsType<ItemMessageObject> = [\n    {\n      title: 'Item Id',\n      dataIndex: 'item',\n      key: 'id',\n      render: (item: Item) => (\n        <div>\n          <ItemId item={item} />\n          <ItemGoTo item={item} />\n        </div>\n      ),\n      sorter: (a, b) => Number(a.item.id) - Number(b.item.id),\n    },\n    {\n      title: 'Sprite',\n      dataIndex: 'item',\n      key: 'sprite',\n      render: (item: Item) => <ItemSprite item={item} width={75} />,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'item',\n      key: 'name',\n      render: (item: Item) => (\n        <>\n          <ItemName item={item} language=\"en\" />\n          <ItemName item={item} language=\"pt\" />\n        </>\n      ),\n      sorter: (a, b) => a.item.name.en.localeCompare(b.item.name.en),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'message',\n      key: 'message',\n      render: (message: string[], { item }) => (\n        <Flex gap={6}>\n          {message.map((keyVariant, index, arr) => (\n            <AttributeSprite\n              key={`${keyVariant}-${item.id}`}\n              keyVariant={keyVariant}\n              attributes={attributes}\n              firstElement={index === 0}\n              lastElement={index === arr.length - 1}\n              withText\n            />\n          ))}\n        </Flex>\n      ),\n      sorter: (a, b) => a.message.join(' ').localeCompare(b.message.join(' ')),\n    },\n    {\n      title: 'Complete',\n      dataIndex: 'itemAttributesValues',\n      key: 'complete',\n      render: (itemAttributesValues: { complete: boolean }) => (itemAttributesValues.complete ? 'Yes' : 'No'),\n    },\n    {\n      title: 'Identical',\n      dataIndex: 'message',\n      key: 'identical',\n      render: (message: string[]) => {\n        const group = grouping[message.join(' ')] ?? [];\n        return <>{group.length > 1 ? group.length : ''}</>;\n      },\n      sorter: (a, b) => {\n        const groupA = grouping[a.message.join(' ')] ?? [];\n        const groupB = grouping[b.message.join(' ')] ?? [];\n        return groupB.length - groupA.length;\n      },\n    },\n  ];\n\n  return (\n    <div className=\"my-4\">\n      <Typography.Title level={5}>Item Comparator</Typography.Title>\n      <Table dataSource={itemMessages} columns={columns} />\n    </div>\n  );\n}\n","import { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { keyBy, orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { filterMessage, getItemAttributePriorityResponse } from 'utils';\nimport { useItemQueryParams } from './useItemQueryParams';\nimport { Item, ItemAtributesValues } from 'types';\n\nexport type ItemMessageObject = {\n  item: Item;\n  itemAttributesValues: ItemAtributesValues;\n  message: string[];\n  fullMessage: string[];\n};\n\nexport function useItemsComparator() {\n  const { attributes, getItemAttributeValues, availableItemIds, getItem, isLoading } =\n    useItemsAttributeValuesContext();\n  const { searchParams } = useItemQueryParams();\n  const showComplete = searchParams.get('showComplete') === 'true';\n  const showUnclear = searchParams.get('showUnclear') === 'true';\n  const showUnrelated = searchParams.get('showUnrelated') === 'true';\n\n  const { itemMessages, itemMessagesDict, grouping } = useMemo(() => {\n    if (isLoading) {\n      const itemMessages: ItemMessageObject[] = [];\n      return {\n        itemMessages,\n        itemMessagesDict: {},\n        grouping: {},\n      };\n    }\n    console.log('useItemsComparator');\n\n    const itemMessages = orderBy(\n      availableItemIds\n        .map((id) => {\n          const itemAttributesValues = getItemAttributeValues(id);\n          const itemMessage = getItemAttributePriorityResponse(itemAttributesValues, attributes);\n          return {\n            item: getItem(id),\n            itemAttributesValues,\n            message: filterMessage(itemMessage, showUnclear, showUnrelated),\n            fullMessage: itemMessage,\n          };\n        })\n        .filter(({ itemAttributesValues }) => (showComplete ? itemAttributesValues.complete : true)),\n      ['message'],\n      ['asc']\n    );\n\n    const grouping = itemMessages.reduce((acc: Dictionary<string[]>, { message, item: { id } }) => {\n      const key = message.join(' ');\n\n      if (acc[key] === undefined) {\n        acc[key] = [];\n      }\n      acc[key].push(id);\n\n      return acc;\n    }, {});\n\n    const moreThanOne = Object.values(grouping).filter((ids) => ids.length > 1);\n    if (moreThanOne.length > 0) {\n      console.log('More than one', moreThanOne);\n    }\n    console.log(grouping);\n\n    return {\n      itemMessages,\n      itemMessagesDict: keyBy(itemMessages, 'item.id'),\n      grouping,\n    };\n  }, [\n    attributes,\n    availableItemIds,\n    getItemAttributeValues,\n    getItem,\n    isLoading,\n    showComplete,\n    showUnclear,\n    showUnrelated,\n  ]);\n\n  return {\n    itemMessages,\n    itemMessagesDict,\n    grouping,\n  };\n}\n","import { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { ItemAttributionCard } from './ItemAttributionCard';\nimport { ItemAttributionNavigation } from './ItemAttributionNavigation';\nimport { Empty, Flex } from 'antd';\nimport { ItemSamplerCard } from './ItemSamplerCard';\nimport { ItemGroupingCard } from './ItemGroupingCard';\nimport { GoToTopButton } from 'components/Common/GoToTopButton';\nimport { ItemComparatorCard } from './ItemComparatorCard';\n\nexport function ItemAttributionPageContent() {\n  const { view } = useItemQueryParams();\n\n  if (view === 'classifier') {\n    return (\n      <>\n        <ItemAttributionNavigation />\n        <ItemAttributionCard />\n        <Flex justify=\"flex-end\" className=\"my-4\">\n          <GoToTopButton />\n        </Flex>\n      </>\n    );\n  }\n\n  if (view === 'sampler') {\n    return <ItemSamplerCard />;\n  }\n\n  if (view === 'grouping') {\n    return <ItemGroupingCard />;\n  }\n\n  if (view === 'comparator') {\n    return <ItemComparatorCard />;\n  }\n\n  return <Empty className=\"my-10\" description=\"Unknown view has been selected\" />;\n}\n","import { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterNumber, FilterSelect, FilterSwitch } from 'components/Common';\nimport { Stat } from 'components/Common/Stat';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\nimport { isEmpty } from 'lodash';\nimport { useMemo } from 'react';\nimport { ATTRIBUTE_GROUP_VALUES } from 'utils/constants';\n\nexport function ItemAttributionStats() {\n  const { getItemAttributeValues, availableItemIds, attributesList } = useItemsAttributeValuesContext();\n\n  const {\n    total,\n    complete,\n    completionPercentage,\n    hasDataCount,\n    initiatedPercentage,\n    progress,\n    progressTotal,\n    currentProgress,\n  } = useMemo(() => {\n    const total = availableItemIds.length;\n    let someData = 0;\n    let complete = 0;\n    let currentProgress = 0;\n    const itemsAttributes = availableItemIds.map((id) => getItemAttributeValues(id));\n    itemsAttributes.forEach(({ complete: isComplete, attributes }) => {\n      if (!isEmpty(attributes)) {\n        someData += 1;\n      }\n      if (Object.values(attributes).length === attributesList.length) {\n        complete += 1;\n      }\n\n      currentProgress += Object.values(attributes).length;\n    });\n\n    const progressTotal = Object.values(attributesList).length * availableItemIds.length;\n\n    return {\n      total,\n      complete,\n      completionPercentage: total > 0 ? ((complete / total) * 100).toFixed(1) : 0,\n      hasDataCount: someData,\n      initiatedPercentage: total > 0 ? Math.floor((someData / total) * 100) : 0,\n      progress: ((currentProgress / progressTotal) * 100).toFixed(1),\n      currentProgress,\n      progressTotal,\n    };\n  }, [attributesList, availableItemIds, getItemAttributeValues]);\n\n  return (\n    <>\n      <Flex vertical>\n        <Typography.Text strong className=\"mb-2\">\n          Items Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{total}</Stat>\n        <Stat label=\"Complete\">\n          {complete} ({completionPercentage}%)\n        </Stat>\n        <Stat label=\"Initiated\">\n          {hasDataCount} ({initiatedPercentage}%)\n        </Stat>\n        <Typography.Text strong className=\"mt-4 mb-2\">\n          Attributes Stats\n        </Typography.Text>\n        <Stat label=\"Total\">{progressTotal}</Stat>\n        <Stat label=\"Set\">{currentProgress}</Stat>\n        <Stat label=\"Progress\">{progress}%</Stat>\n      </Flex>\n      <Divider />\n    </>\n  );\n}\n\nexport function ItemAttributionClassifierFilters() {\n  const { jumpToItem } = useItemsAttributeValuesContext();\n  const { searchParams, addQueryParam } = useItemQueryParams();\n\n  return (\n    <>\n      <Button block onClick={() => jumpToItem('random')} type=\"primary\">\n        Random Item\n      </Button>\n      <FilterSwitch\n        label=\"Unset Only\"\n        value={searchParams.get('scope') === 'unset'}\n        onChange={(value) => addQueryParam('scope', value ? 'unset' : '')}\n        className=\"mt-4\"\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionSamplerFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return [\n      { label: 'Random Attribute', value: 'random' },\n      ...attributesList.map(({ id, name }) => ({ label: name.en, value: id })),\n    ];\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Sampler Attribute\"\n        value={searchParams.get('attribute') || 'random'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n      <FilterNumber\n        label=\"Sample Size\"\n        value={Number(searchParams.get('size') || 9)}\n        onChange={(v) => addQueryParam('size', String(v))}\n        min={3}\n        max={21}\n        step={3}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionGroupingFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  const { attributesList } = useItemsAttributeValuesContext();\n\n  const options = useMemo(() => {\n    return attributesList.map(({ id, name }) => ({ label: name.en, value: id }));\n  }, [attributesList]);\n\n  return (\n    <>\n      <FilterSelect\n        label=\"Attribute\"\n        value={searchParams.get('attribute') || 'ali'}\n        onChange={(v) => addQueryParam('attribute', v)}\n        options={options}\n      />\n\n      <FilterSelect\n        label=\"Scope\"\n        value={searchParams.get('scope') || 'unset'}\n        onChange={(v) => addQueryParam('scope', v)}\n        options={[{ value: 'unset', label: 'Unset' }, ...ATTRIBUTE_GROUP_VALUES]}\n      />\n\n      <FilterSelect\n        label=\"Results per page\"\n        value={searchParams.get('pageSize') || 12}\n        onChange={(v) => addQueryParam('pageSize', v)}\n        options={[12, 24, 48, 96]}\n      />\n    </>\n  );\n}\n\nexport function ItemAttributionComparatorFilters() {\n  const { searchParams, addQueryParam } = useItemQueryParams();\n  return (\n    <>\n      <FilterSwitch\n        label=\"Only Complete\"\n        value={searchParams.get('showComplete') === 'true'}\n        onChange={(v) => addQueryParam('showComplete', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unrelated\"\n        value={searchParams.get('showUnrelated') === 'true'}\n        onChange={(v) => addQueryParam('showUnrelated', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n      <FilterSwitch\n        label=\"Show Unclear\"\n        value={searchParams.get('showUnclear') === 'true'}\n        onChange={(v) => addQueryParam('showUnclear', v ? 'true' : '')}\n        className=\"full-width m-0\"\n      />\n    </>\n  );\n}\n","import { Button, Divider, Flex } from 'antd';\nimport { FilterSelect } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SiderContent } from 'components/Layout';\nimport { useItemsAttributeValuesContext } from 'context/ItemsAttributeValuesContext';\nimport { useItemQueryParams } from 'hooks/useItemQueryParams';\n\nimport {\n  ItemAttributionClassifierFilters,\n  ItemAttributionComparatorFilters,\n  ItemAttributionGroupingFilters,\n  ItemAttributionSamplerFilters,\n  ItemAttributionStats,\n} from './ItemAttributionFilersSections';\n\nexport function ItemAttributionFilters() {\n  const { isDirty, save, prepareItemsAttributesFileForDownload } = useItemsAttributeValuesContext();\n\n  const { view, setView } = useItemQueryParams();\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <Button block danger type=\"primary\" disabled={!isDirty} onClick={save} size=\"large\">\n          Save\n        </Button>\n        <DownloadButton\n          data={() => prepareItemsAttributesFileForDownload()}\n          fileName=\"items-attribute-values.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider />\n\n      <ItemAttributionStats />\n\n      <FilterSelect\n        label=\"View\"\n        value={view}\n        onChange={setView}\n        options={['classifier', 'sampler', 'grouping', 'comparator']}\n      />\n      <Divider />\n\n      {view === 'classifier' && <ItemAttributionClassifierFilters />}\n      {view === 'sampler' && <ItemAttributionSamplerFilters />}\n      {view === 'grouping' && <ItemAttributionGroupingFilters />}\n      {view === 'comparator' && <ItemAttributionComparatorFilters />}\n    </SiderContent>\n  );\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemAttributionPageContent } from 'components/Items/ItemAttributionPageContent';\nimport { ItemAttributionFilters } from 'components/Items/ItemAttributionFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport {\n  ItemsAttributeValuesProvider,\n  useItemsAttributeValuesContext,\n} from 'context/ItemsAttributeValuesContext';\n\nfunction ItemsAttributionPage() {\n  const { isLoading, error, hasResponseData } = useItemsAttributeValuesContext();\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Attribution\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemAttributionFilters />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper isLoading={isLoading} error={error} hasResponseData={hasResponseData}>\n            <ItemAttributionPageContent />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nfunction ItemsAttribution() {\n  return (\n    <ItemsAttributeValuesProvider>\n      <ItemsAttributionPage />\n    </ItemsAttributeValuesProvider>\n  );\n}\n\nexport default ItemsAttribution;\n","import { AlienSign, Emoji, Glyph } from 'components/Sprites';\nimport { capitalize, invert, keyBy } from 'lodash';\n\nexport const SEARCH_THRESHOLD: number = 2;\n\nexport const RESOURCE_NAMES = {\n  ADJECTIVES: 'adjectives',\n  ALIEN_ITEMS: 'alien-items',\n  ARTE_RUIM_CARDS: 'arte-ruim-cards',\n  ARTE_RUIM_GROUPS: 'arte-ruim-groups',\n  ARTE_RUIM_PAIRS: 'arte-ruim-pairs',\n  CATEGORIES: 'categories',\n  CHALLENGES: 'challenges',\n  CHARACTERS: 'characters',\n  CHOICES: 'choices',\n  CONTENDERS: 'contenders',\n  CRIME_EVIDENCE: 'crime-evidence',\n  CRIME_TILES: 'crime-tiles',\n  CRIME_WEAPONS: 'crime-weapons',\n  DATING_CANDIDATE: 'dating-candidate',\n  DATING_CANDIDATE_BODIES: 'dating-candidate-bodies',\n  DATING_CANDIDATE_HEADS: 'dating-candidate-heads',\n  DIAGRAM_TOPICS: 'diagram-topics',\n  DILEMMAS: 'dilemmas',\n  DRAWING_WORDS: 'drawing-words',\n  GROUP_QUESTIONS: 'group-questions',\n  ITEMS_ATTRIBUTES: 'items-attributes',\n  MONSTER_ORIENTATION: 'monster-orientation',\n  MOVIE_REVIEWS: 'movie-reviews',\n  MOVIES: 'movies',\n  NAMING_PROMPTS: 'naming-prompts',\n  OBJECT_FEATURES: 'object-features',\n  QUANTITATIVE_QUESTIONS: 'quantitative-questions',\n  SCENARIOS: 'scenarios',\n  SPECTRUMS: 'spectrums',\n  SINGLE_WORDS: 'single-words',\n  SPY_LOCATIONS: 'spy-locations',\n  SPY_QUESTIONS: 'spy-questions',\n  SUSPECTS: 'suspects',\n  TESTIMONY_QUESTIONS: 'testimony-questions',\n  THEME_WORDS: 'theme-words',\n  THING_PROMPTS: 'thing-prompts',\n  THINGS_QUALITIES: 'things-qualities',\n  TOPICS: 'topics',\n  TREE_WORDS: 'tree-words',\n  TWEETS: 'tweets',\n};\n\nexport const DUAL_LANGUAGE_RESOURCES = [\n  RESOURCE_NAMES.ALIEN_ITEMS,\n  RESOURCE_NAMES.CONTENDERS,\n  RESOURCE_NAMES.CRIME_EVIDENCE,\n  RESOURCE_NAMES.CRIME_TILES,\n  RESOURCE_NAMES.CRIME_WEAPONS,\n  RESOURCE_NAMES.DATING_CANDIDATE_BODIES,\n  RESOURCE_NAMES.DATING_CANDIDATE_HEADS,\n  RESOURCE_NAMES.ITEMS_ATTRIBUTES,\n  RESOURCE_NAMES.MONSTER_ORIENTATION,\n  RESOURCE_NAMES.OBJECT_FEATURES,\n  RESOURCE_NAMES.SUSPECTS,\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n\nexport const SEARCH_PROPERTY: Record<string, string> = {\n  adjectives: 'text',\n  'arte-ruim-cards': 'text',\n  'arte-ruim-groups': 'theme',\n  'arte-ruim-pairs': 'values',\n  categories: 'text',\n  challenges: 'text',\n  characters: 'text',\n  contenders: '',\n  'crime-tiles': '',\n  'diagram-topics': 'text',\n  'galeria-de-sonhos': 'text',\n  'group-questions': 'text',\n  'linhas-cruzadas': 'text',\n  'naming-prompts': 'text',\n  spectrums: '',\n  'single-words': 'text',\n  'spy-locations': '',\n  'spy-questions': '',\n  'testimony-questions': 'question',\n  'thing-prompts': 'text',\n  topics: 'text',\n};\n\nexport const TOTAL_ITEMS = 1418;\n\nexport const SPRITE_LIBRARY = keyBy(\n  [\n    {\n      key: 'alien-signs',\n      name: 'Alien Signs',\n      prefix: 'sign',\n      quantity: 38,\n      startAt: 0,\n      component: AlienSign,\n    },\n    {\n      key: 'emojis',\n      name: 'Emojis',\n      prefix: 'emoji',\n      quantity: 30,\n      startAt: 1,\n      component: Emoji,\n    },\n    {\n      key: 'glyphs',\n      name: 'Glyphs',\n      prefix: 'glyph',\n      quantity: 365,\n      startAt: 1,\n      component: Glyph,\n    },\n  ],\n  'key'\n);\n\n/**\n * Options for the sample size selector\n */\nexport const TAGS_SELECTOR_OPTIONS = [\n  { label: 'Any', value: '' },\n  { label: '= 0', value: 0 },\n  { label: '< 3', value: 3 },\n  { label: '< 5', value: 5 },\n  { label: '< 10', value: 10 },\n];\n\n/**\n * Options for the sample size selector\n */\nexport const SAMPLE_SIZE_OPTIONS = [\n  {\n    label: '9',\n    value: 9,\n  },\n  {\n    label: '15',\n    value: 15,\n  },\n  {\n    label: '30',\n    value: 30,\n  },\n  {\n    label: '50',\n    value: 50,\n  },\n  {\n    label: '100',\n    value: 100,\n  },\n];\n\n/**\n * Options for the card size selector\n */\nexport const CARD_SIZE_OPTIONS = [\n  {\n    label: 'Small',\n    value: 100,\n  },\n  {\n    label: 'Medium',\n    value: 150,\n  },\n  {\n    label: 'Large',\n    value: 200,\n  },\n  {\n    label: 'X-Large',\n    value: 250,\n  },\n];\n\nexport const ATTRIBUTE_VALUE = {\n  OPPOSITE: -10,\n  UNRELATED: -3,\n  UNCLEAR: -1,\n  RELATED: 5,\n  DETERMINISTIC: 10,\n};\n\nexport const VALUE_ATTRIBUTE = invert(ATTRIBUTE_VALUE);\n\nexport const ATTRIBUTE_VALUE_PREFIX = {\n  OPPOSITE: '^',\n  UNRELATED: '!',\n  UNCLEAR: '~',\n  RELATED: '',\n  DETERMINISTIC: '+',\n};\n\nexport const ATTRIBUTE_GROUP_VALUES = Object.keys(ATTRIBUTE_VALUE).map((key) => ({\n  value: key.toLowerCase(),\n  label: capitalize(key),\n}));\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n","import { chain, cloneDeep, isObject, memoize, merge, orderBy } from 'lodash';\nimport { ATTRIBUTE_VALUE, ATTRIBUTE_VALUE_PREFIX, SEARCH_THRESHOLD } from './constants';\nimport stringSimilarity from 'string-similarity';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\n\n/**\n *\n * @param str\n * @returns\n */\nexport function stringRemoveAccents(str: string) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n *\n * @param data\n * @param property\n * @returns\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n *\n * @param str\n * @param data\n * @param property\n * @returns\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const val = typeof entry[property] === 'string' ? entry[property] : JSON.stringify(entry[property]);\n    const entryStr = stringRemoveAccents(val.toLowerCase());\n\n    if (entryStr.includes(value) || stringSimilarity.compareTwoStrings(str, entryStr) > 0.5) {\n      similar[entry.id] = val;\n    }\n  });\n\n  return similar;\n};\n\nexport const findBestMatch = (str: string, list: string[]) => {};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n\n/**\n * Remove duplicated elements from a list\n * @param arr\n * @returns\n */\nexport const removeDuplicates = <T>(arr: T[]): T[] => {\n  return Array.from(new Set(arr));\n};\n\n/**\n * Converts a object into a downloadable file and prompts download\n * @param obj\n * @param filename\n */\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\n/**\n * Sorts the keys of a JSON object based on a predefined order.\n * The keys 'id', 'name', 'title', and 'type' will be placed first in the sorted object,\n * followed by the remaining keys in alphabetical order.\n *\n * @param library - The JSON object to sort.\n * @returns The sorted JSON object.\n */\nexport const sortJsonKeys = (library: PlainObject): PlainObject => {\n  function sortKeys(obj: any): any {\n    if (isObject(obj) && !Array.isArray(obj)) {\n      const sortedKeys = Object.keys(obj)\n        .filter((key) => ['id', 'name', 'title', 'type'].includes(key))\n        .concat(\n          Object.keys(obj)\n            .filter((key) => !['id', 'name', 'title', 'type'].includes(key))\n            .sort()\n        );\n\n      return chain(obj)\n        .toPairs()\n        .sortBy(([key, _]) => sortedKeys.indexOf(key))\n        .map(([key, value]) => [key, sortKeys(value)])\n        .fromPairs()\n        .value();\n    }\n    return obj;\n  }\n\n  return sortKeys(library);\n};\n\n/**\n * Deserializes the data received from Firebase into a dictionary of specified type.\n *\n * @template TData - The type of data to deserialize.\n * @param data - The data to be deserialized.\n * @returns A dictionary of deserialized data.\n */\nexport const deserializeFirebaseData = <TData>(data: Dictionary<string>): Dictionary<TData> => {\n  return Object.keys(data).reduce((acc: Dictionary<TData>, key) => {\n    acc[key] = JSON.parse(data[key]);\n    return acc;\n  }, {});\n};\n\n/**\n * Serializes the data in a dictionary to a dictionary of strings.\n *\n * @param data - The dictionary containing the data to be serialized.\n * @returns A new dictionary with the same keys as the input dictionary, but with the values serialized as strings.\n */\nexport const serializeFirebaseData = <TData>(data: Dictionary<TData>): Dictionary<string> => {\n  return Object.keys(data).reduce((acc: Dictionary<string>, key) => {\n    acc[key] = JSON.stringify(data[key]);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentDateTime = (): string => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const day = String(now.getDate()).padStart(2, '0');\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\n\n/**\n * Creates a new item with default values and merges it with the provided partial item.\n *\n * @param partialItem - The partial item to merge with the default values.\n * @returns The new item with merged values.\n */\nexport const getNewItem = (partialItem: Partial<Item> = {}): Item => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        name: { en: '', pt: '' },\n        groups: [],\n        attributes: {},\n      },\n      partialItem\n    )\n  );\n};\n\n/**\n * Creates a new `ItemAtributesValues` object by merging the provided `partialItemAttributeValues`\n * with a default object that has an empty `id` and an empty `attributes` object.\n *\n * @param partialItemAttributeValues - The partial item attribute values to merge.\n * @returns The new `ItemAtributesValues` object.\n */\nexport const getNewItemAttributeValues = (\n  partialItemAttributeValues: Partial<ItemAtributesValues> = {}\n): ItemAtributesValues => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        attributes: {},\n      },\n      partialItemAttributeValues\n    )\n  );\n};\n\nexport const getItemAttributePriorityResponse = (\n  itemAttributesValues: ItemAtributesValues,\n  itemAttributes: Dictionary<ItemAttribute>\n) => {\n  const priorityOrder: string[] = orderBy(\n    Object.values(itemAttributes),\n    ['priority', 'id'],\n    ['asc', 'asc']\n  ).map((attribute) => attribute.id);\n\n  function sortAttributesByPriority(attributeKeys: string[], prefix: string) {\n    return orderBy(attributeKeys, (key) => priorityOrder.indexOf(key), ['asc']).map(\n      (key) => `${prefix}${key}`\n    );\n  }\n\n  let opposite: string[] = [];\n  let deterministic: string[] = [];\n  let related: string[] = [];\n  let unrelated: string[] = [];\n  let unclear: string[] = [];\n\n  Object.entries(itemAttributesValues.attributes).forEach(([attributeId, value]) => {\n    const attribute = itemAttributes[attributeId];\n    if (!attribute) return;\n\n    switch (value) {\n      case ATTRIBUTE_VALUE.OPPOSITE:\n        opposite.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.DETERMINISTIC:\n        deterministic.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.RELATED:\n        related.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNRELATED:\n        unrelated.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNCLEAR:\n      default:\n        unclear.push(attributeId);\n        break;\n    }\n  });\n\n  return [\n    ...sortAttributesByPriority(opposite, ATTRIBUTE_VALUE_PREFIX.OPPOSITE),\n    ...sortAttributesByPriority(deterministic, ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC),\n    ...sortAttributesByPriority(related, ATTRIBUTE_VALUE_PREFIX.RELATED),\n    ...sortAttributesByPriority(unrelated, ATTRIBUTE_VALUE_PREFIX.UNRELATED),\n    ...sortAttributesByPriority(unclear, ATTRIBUTE_VALUE_PREFIX.UNCLEAR),\n  ];\n};\nexport const parseAttribute = memoize((keyVariant: string) => {\n  if (keyVariant.length === 3) {\n    return {\n      key: keyVariant,\n      className: '',\n      text: '',\n    };\n  }\n\n  const variant = keyVariant[0];\n  const key = keyVariant.slice(1, 4);\n\n  return {\n    key,\n    className: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'deterministic',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'unrelated',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'unclear',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'opposite',\n    }[variant],\n    text: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'very',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'not',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'maybe',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'very not',\n    }[variant],\n  };\n});\n\nexport const filterMessage = (message: string[], showUnclear: boolean, showUnrelated: boolean) => {\n  return message.filter((keyVariant) => {\n    if (!showUnclear && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNCLEAR)) {\n      return false;\n    }\n\n    if (!showUnrelated && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNRELATED)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","label","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","value","onChange","options","placeholder","style","minWidth","disabled","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","size","DataLoadingWrapper","tip","message","description","type","showIcon","ItemsTypeahead","items","isPending","allowClear","onFinish","tdrItemsQuery","useTDResource","Boolean","namesDict","useMemo","console","log","Object","values","reduce","acc","nameEn","name","en","id","namePt","pt","orderBy","keys","toLowerCase","filteredOptions","setFilteredOptions","useState","filterOption","inputValue","option","String","toUpperCase","indexOf","onSearch","searchText","filter","notFoundContent","onSelect","key","undefined","onPressEnter","length","Sprite","source","padding","title","getUrl","useBaseUrl","useQuery","queryKey","queryFn","async","response","fetch","text","enabled","paddedWidth","height","display","placeItems","svgContent","WarningOutlined","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","AlienSign","Emoji","emojiId","startsWith","getSource","memoize","str","match","numId","parseInt","glyphId","sourceId","Math","ceil","Glyph","itemId","Item","library","baseUrl","folder","process","path","join","useCopyToClipboardFunction","state","copyToClipboard","useCopyToClipboard","App","useEffect","info","truncate","omission","success","getDocQueryFunction","docId","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","resourceName","query","res","json","isEmpty","updateQueryFunction","updateDoc","useUpdateFirebaseDoc","useMutation","mutationFn","useItemQueryParams","searchParams","setSearchParams","useSearchParams","view","get","setView","addQueryParam","set","removeQueryParam","delete","globalNewItemsAttributesValues","ItemsAttributeValuesContext","createContext","getItem","getNewItem","getItemAttributeValues","getNewItemAttributeValues","jumpToItem","activeItem","itemAttributeValues","onAttributeChange","isSaving","save","attributesList","availableItemIds","addAttributesToUpdate","addMultipleAttributesToUpdate","prepareItemsAttributesFileForDownload","attributes","ItemsAttributeValuesProvider","notification","queryClient","useQueryClient","tdrAttributesQuery","tdrItemsAttributesValuesQuery","firebaseItemsAttributeValuesQuery","select","deserializeFirebaseData","modifiedAttributeValues","setModifiedAttributeValues","mutation","onSuccess","refetchQueries","onError","savedItemsAttributeValues","firebaseData","categories","includes","Number","storedValue","modifiedValue","merge","mutate","serializeFirebaseData","item","prev","updatedAt","Date","now","itemsArr","mapKeys","attributesToUpdate","useItemsAttribution","itemIndex","setItemIndex","random","Provider","direction","index","attributeId","sortJsonKeys","complete","useItemsAttributeValuesContext","useContext","attributeOptions","ATTRIBUTE_VALUE","attributeLimitedOptions","AttributionValueButtons","attribute","onlyButtons","limited","target","optionType","buttonStyle","QuestionCircleOutlined","CheckCircleFilled","ItemAttributeDescription","showUnclear","showUnrelated","filteredResponse","filterMessage","getItemAttributePriorityResponse","Component","AttributeSprite","AttributeText","gap","vertical","wrap","keyVariant","arr","firstElement","lastElement","withText","parseAttribute","align","spriteId","justify","maxWidth","textAlign","wordBreak","prefix","suffix","Stat","ItemAttributeStats","completion","isDeterministic","isOpposing","relevancy","total","completed","floor","unclearCount","strong","percent","CloseCircleOutlined","ItemSprite","ItemId","nsfw","FireFilled","IdcardOutlined","variant","readOnly","ItemName","ItemGoTo","shape","ItemAttributionCard","queryParamsItemId","showOnlyUnset","filteredAttributesList","offsetTop","ItemAttributionNavigation","icon","VerticalRightOutlined","DoubleLeftOutlined","LeftOutlined","RightOutlined","DoubleRightOutlined","VerticalLeftOutlined","content","GoToItemPopOverContent","ItemSamplerCard","sampleIds","onGetSample","updateAttributeValue","setSampleIds","setAttribute","attributeKey","lodashSample","selectedAttribute","find","a","sampleSize","selected","shuffle","i","push","currentItemAttributeValues","useItemSampler","actions","block","ghost","extra","itemAttributes","Fragment","GoToTopButton","isVisible","setIsVisible","handleScroll","window","pageYOffset","addEventListener","removeEventListener","scrollTo","top","behavior","VerticalAlignTopOutlined","ItemGroupingCard","pageIds","group","updatePageItemsAsUnrelated","pagination","scope","page","pageSize","previousAttribute","setPreviousAttribute","previousScope","setPreviousScope","itemsAttributes","scopeValue","filteredItemIds","slice","start","end","current","onShowSizeChange","_","pageSizeOptions","useItemGrouping","isNarrow","useMedia","paginationComponent","unrelateButton","onConfirm","danger","ItemComparatorCard","itemMessages","grouping","showComplete","itemMessagesDict","itemAttributesValues","itemMessage","fullMessage","moreThanOne","ids","keyBy","useItemsComparator","columns","dataIndex","render","sorter","b","localeCompare","groupA","dataSource","ItemAttributionPageContent","ItemAttributionStats","completionPercentage","hasDataCount","initiatedPercentage","progress","progressTotal","currentProgress","someData","forEach","isComplete","toFixed","ItemAttributionClassifierFilters","ItemAttributionSamplerFilters","ItemAttributionGroupingFilters","ATTRIBUTE_GROUP_VALUES","ItemAttributionComparatorFilters","ItemAttributionFilters","ItemsAttributionPage","subtitle","hasSider","PageSider","SEARCH_THRESHOLD","RESOURCE_NAMES","ADJECTIVES","ALIEN_ITEMS","ARTE_RUIM_CARDS","ARTE_RUIM_GROUPS","ARTE_RUIM_PAIRS","CATEGORIES","CHALLENGES","CHARACTERS","CHOICES","CONTENDERS","CRIME_EVIDENCE","CRIME_TILES","CRIME_WEAPONS","DATING_CANDIDATE","DATING_CANDIDATE_BODIES","DATING_CANDIDATE_HEADS","DIAGRAM_TOPICS","DILEMMAS","DRAWING_WORDS","GROUP_QUESTIONS","ITEMS_ATTRIBUTES","MONSTER_ORIENTATION","MOVIE_REVIEWS","MOVIES","NAMING_PROMPTS","OBJECT_FEATURES","QUANTITATIVE_QUESTIONS","SCENARIOS","SPECTRUMS","SINGLE_WORDS","SPY_LOCATIONS","SPY_QUESTIONS","SUSPECTS","TESTIMONY_QUESTIONS","THEME_WORDS","THING_PROMPTS","THINGS_QUALITIES","TOPICS","TREE_WORDS","TWEETS","DUAL_LANGUAGE_RESOURCES","LANGUAGES","SEARCH_PROPERTY","adjectives","challenges","characters","contenders","spectrums","topics","SPRITE_LIBRARY","quantity","startAt","component","TAGS_SELECTOR_OPTIONS","SAMPLE_SIZE_OPTIONS","CARD_SIZE_OPTIONS","OPPOSITE","UNRELATED","UNCLEAR","RELATED","DETERMINISTIC","ATTRIBUTE_VALUE_PREFIX","invert","capitalize","stringRemoveAccents","normalize","replace","checkForDuplicates","property","unique","duplicates","entryKey","findSimilar","similar","trim","val","JSON","stringify","entryStr","stringSimilarity","removeDuplicates","Array","from","Set","obj","filename","blob","Blob","anchorElement","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","sortKeys","isObject","isArray","sortedKeys","concat","sort","chain","toPairs","sortBy","fromPairs","parse","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","partialItem","cloneDeep","groups","partialItemAttributeValues","priorityOrder","sortAttributesByPriority","attributeKeys","opposite","deterministic","related","unrelated","unclear","entries"],"sourceRoot":""}