{"version":3,"file":"static/js/Other.8d9b6e1d.chunk.js","mappings":"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","sources":["components/CopyToClipboardButton.tsx","components/DataLoadingWrapper.tsx","components/Sprites/Sprite.tsx","components/Sprites/AlienSign.tsx","components/Sprites/Emoji.tsx","components/Sprites/Glyph.tsx","components/Sprites/Item.tsx","hooks/useBaseUrl.ts","hooks/useCopyToClipboardFunction.ts","components/EscapeRoom/helpers.ts","components/EscapeRoom/pizza-delivery-episode.ts","components/EscapeRoom/components.tsx","pages/Other.jsx","utils/constants.ts","utils/index.ts"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\n\nimport { CopyOutlined } from '@ant-design/icons';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype CopyToClipboardButtonProps = {\n  content: string;\n} & ButtonProps;\n\nexport function CopyToClipboardButton({\n  content,\n  shape,\n  icon,\n  size,\n  ...buttonProps\n}: CopyToClipboardButtonProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  return (\n    <Button\n      shape={shape ?? 'circle'}\n      icon={icon ?? <CopyOutlined />}\n      size={size ?? 'small'}\n      onClick={() => copyToClipboard(content)}\n      {...buttonProps}\n    />\n  );\n}\n","import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  isIdle?: boolean;\n  isLoading: boolean;\n  error?: ResponseError;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({\n  isLoading,\n  isIdle,\n  error,\n  hasResponseData,\n  children,\n}: DataLoadingWrapperProps) {\n  if (!isIdle && isLoading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" showIcon />\n      </Layout.Content>\n    );\n  }\n\n  if (isIdle || hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content content-center\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useBaseUrl } from 'hooks/useBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const { getUrl } = useBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${getUrl('sprites')}/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype AlienSignProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function AlienSign({ id, width = 75, className = '' }: AlienSignProps) {\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={id} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from './Sprite';\n\ntype EmojiProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function Emoji({ id, width, className }: EmojiProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\ntype GlyphProps = {\n  /**\n   * The id of the glyph\n   */\n  id: string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n});\n\n/**\n * A glyph card component.\n */\nexport function Glyph({ id, width, className }: GlyphProps) {\n  const [source, glyphId] = getSource(id);\n\n  return (\n    <div className={clsx('sprite', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { Sprite } from './Sprite';\n\nexport type ItemProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function Item({ id, width, className, title }: ItemProps) {\n  const [source, itemId] = getSource(id);\n\n  return (\n    <div\n      className={clsx('sprite', className)}\n      style={{ width: `${width ?? 75}px`, height: `${width ?? 75}px` }}\n    >\n      <Sprite source={source} id={itemId} width={width} title={title} />\n    </div>\n  );\n}\n","/**\n * Returns the base url for the given library and path\n * @param library\n * @param path\n * @returns\n */\nexport function useBaseUrl(library: 'tdr' | 'tdi' | 'tdi-data') {\n  let baseUrl: string | undefined = '';\n  let folder: string | undefined = '';\n\n  switch (library) {\n    case 'tdi':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_IMAGES;\n      break;\n    case 'tdi-data':\n      baseUrl = process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TDI_DATA;\n      break;\n    default:\n      baseUrl =\n        process.env.NODE_ENV === 'development'\n          ? process.env.REACT_APP_LOCAL_URL\n          : process.env.REACT_APP_TD_BASE_URL;\n      folder = process.env.REACT_APP_TD_RESOURCES;\n  }\n\n  return {\n    baseUrl,\n    getUrl: (path: string) => [baseUrl, folder, path].join('/'),\n  };\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { EpisodeLevel, EscapeRoomCard } from './types';\n\n/**\n * Determines whether an entry level should be included in an episode level.\n * @param episodeLevel - The level of the episode.\n * @param entryLevel - The level of the entry.\n */\nexport const includeInEpisode = (episodeLevel: EpisodeLevel, entryLevel: EpisodeLevel): boolean => {\n  switch (episodeLevel) {\n    // Advanced episodes accept all entries\n    case 'advanced':\n      return true;\n    // Intermediate episodes accept intermediate and basic entries\n    case 'intermediate':\n      return ['intermediate', 'basic'].includes(entryLevel);\n    // Basic episodes only accept basic entries\n    case 'basic':\n      return entryLevel === 'basic';\n  }\n};\n\n/**\n * Determines if the conditional entry should be present with 65% of probability.\n */\nexport const determineConditional = (): boolean => Math.random() < 0.65;\n\nexport const isKeywordInTheEpisode = (cards: EscapeRoomCard[], keyword: string): boolean =>\n  cards.some((card) => card.keyword === keyword);\n\nexport const isTargetKeywordInTheEpisode = (cards: EscapeRoomCard[], keyword: string): boolean =>\n  cards.some((card) => card.targetKeyword === keyword);\n","import { shuffle } from 'lodash';\nimport {\n  determineConditional,\n  includeInEpisode,\n  isKeywordInTheEpisode,\n  isTargetKeywordInTheEpisode,\n} from './helpers';\nimport {\n  ERBuildingBlock,\n  EpisodeLevel,\n  EscapeRoomCard,\n  EscapeRoomEpisode,\n  ScoringCondition,\n  ERUnorderedListCard,\n} from './types';\n\nconst PIZZA_DELIVERY_EPISODE: EscapeRoomCard[] = [\n  {\n    id: '0',\n    header: {\n      en: 'Mission',\n      pt: 'Mission',\n    },\n    iconId: '1618',\n    type: 'mission',\n    level: 'basic',\n    conditional: false,\n    number: 1,\n    filler: false,\n    title: {\n      en: 'Pizza Delivery',\n      pt: 'Entrega de Pizza',\n    },\n    text: {\n      en: \"You all work at a pizza delivery place that only serves pizzas and salads. A customer needs to call to place an order. Fulfill the first possible order by playing the correct pizza ingredients, put it in the oven, and then ring the ready bell. Today is a special day, isn't it?\",\n      pt: 'Todos vocês trabalham em uma pizzaria que só serve pizzas e saladas. Um cliente precisa ligar para fazer um pedido. Atenda o primeiro pedido possível usando os ingredientes corretos da pizza, coloque-a no forno e toque o sininho de pronto. Hoje é um dia especial, não é?',\n    },\n    conditions: [\n      {\n        targetKeyword: 'MOON',\n        iconId: '1618',\n        target: {\n          en: 'Moon',\n          pt: 'Lua',\n        },\n        consequence: {\n          en: 'The caller was a picky eater, the order should NOT have any tomato sauce',\n          pt: 'O cliente é chato para comer, o pedido NÃO deve ter molho de tomate',\n        },\n        level: 'basic',\n      },\n      {\n        targetKeyword: 'LEAF',\n        iconId: '532',\n        target: {\n          en: 'Leaf',\n          pt: 'Folha',\n        },\n        consequence: {\n          en: 'The caller comments they are vegetarian, the order should NOT have any meat',\n          pt: 'O cliente comenta que é vegetariano, o pedido NÃO deve ter carne',\n        },\n        level: 'intermediate',\n      },\n      {\n        targetKeyword: 'ELECTRICITY',\n        iconId: '446',\n        target: {\n          en: 'Electricity',\n          pt: 'Eletricidade',\n        },\n        consequence: {\n          en: \"A power outage ocurred at 6:42 and lasted 7 minutes, no phone calls could've been received during that time\",\n          pt: 'Uma queda de energia ocorreu às 6:42 e durou 7 minutos, nenhuma ligação poderia ter sido recebida durante esse tempo',\n        },\n        level: 'advanced',\n      },\n    ],\n  },\n  {\n    id: '1',\n    header: {\n      en: 'Complete Mission',\n      pt: 'Completar Missão',\n    },\n    iconId: '1856',\n    type: 'item',\n    itemId: 'aaa',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    keyword: 'COMPLETE_MISSION',\n    text: {\n      en: 'When you think you have completed the mission, play this card',\n      pt: 'Quando você achar que completou a missão, use esta carta',\n    },\n  },\n  {\n    id: '2',\n    header: {\n      en: 'Hours of Operation',\n      pt: 'Horário de Funcionamento',\n    },\n    iconId: '1967',\n    type: 'text',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'The pizzeria is open from 6:00 to 10:00 every night',\n      pt: 'A pizzaria está aberta das 6:00 às 10:00 todas as noites',\n    },\n  },\n  {\n    id: '2',\n    header: {\n      en: 'Employee Handbook',\n      pt: 'Manual do Funcionário',\n    },\n    iconId: '1145',\n    type: 'text',\n    level: 'intermediate',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'If you are not baking a pizza, skip the oven step',\n      pt: 'Se você não estiver assando uma pizza, pule a etapa do forno',\n    },\n  },\n  {\n    id: '2',\n    header: {\n      en: 'Notice',\n      pt: 'Aviso',\n    },\n    iconId: 'aaa',\n    type: 'text',\n    level: 'intermediate',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'Today is Men’s Day, we will only take orders from a man',\n      pt: 'Hoje é o dia do homem, só atenderemos pedidos feitos por homens',\n    },\n  },\n  {\n    id: '3',\n    header: {\n      en: 'Menu',\n      pt: 'Cardápio',\n    },\n    iconId: '835',\n    type: 'building-block',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    targetType: 'ordered-list',\n    blocks: {\n      flavors: [\n        { en: 'Cheese Pizza (oregano)', pt: 'Pizza de Queijo (orégano)', keywords: ['CHEESE'] },\n        {\n          en: 'Hawaiian Pizza (cheese, ham, pineapple)',\n          pt: 'Pizza Havaiana (queijo, presunto, abacaxi)',\n          keywords: ['CHEESE', 'HAM', 'PINEAPPLE'],\n        },\n        { en: 'Corn Bacon (cheese)', pt: 'Pizza Corn Bacon (queijo)', keywords: ['CHEESE', 'CORN', 'BACON'] },\n        { en: 'Spicy Sausage', pt: 'Calabresa Picante', keywords: ['CHEESE', 'SAUSAGE', 'CHILI_PEPPER'] },\n        {\n          en: 'Supreme (cheese, olives, ham, sausage, corn, bell pepper)',\n          pt: 'Suprema (queijo, azeitona, presunto, linguiça, milho, pimentão)',\n          keywords: ['CHEESE', 'OLIVES', 'HAM', 'SAUSAGE', 'CORN', 'BELL_PEPPER'],\n        },\n      ],\n      prices: [\n        { price: '6.49' },\n        { price: '6.99', keyword: 'SECOND_CHEAPEST' },\n        { price: '7.99' },\n        { price: '8.99' },\n        { price: '9.99', keyword: 'EXPENSIVE' },\n      ],\n      salad: { en: 'Salad', pt: 'Salada', price: '4.99', keyword: ['SALAD'] },\n    },\n  },\n  {\n    id: '4',\n    header: {\n      en: 'Call',\n      pt: 'Ligação',\n    },\n    iconId: '421',\n    type: 'voice',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'Call time: 5:15',\n      pt: 'Horário da ligação: 5:15',\n    },\n    speech: {\n      en: 'Carl: I would like to order the most expensive pizza on the menu, please.',\n      pt: 'Carlos: Gostaria de pedir a pizza mais cara do cardápio, por favor. ',\n    },\n  },\n  {\n    id: '5',\n    header: {\n      en: 'Call',\n      pt: 'Ligação',\n    },\n    iconId: '421',\n    type: 'voice',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'Call time: 6:07',\n      pt: 'Horário da ligação: 6:07',\n    },\n    speech: {\n      en: 'Bob: I would like to order the second cheapest pizza on the menu, please.',\n      pt: 'Beto: Gostaria de pedir a segunda pizza mais barata do cardápio, por favor.',\n    },\n  },\n  {\n    id: '6',\n    header: {\n      en: 'Call',\n      pt: 'Ligação',\n    },\n    iconId: '421',\n    type: 'voice',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'Call time: 6:12',\n      pt: 'Horário da ligação: 6:12',\n    },\n    speech: {\n      en: 'Beth: I would like to order the Hawaiian pizza, please',\n      pt: 'Bia: Gostaria de pedir a pizza Havaiana, por favor',\n    },\n  },\n  {\n    id: '7',\n    header: {\n      en: 'Call',\n      pt: 'Ligação',\n    },\n    iconId: '421',\n    type: 'voice',\n    level: 'intermediate',\n    conditional: false,\n    filler: false,\n    text: {\n      en: 'Call time: 6:47',\n      pt: 'Horário da ligação: 6:47',\n    },\n    speech: {\n      en: 'I would like to cancel my previous order, and order a salad instead',\n      pt: 'Gostaria de cancelar meu pedido anterior e pedir uma salada no lugar',\n    },\n    targetKeyword: 'SALAD',\n  },\n  {\n    id: '8',\n    header: {\n      en: 'Call',\n      pt: 'Ligação',\n    },\n    iconId: '421',\n    type: 'voice',\n    level: 'basic',\n    conditional: true,\n    filler: false,\n    text: {\n      en: 'Call time: 6:57',\n      pt: 'Horário da ligação: 6:57',\n    },\n    speech: {\n      en: 'Can you add a coke to my order, please?',\n      pt: 'Pode adicionar uma coca ao meu pedido, por favor?',\n    },\n    targetKeyword: 'COKE',\n  },\n  {\n    id: '7',\n    header: {\n      en: 'Call',\n      pt: 'Ligação',\n    },\n    iconId: '421',\n    type: 'voice',\n    level: 'basic',\n    conditional: true,\n    filler: false,\n    text: {\n      en: 'Call time: 6:14',\n      pt: 'Horário da ligação: 6:14',\n    },\n    speech: {\n      en: 'Mark: I would like to order an hot dog, please',\n      pt: 'Marcos: Gostaria de pedir um cachorro quente, por favor',\n    },\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Oven',\n      pt: 'Forno',\n    },\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '606',\n    text: {\n      en: 'Put it in the...',\n      pt: 'Coloque no...',\n    },\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ready Bell',\n      pt: 'Sininho de Pronto',\n    },\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '1437',\n    text: {\n      en: 'Ring the...',\n      pt: 'Toque o...',\n    },\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: 'aaa',\n    text: {\n      en: 'Dough',\n      pt: 'Massa',\n    },\n    keyword: 'DOUGH',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '487',\n    text: {\n      en: 'Cheese',\n      pt: 'Queijo',\n    },\n    keyword: 'CHEESE',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '1462',\n    text: {\n      en: 'Tomato Sauce',\n      pt: 'Molho de Tomate',\n    },\n    keyword: 'TOMATO_SAUCE',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '338',\n    text: {\n      en: 'Hot Dog',\n      pt: 'Cachorro Quente',\n    },\n    keyword: 'HOT_DOG',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '236',\n    text: {\n      en: 'Salad',\n      pt: 'Salada',\n    },\n    keyword: 'SALAD',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '796',\n    text: {\n      en: 'Bacon',\n      pt: 'Bacon',\n    },\n    keyword: 'BACON',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '125',\n    text: {\n      en: 'Pineapple',\n      pt: 'Abacaxi',\n    },\n    keyword: 'PINEAPPLE',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '211',\n    text: {\n      en: 'Corn',\n      pt: 'Milho',\n    },\n    keyword: 'CORN',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '1535',\n    text: {\n      en: 'Bell Pepper',\n      pt: 'Pimentão',\n    },\n    keyword: 'BELL_PEPPER',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '1295',\n    text: {\n      en: 'Ham',\n      pt: 'Presunto',\n    },\n    keyword: 'HAM',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '1625',\n    text: {\n      en: 'Olives',\n      pt: 'Azeitonas',\n    },\n    keyword: 'OLIVES',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '825',\n    text: {\n      en: 'Coke',\n      pt: 'Coca-Cola',\n    },\n    keyword: 'COKE',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '687',\n    text: {\n      en: 'Sausage',\n      pt: 'Calabresa',\n    },\n    keyword: 'SAUSAGE',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '553',\n    text: {\n      en: 'Chili Pepper',\n      pt: 'Pimenta Malagueta',\n    },\n    keyword: 'CHILI_PEPPER',\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: false,\n    itemId: '363',\n    text: {\n      en: 'Oregano',\n      pt: 'Orégano',\n    },\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Thing',\n      pt: 'Coisa',\n    },\n    iconId: '523',\n    type: 'item',\n    level: 'basic',\n    conditional: true,\n    filler: false,\n    itemId: '1059',\n    text: {\n      en: 'Moon',\n      pt: 'Lua',\n    },\n    keyword: 'MOON',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Thing',\n      pt: 'Coisa',\n    },\n    iconId: '523',\n    type: 'item',\n    level: 'basic',\n    conditional: true,\n    filler: false,\n    itemId: '446',\n    text: {\n      en: 'Electricity',\n      pt: 'Eletricidade',\n    },\n    keyword: 'ELECTRICITY',\n  },\n  {\n    id: '0',\n    header: {\n      en: 'Thing',\n      pt: 'Coisa',\n    },\n    iconId: '523',\n    type: 'item',\n    level: 'basic',\n    conditional: true,\n    filler: false,\n    itemId: '532',\n    text: {\n      en: 'Leaf',\n      pt: 'Folha',\n    },\n    keyword: 'LEAF',\n  },\n];\n\nconst PIZZA_DELIVERY_FILLERS: EscapeRoomCard[] = [\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '543',\n    text: {\n      en: 'Carrot',\n      pt: 'Cenoura',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '795',\n    text: {\n      en: 'Broccoli',\n      pt: 'Brócolis',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '693',\n    text: {\n      en: 'Eggplant',\n      pt: 'Berinjela',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '1739',\n    text: {\n      en: 'Garlic',\n      pt: 'Alho',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '436',\n    text: {\n      en: 'Mushrooms',\n      pt: 'Cogumelos',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '1306',\n    text: {\n      en: 'Mustard',\n      pt: 'Mostarda',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '1234',\n    text: {\n      en: 'Herbs',\n      pt: 'Ervas',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '0',\n    text: {\n      en: 'Chicken',\n      pt: 'Frango',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '1609',\n    text: {\n      en: 'Meatballs',\n      pt: 'Almôndegas',\n    },\n  },\n  {\n    id: 'F',\n    header: {\n      en: 'Ingredient',\n      pt: 'Ingrediente',\n    },\n    iconId: '1213',\n    type: 'item',\n    level: 'basic',\n    conditional: false,\n    filler: true,\n    itemId: '761',\n    text: {\n      en: 'Eggs',\n      pt: 'Ovos',\n    },\n  },\n];\n\nexport function buildPizzaDeliveryEpisode(\n  episodeLevel: EpisodeLevel,\n  playerCount: number\n): EscapeRoomEpisode {\n  // ALWAYS: Get all cards that should be in the episode\n  let cards = PIZZA_DELIVERY_EPISODE.filter((card) => includeInEpisode(episodeLevel, card.level));\n\n  // ALWAYS: Cleanup mission depending on the episode level\n  const missionKeywords: string[] = [];\n  const missionCard = cards.find((card) => card.type === 'mission');\n  if (missionCard && missionCard.conditions) {\n    missionCard.conditions = missionCard.conditions.filter((condition) =>\n      includeInEpisode(episodeLevel, condition.level)\n    );\n    missionCard.conditions.forEach((condition) => missionKeywords.push(condition.targetKeyword));\n  }\n\n  // Find building block menu card and build it into a card\n  const menuBuildingBlock = cards.find((card) => card.type === 'building-block') as\n    | ERBuildingBlock\n    | undefined;\n  let secondCheapestPizza: PlainObject = {\n    keywords: [],\n  };\n\n  if (menuBuildingBlock) {\n    const flavors = shuffle(menuBuildingBlock.blocks.flavors);\n    const prices = shuffle(menuBuildingBlock.blocks.prices);\n\n    const newMenuCard: ERUnorderedListCard = {\n      id: '',\n      header: menuBuildingBlock.header,\n      iconId: menuBuildingBlock.iconId,\n      type: 'unordered-list',\n      level: menuBuildingBlock.level,\n      conditional: menuBuildingBlock.conditional,\n      filler: menuBuildingBlock.filler,\n      list: flavors.map((flavor, index) => {\n        const priceObj = prices[index];\n        if (priceObj.keyword === 'SECOND_CHEAPEST') {\n          secondCheapestPizza = flavor;\n        }\n\n        return {\n          en: `${flavor.en} - $${priceObj.price}`,\n          pt: `${flavor.pt} - $${priceObj.price}`,\n        };\n      }),\n    };\n\n    newMenuCard.list.push({\n      en: `${menuBuildingBlock.blocks.salad.en} - $${menuBuildingBlock.blocks.salad.price}`,\n      pt: `${menuBuildingBlock.blocks.salad.pt} - $${menuBuildingBlock.blocks.salad.price}`,\n    });\n\n    cards.push(newMenuCard);\n  }\n\n  // ALWAYS: For any conditional card, decide if they are in with 65% chance\n  cards = cards.filter((card) => !card.conditional || (card.conditional && determineConditional()));\n\n  // Determine winning conditions\n  console.log('missionKeywords', missionKeywords);\n  let includes: ScoringCondition[] = [\n    {\n      keyword: 'TOMATO_SAUCE',\n      description: {\n        en: 'Tomato sauce is a basic ingredient',\n        pt: 'Molho de tomate é um ingrediente básico',\n      },\n    },\n  ];\n\n  let excludes: ScoringCondition[] = [];\n\n  // Basic scenario: SECOND_CHEAPEST_PIZZA\n  console.log({ secondCheapestPizza });\n  includes.push(\n    ...secondCheapestPizza.keywords.map((keyword: string) => ({\n      keyword,\n      description: {\n        en: 'Second cheapest pizza ingredient',\n        pt: 'Ingrediente da segunda pizza mais barata',\n      },\n    }))\n  );\n\n  // If SALAD\n  console.log(\n    'RESULT',\n    isTargetKeywordInTheEpisode(cards, 'SALAD'),\n    !missionKeywords.includes('ELECTRICITY')\n  );\n  if (isTargetKeywordInTheEpisode(cards, 'SALAD') && !missionKeywords.includes('ELECTRICITY')) {\n    includes = [];\n    includes.push({\n      keyword: 'SALAD',\n      description: {\n        en: 'The customer ordered a salad instead of a pizza',\n        pt: 'O cliente pediu uma salada ao invés de uma pizza',\n      },\n    });\n  } else {\n    includes.push({\n      keyword: 'OVEN',\n      description: {\n        en: 'The pizza was put in the oven',\n        pt: 'A pizza foi colocada no forno',\n      },\n    });\n  }\n\n  // if MOON: - TOMATO_SAUCE\n  if (isKeywordInTheEpisode(cards, 'MOON')) {\n    includes = includes.filter((e) => e.keyword !== 'TOMATO_SAUCE');\n    excludes.push({\n      keyword: 'TOMATO_SAUCE',\n      description: {\n        en: 'The pizza should not have tomato sauce because of the picky eater',\n        pt: 'A pizza não deve ter molho de tomate por causa do cliente chato',\n      },\n    });\n  }\n\n  includes.push({\n    keyword: 'READY_BELL',\n    description: {\n      en: 'The ready bell was rung',\n      pt: 'O sininho de pronto foi tocado',\n    },\n  });\n\n  // Determine bonus conditions\n  const bonuses: ScoringCondition[] = [\n    {\n      keyword: 'DOUGH',\n      description: {\n        en: 'The dough was used',\n        pt: 'A massa foi usada',\n      },\n    },\n  ];\n\n  // ALWAYS: Remove building blocks\n  cards = cards.filter((card) => card.type !== 'building-block');\n\n  // ALWAYS: Add filler items until each player would have equal number of cards\n  const shuffledFillers = shuffle(PIZZA_DELIVERY_FILLERS);\n  const extraCards = cards.length % playerCount;\n  if (extraCards > 0) {\n    const fillerAmount = playerCount - extraCards;\n    for (let i = 0; i < fillerAmount; i++) {\n      cards.push(shuffledFillers[i]);\n    }\n  }\n\n  // ALWAYS: Redetermine ids\n  cards.forEach((card, index) => {\n    card.id = String(index);\n  });\n\n  return {\n    title: {\n      en: 'Pizza Delivery',\n      pt: 'Entrega de Pizza',\n    },\n    level: episodeLevel,\n    cards: cards,\n    winningCondition: {\n      includes,\n      excludes,\n      bonuses,\n      ordered: [],\n    },\n  };\n}\n","import { Card, Typography } from 'antd';\nimport { ERItemCard, ERMissionCard, ERTextCard, ERUnorderedListCard, ERVoiceCard } from './types';\nimport { Item } from 'components/Sprites';\n\nconst LANGUAGE = 'pt';\n\ntype MissionCardProps = {\n  card: ERMissionCard;\n};\n\nexport const MissionCard = ({ card }: MissionCardProps) => {\n  return (\n    <Card\n      title={card.header[LANGUAGE]}\n      className=\"escape-room-card\"\n      classNames={{ body: 'escape-room-card__body' }}\n    >\n      <Typography.Title level={4}>Mission</Typography.Title>\n      <Typography.Paragraph>{card.text[LANGUAGE]}</Typography.Paragraph>\n      {card.conditions?.map((condition) => (\n        <Typography.Paragraph key={condition.targetKeyword} type=\"secondary\">\n          If \"{condition.target[LANGUAGE]}\", then: {condition.consequence[LANGUAGE]}\n        </Typography.Paragraph>\n      ))}\n    </Card>\n  );\n};\n\ntype ItemCardProps = {\n  card: ERItemCard;\n};\n\nexport const ItemCard = ({ card }: ItemCardProps) => {\n  return (\n    <Card\n      title={card.header[LANGUAGE]}\n      className=\"escape-room-card\"\n      classNames={{ body: 'escape-room-card__body' }}\n    >\n      <Item id={card.itemId} width={75} />\n      {card.text && <Typography.Paragraph code>{card.text[LANGUAGE]}</Typography.Paragraph>}\n    </Card>\n  );\n};\n\ntype VoiceCardProps = {\n  card: ERVoiceCard;\n};\n\nexport const VoiceCard = ({ card }: VoiceCardProps) => {\n  return (\n    <Card\n      title={card.header[LANGUAGE]}\n      className=\"escape-room-card\"\n      classNames={{ body: 'escape-room-card__body' }}\n    >\n      {card.speech && <Typography.Paragraph>\"{card.speech[LANGUAGE]}\"</Typography.Paragraph>}\n      {card.text && <Typography.Paragraph code>{card.text[LANGUAGE]}</Typography.Paragraph>}\n    </Card>\n  );\n};\n\ntype TextCardProps = {\n  card: ERTextCard;\n};\n\nexport const TextCard = ({ card }: TextCardProps) => {\n  return (\n    <Card\n      title={card.header[LANGUAGE]}\n      className=\"escape-room-card\"\n      classNames={{ body: 'escape-room-card__body' }}\n    >\n      {card.text && <Typography.Paragraph>{card.text[LANGUAGE]}</Typography.Paragraph>}\n    </Card>\n  );\n};\n\ntype UnorderedListCardProps = {\n  card: ERUnorderedListCard;\n};\n\nexport const UnorderedListCard = ({ card }: UnorderedListCardProps) => {\n  return (\n    <Card\n      title={card.header[LANGUAGE]}\n      className=\"escape-room-card\"\n      classNames={{ body: 'escape-room-card__body' }}\n    >\n      {card.title && <Typography.Title level={4}>{card.title[LANGUAGE]}</Typography.Title>}\n      <ul className=\"escape-room-card__list\">\n        {card.list.map((item, index) => (\n          <li key={index}>{item[LANGUAGE]}</li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n","/* eslint-disable no-unused-vars */\nimport { Alert, Button, Divider, Input, Layout, Space, Typography } from 'antd';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { useAsync, useTitle } from 'react-use';\nimport { LOCALHOST_RESOURCE_URL } from '../utils/constants';\nimport { DataLoadingWrapper } from '../components/DataLoadingWrapper';\nimport { checkForDuplicates, findSimilar, stringRemoveAccents } from '../utils';\nimport { SEARCH_THRESHOLD } from '../utils/constants';\nimport { CopyToClipboardButton } from 'components/CopyToClipboardButton';\nimport rawData from './rawData.json';\nimport { Header } from 'components/Layout/Header';\nimport { buildPizzaDeliveryEpisode } from 'components/EscapeRoom/pizza-delivery-episode';\nimport {\n  ItemCard,\n  MissionCard,\n  TextCard,\n  UnorderedListCard,\n  VoiceCard,\n} from 'components/EscapeRoom/components';\n\nconst { Text } = Typography;\n\nfunction Other() {\n  useTitle('Other');\n\n  // const result = Array(50)\n  //   .fill(1)\n  //   .reduce((acc, e, index) => {\n  //     const num = e + index;\n  //     const idNum = num < 10 ? `00${num}` : num < 100 ? `0${num}` : `${num}`;\n  //     const id = `md-rb-${idNum}`;\n\n  //     acc[id] = {\n  //       id,\n  //       orientation: 'vertical',\n  //     };\n\n  //     return acc;\n  //   }, {});\n\n  // const result = Object.entries(data).reduce((acc, [id, value]) => {\n  //   acc[id] = {\n  //     id: value.id,\n  //     name: {\n  //       pt: value.pt,\n  //       en: value.en,\n  //     },\n  //     gender: value.gender,\n  //   };\n  //   return acc;\n  // }, {});\n\n  // const result = Object.entries(SUSPECTS_NAMES).reduce((acc, [id, value]) => {\n  //   if (!value.gender) throw Error(`a, id ${id}`);\n  //   acc[id] = {\n  //     id,\n  //     ...value,\n  //   };\n\n  //   return acc;\n  // }, {});\n\n  const makeCrimesHediondosEnries = (quantity, startingId = 0, type) => {\n    return Array(quantity)\n      .fill(startingId)\n      .reduce((acc, e, index) => {\n        const num = e + index;\n        const idNum = num < 10 ? `00${num}` : num < 100 ? `0${num}` : `${num}`;\n        const id = `dmhk-${type}-${idNum}`;\n\n        acc[id] = {\n          id,\n          type: type === 'wp' ? 'weapon' : 'evidence',\n          name: {\n            en: '',\n            pt: '',\n          },\n        };\n\n        return acc;\n      }, {});\n  };\n\n  // const result = makeCrimesHediondosEnries(200, 66, 'ev');\n\n  const convertCsvJsonSceneTiles = (d) => {\n    return d.map((e) => {\n      const entry = {\n        title: {},\n        values: [],\n      };\n\n      Object.entries(e).forEach(([key, value]) => {\n        const [category, language] = key.split('-');\n\n        if (!language) {\n          entry[key] = value;\n          return;\n        }\n\n        if (category === 'title') {\n          entry.title[language] = value;\n          return;\n        }\n\n        if (category.startsWith('value')) {\n          const index = Number(category.substring(5));\n          if (entry.values[index] === undefined) {\n            entry.values[index] = {};\n          }\n          entry.values[index][language] = value;\n          return;\n        }\n\n        console.log({ [key]: value });\n      });\n\n      return entry;\n    });\n  };\n\n  const convertToDualLanguage = (d) => {\n    return Object.values(d).reduce((acc, entry) => {\n      acc[entry.id] = {\n        id: entry.id,\n        type: entry.type,\n        name: {\n          en: entry.en,\n          pt: entry.pt,\n        },\n      };\n      return acc;\n    }, {});\n  };\n  // const result = convertToDualLanguage(data);\n\n  const parseEspiao = () => {\n    const cache = {};\n\n    db.forEach((entry) => {\n      if (cache[entry.location] === undefined) {\n        cache[entry.location] = [];\n      }\n      cache[entry.location].push(entry.role);\n    });\n\n    return Object.entries(cache).reduce((acc, [location, roles], index) => {\n      const idNum = index + 1 < 10 ? `0${index + 1}` : index + 1;\n      const id = `e-${idNum}-en`;\n      acc[id] = {\n        id,\n        name: location,\n        roles: roles,\n      };\n\n      return acc;\n    }, {});\n  };\n\n  // const result = parseEspiao();\n\n  const parseLinhasCruzadas = () => {\n    return db.reduce((acc, entry, index) => {\n      const id = `lc-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry.text,\n      };\n      return acc;\n    }, {});\n  };\n\n  // const result = parseLinhasCruzadas();\n\n  const parseGaleriaDeSonhos = () => {\n    return rawData.reduce((acc, entry, index) => {\n      const id = `gs-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry.text,\n      };\n      return acc;\n    }, {});\n  };\n\n  // const result = parseGaleriaDeSonhos();\n\n  const parseCategories = () => {\n    return rawData.reduce((acc, entry, index) => {\n      const id = `ct-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry.category,\n      };\n      return acc;\n    }, {});\n  };\n\n  // const result = parseCategories();\n\n  // const parseInspirations = () => {\n  //   return rawData.reduce((acc, entry, index) => {\n  //     const id = `mui-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       text: entry.text,\n  //       level: entry.level,\n  //       set: entry.set,\n  //     };\n  //     return acc;\n  //   }, {});\n  // };\n\n  // const result = parseInspirations();\n\n  // const parseAdjectives = () => {\n  //   return rawData.reduce((acc, entry, index) => {\n  //     const id = `adj-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       text: entry.texto,\n  //     };\n  //     return acc;\n  //   }, {});\n  // };\n\n  // const result = parseAdjectives();\n\n  // const parsePairs = () => {\n  //   return rawData.reduce((acc, entry, index) => {\n  //     const id = `ap-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       values: [entry.CARD_1, entry.CARD_2],\n  //     };\n  //     return acc;\n  //   }, {});\n  // };\n\n  // const result = parsePairs();\n\n  // const cache = {};\n  // const duplicated = {};\n  // const uniqueSingleWords = () => {\n  //   const resArr = [];\n\n  //   Object.values(rawData).forEach((entry) => {\n  //     const raw = stringRemoveAccents(entry.text).toLowerCase();\n\n  //     if (raw.includes(' ')) {\n  //       console.warn('SPACE IN', raw);\n  //     }\n\n  //     if (cache[raw]) {\n  //       duplicated[raw] = true;\n  //     } else {\n  //       cache[raw] = true;\n  //       resArr.push(entry.text.toLowerCase());\n  //     }\n  //   });\n\n  //   const sortedArr = resArr.sort((a, b) => a.localeCompare(b));\n\n  //   return sortedArr.reduce((acc, entry, index) => {\n  //     const id = `sw-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       text: entry,\n  //     };\n\n  //     return acc;\n  //   }, {});\n  // };\n  // const result = uniqueSingleWords();\n  // console.log(duplicated);\n\n  // const parseContenders = () =>\n  //   rawData.reduce((acc, entry, index) => {\n  //     const id = `cnt-${index + 1}`;\n  //     const item = {\n  //       id,\n  //       name: {\n  //         en: entry.name_en,\n  //         pt: entry.name_pt,\n  //       },\n  //     };\n\n  //     if (entry.exclusivity) {\n  //       item.exclusivity = entry.exclusivity;\n  //     }\n\n  //     acc[id] = item;\n\n  //     return acc;\n  //   }, {});\n\n  // const result = parseContenders();\n\n  // const parseChallenges = () =>\n  //   rawData.reduce((acc, entry, index) => {\n  //     const id = `clg-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       text: entry.challenge_pt,\n  //     };\n  //     return acc;\n  //   }, {});\n\n  // const result = parseChallenges();\n\n  // const parseQuantitativeQuestions = () =>\n  //   rawData.reduce((acc, entry, index) => {\n  //     const id = `qq-${index + 1}-pt`;\n  //     const e = {\n  //       id,\n  //       question: entry.question,\n  //     };\n\n  //     if (entry.scale) {\n  //       e.scale = true;\n  //     }\n\n  //     acc[id] = e;\n  //     return acc;\n  //   }, {});\n\n  // const result = parseQuantitativeQuestions();\n\n  // const parseQuantitativeQuestions = () =>\n  //   rawData.reduce((acc, entry, index) => {\n  //     const id = `dlm-${index + 1}-pt`;\n  //     const e = {\n  //       id,\n  //       prompt: entry.Prompt,\n  //       left: entry.Left,\n  //       right: entry.Right,\n  //     };\n\n  //     if (entry.NSFW) {\n  //       e.nsfw = true;\n  //     }\n\n  //     acc[id] = e;\n  //     return acc;\n  //   }, {});\n\n  // const result = parseQuantitativeQuestions();\n\n  // const parseMovies = () => {\n  //   const result = {};\n  //   rawData.forEach((entry, index) => {\n  //     const id = `mr-${index + 1}-pt`;\n  //     const e = {\n  //       id,\n  //       text: entry.text.trim(),\n  //       type: entry.type,\n  //       highlights: [''],\n  //     };\n  //     result[id] = e;\n  //   });\n  //   return result;\n  // };\n\n  // const result = parseMovies();\n  const playerCount = 4;\n  const level = 'intermediate';\n  const [episode, setEpisode] = useState(buildPizzaDeliveryEpisode(level, playerCount));\n\n  const jsonString = useMemo(() => JSON.stringify(episode, null, 4), [episode]);\n\n  return (\n    <Layout>\n      <Header title=\"Other\" />\n\n      <Divider />\n\n      <Layout.Content className=\"content\">\n        <div className=\"a\">\n          <Text>\n            Output <CopyToClipboardButton content={jsonString} />\n          </Text>\n\n          <Input.TextArea name=\"search-results\" id=\"\" cols=\"10\" rows=\"10\" readOnly value={jsonString} />\n        </div>\n        <Button onClick={() => setEpisode(buildPizzaDeliveryEpisode(level, playerCount))}>\n          Generate {level} episode for {playerCount} players\n        </Button>\n\n        <Typography.Title level={2}>\n          Episode: {episode.title.en} ({episode.cards.length})\n        </Typography.Title>\n\n        <Space wrap className=\"my-4\">\n          {episode.cards.map((card) => {\n            switch (card.type) {\n              case 'mission':\n                return <MissionCard key={card.id} card={card} />;\n              case 'item':\n                return <ItemCard key={card.id} card={card} />;\n              case 'voice':\n                return <VoiceCard key={card.id} card={card} />;\n              case 'text':\n                return <TextCard key={card.id} card={card} />;\n              case 'unordered-list':\n                return <UnorderedListCard key={card.id} card={card} />;\n              default:\n                return (\n                  <div key={card.id}>\n                    {card.id} - {card.type}\n                  </div>\n                );\n            }\n          })}\n        </Space>\n\n        <Typography.Title level={5}>Must include</Typography.Title>\n        <Input.TextArea\n          name=\"search-results\"\n          id=\"\"\n          cols=\"10\"\n          rows=\"10\"\n          readOnly\n          value={JSON.stringify(episode.winningCondition.includes, null, 4)}\n        />\n\n        <Typography.Title level={5}>Must exclude</Typography.Title>\n        <Input.TextArea\n          name=\"search-results\"\n          id=\"\"\n          cols=\"10\"\n          rows=\"10\"\n          readOnly\n          value={JSON.stringify(episode.winningCondition.excludes, null, 4)}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Other;\n\nfunction parse(a) {\n  return a.map((v) => {\n    if (v.FIELD2) return `${v.question}, ${v.FIELD2}`;\n    return v.question;\n  });\n}\n\nconst db = [];\n","import { AlienSign, Emoji, Glyph } from 'components/Sprites';\nimport { capitalize, invert, keyBy } from 'lodash';\n\nexport const SEARCH_THRESHOLD: number = 2;\n\nexport const RESOURCE_NAMES = {\n  ADJECTIVES: 'adjectives',\n  ALIEN_ITEMS: 'alien-items',\n  ARTE_RUIM_CARDS: 'arte-ruim-cards',\n  ARTE_RUIM_GROUPS: 'arte-ruim-groups',\n  ARTE_RUIM_PAIRS: 'arte-ruim-pairs',\n  CATEGORIES: 'categories',\n  CHALLENGES: 'challenges',\n  CHARACTERS: 'characters',\n  CHOICES: 'choices',\n  CONCEPTS: 'concepts',\n  CONTENDERS: 'contenders',\n  CRIME_EVIDENCE: 'crime-evidence',\n  CRIME_TILES: 'crime-tiles',\n  CRIME_WEAPONS: 'crime-weapons',\n  DATING_CANDIDATE: 'dating-candidate',\n  DATING_CANDIDATE_BODIES: 'dating-candidate-bodies',\n  DATING_CANDIDATE_HEADS: 'dating-candidate-heads',\n  DIAGRAM_TOPICS: 'diagram-topics',\n  DILEMMAS: 'dilemmas',\n  DRAWING_WORDS: 'drawing-words',\n  GROUP_QUESTIONS: 'group-questions',\n  ITEMS_ATTRIBUTES: 'items-attributes',\n  MONSTER_ORIENTATION: 'monster-orientation',\n  MOVIE_REVIEWS: 'movie-reviews',\n  MOVIES: 'movies',\n  NAMING_PROMPTS: 'naming-prompts',\n  OBJECT_FEATURES: 'object-features',\n  QUANTITATIVE_QUESTIONS: 'quantitative-questions',\n  SCENARIOS: 'scenarios',\n  SPECTRUMS: 'spectrums',\n  SINGLE_WORDS: 'single-words',\n  SPY_LOCATIONS: 'spy-locations',\n  SPY_QUESTIONS: 'spy-questions',\n  SUSPECTS: 'suspects',\n  TESTIMONY_QUESTIONS: 'testimony-questions',\n  THEME_WORDS: 'theme-words',\n  THING_PROMPTS: 'thing-prompts',\n  THINGS_QUALITIES: 'things-qualities',\n  TOPICS: 'topics',\n  TREE_WORDS: 'tree-words',\n  TWEETS: 'tweets',\n};\n\nexport const DUAL_LANGUAGE_RESOURCES = [\n  RESOURCE_NAMES.ALIEN_ITEMS,\n  RESOURCE_NAMES.CONTENDERS,\n  RESOURCE_NAMES.CRIME_EVIDENCE,\n  RESOURCE_NAMES.CRIME_TILES,\n  RESOURCE_NAMES.CRIME_WEAPONS,\n  RESOURCE_NAMES.DATING_CANDIDATE_BODIES,\n  RESOURCE_NAMES.DATING_CANDIDATE_HEADS,\n  RESOURCE_NAMES.ITEMS_ATTRIBUTES,\n  RESOURCE_NAMES.MONSTER_ORIENTATION,\n  RESOURCE_NAMES.OBJECT_FEATURES,\n  RESOURCE_NAMES.SUSPECTS,\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n\nexport const SEARCH_PROPERTY: Record<string, string> = {\n  adjectives: 'text',\n  'arte-ruim-cards': 'text',\n  'arte-ruim-groups': 'theme',\n  'arte-ruim-pairs': 'values',\n  categories: 'text',\n  challenges: 'text',\n  characters: 'text',\n  contenders: '',\n  'crime-tiles': '',\n  'diagram-topics': 'text',\n  'galeria-de-sonhos': 'text',\n  'group-questions': 'text',\n  'linhas-cruzadas': 'text',\n  'naming-prompts': 'text',\n  spectrums: '',\n  'single-words': 'text',\n  'spy-locations': '',\n  'spy-questions': '',\n  'testimony-questions': 'question',\n  'thing-prompts': 'text',\n  topics: 'text',\n};\n\nexport const TOTAL_ITEMS = 1418;\n\nexport const SPRITE_LIBRARY = keyBy(\n  [\n    {\n      key: 'alien-signs',\n      name: 'Alien Signs',\n      prefix: 'sign',\n      quantity: 38,\n      startAt: 0,\n      component: AlienSign,\n    },\n    {\n      key: 'emojis',\n      name: 'Emojis',\n      prefix: 'emoji',\n      quantity: 30,\n      startAt: 1,\n      component: Emoji,\n    },\n    {\n      key: 'glyphs',\n      name: 'Glyphs',\n      prefix: 'glyph',\n      quantity: 365,\n      startAt: 1,\n      component: Glyph,\n    },\n  ],\n  'key'\n);\n\n/**\n * Options for the sample size selector\n */\nexport const TAGS_SELECTOR_OPTIONS = [\n  { label: 'Any', value: '' },\n  { label: '= 0', value: 0 },\n  { label: '< 3', value: 3 },\n  { label: '< 5', value: 5 },\n  { label: '< 10', value: 10 },\n];\n\n/**\n * Options for the sample size selector\n */\nexport const SAMPLE_SIZE_OPTIONS = [\n  {\n    label: '9',\n    value: 9,\n  },\n  {\n    label: '15',\n    value: 15,\n  },\n  {\n    label: '30',\n    value: 30,\n  },\n  {\n    label: '50',\n    value: 50,\n  },\n  {\n    label: '100',\n    value: 100,\n  },\n];\n\n/**\n * Options for the card size selector\n */\nexport const CARD_SIZE_OPTIONS = [\n  {\n    label: 'Small',\n    value: 100,\n  },\n  {\n    label: 'Medium',\n    value: 150,\n  },\n  {\n    label: 'Large',\n    value: 200,\n  },\n  {\n    label: 'X-Large',\n    value: 250,\n  },\n];\n\nexport const ATTRIBUTE_VALUE = {\n  OPPOSITE: -10,\n  UNRELATED: -3,\n  UNCLEAR: -1,\n  RELATED: 5,\n  DETERMINISTIC: 10,\n};\n\nexport const VALUE_ATTRIBUTE = invert(ATTRIBUTE_VALUE);\n\nexport const ATTRIBUTE_VALUE_PREFIX = {\n  OPPOSITE: '^',\n  UNRELATED: '!',\n  UNCLEAR: '~',\n  RELATED: '',\n  DETERMINISTIC: '+',\n};\n\nexport const ATTRIBUTE_GROUP_VALUES = Object.keys(ATTRIBUTE_VALUE).map((key) => ({\n  value: key.toLowerCase(),\n  label: capitalize(key),\n}));\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n","import { chain, cloneDeep, isObject, memoize, merge, orderBy } from 'lodash';\nimport { ATTRIBUTE_VALUE, ATTRIBUTE_VALUE_PREFIX, SEARCH_THRESHOLD } from './constants';\nimport stringSimilarity from 'string-similarity';\nimport { Item, ItemAtributesValues, ItemAttribute } from 'types';\n\n/**\n *\n * @param str\n * @returns\n */\nexport function stringRemoveAccents(str: string) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n *\n * @param data\n * @param property\n * @returns\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n *\n * @param str\n * @param data\n * @param property\n * @returns\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const val = typeof entry[property] === 'string' ? entry[property] : JSON.stringify(entry[property]);\n    const entryStr = stringRemoveAccents(val.toLowerCase());\n\n    if (entryStr.includes(value) || stringSimilarity.compareTwoStrings(str, entryStr) > 0.5) {\n      similar[entry.id] = val;\n    }\n  });\n\n  return similar;\n};\n\nexport const findBestMatch = (str: string, list: string[]) => {};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n\n/**\n * Remove duplicated elements from a list\n * @param arr\n * @returns\n */\nexport const removeDuplicates = <T>(arr: T[]): T[] => {\n  return Array.from(new Set(arr));\n};\n\n/**\n * Converts a object into a downloadable file and prompts download\n * @param obj\n * @param filename\n */\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\n/**\n * Sorts the keys of a JSON object based on a predefined order.\n * The keys 'id', 'name', 'title', and 'type' will be placed first in the sorted object,\n * followed by the remaining keys in alphabetical order.\n *\n * @param library - The JSON object to sort.\n * @returns The sorted JSON object.\n */\nexport const sortJsonKeys = (library: PlainObject): PlainObject => {\n  function sortKeys(obj: any): any {\n    if (isObject(obj) && !Array.isArray(obj)) {\n      const sortedKeys = Object.keys(obj)\n        .filter((key) => ['id', 'name', 'title', 'type'].includes(key))\n        .concat(\n          Object.keys(obj)\n            .filter((key) => !['id', 'name', 'title', 'type'].includes(key))\n            .sort()\n        );\n\n      return chain(obj)\n        .toPairs()\n        .sortBy(([key, _]) => sortedKeys.indexOf(key))\n        .map(([key, value]) => [key, sortKeys(value)])\n        .fromPairs()\n        .value();\n    }\n    return obj;\n  }\n\n  return sortKeys(library);\n};\n\n/**\n * Deserializes the data received from Firebase into a dictionary of specified type.\n *\n * @template TData - The type of data to deserialize.\n * @param data - The data to be deserialized.\n * @returns A dictionary of deserialized data.\n */\nexport const deserializeFirebaseData = <TData>(data: Dictionary<string>): Dictionary<TData> => {\n  return Object.keys(data).reduce((acc: Dictionary<TData>, key) => {\n    acc[key] = JSON.parse(data[key]);\n    return acc;\n  }, {});\n};\n\n/**\n * Serializes the data in a dictionary to a dictionary of strings.\n *\n * @param data - The dictionary containing the data to be serialized.\n * @returns A new dictionary with the same keys as the input dictionary, but with the values serialized as strings.\n */\nexport const serializeFirebaseData = <TData>(data: Dictionary<TData>): Dictionary<string> => {\n  return Object.keys(data).reduce((acc: Dictionary<string>, key) => {\n    acc[key] = JSON.stringify(data[key]);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentDateTime = (): string => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const day = String(now.getDate()).padStart(2, '0');\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\n\n/**\n * Creates a new item with default values and merges it with the provided partial item.\n *\n * @param partialItem - The partial item to merge with the default values.\n * @returns The new item with merged values.\n */\nexport const getNewItem = (partialItem: Partial<Item> = {}): Item => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        name: { en: '', pt: '' },\n        groups: [],\n        attributes: {},\n      },\n      partialItem\n    )\n  );\n};\n\n/**\n * Creates a new `ItemAtributesValues` object by merging the provided `partialItemAttributeValues`\n * with a default object that has an empty `id` and an empty `attributes` object.\n *\n * @param partialItemAttributeValues - The partial item attribute values to merge.\n * @returns The new `ItemAtributesValues` object.\n */\nexport const getNewItemAttributeValues = (\n  partialItemAttributeValues: Partial<ItemAtributesValues> = {}\n): ItemAtributesValues => {\n  return cloneDeep(\n    merge(\n      {\n        id: '',\n        attributes: {},\n      },\n      partialItemAttributeValues\n    )\n  );\n};\n\nexport const getItemAttributePriorityResponse = (\n  itemAttributesValues: ItemAtributesValues,\n  itemAttributes: Dictionary<ItemAttribute>\n) => {\n  const priorityOrder: string[] = orderBy(\n    Object.values(itemAttributes),\n    ['priority', 'id'],\n    ['asc', 'asc']\n  ).map((attribute) => attribute.id);\n\n  function sortAttributesByPriority(attributeKeys: string[], prefix: string) {\n    return orderBy(attributeKeys, (key) => priorityOrder.indexOf(key), ['asc']).map(\n      (key) => `${prefix}${key}`\n    );\n  }\n\n  let opposite: string[] = [];\n  let deterministic: string[] = [];\n  let related: string[] = [];\n  let unrelated: string[] = [];\n  let unclear: string[] = [];\n\n  Object.entries(itemAttributesValues.attributes).forEach(([attributeId, value]) => {\n    const attribute = itemAttributes[attributeId];\n    if (!attribute) return;\n\n    switch (value) {\n      case ATTRIBUTE_VALUE.OPPOSITE:\n        opposite.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.DETERMINISTIC:\n        deterministic.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.RELATED:\n        related.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNRELATED:\n        unrelated.push(attributeId);\n        break;\n      case ATTRIBUTE_VALUE.UNCLEAR:\n      default:\n        unclear.push(attributeId);\n        break;\n    }\n  });\n\n  return [\n    ...sortAttributesByPriority(opposite, ATTRIBUTE_VALUE_PREFIX.OPPOSITE),\n    ...sortAttributesByPriority(deterministic, ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC),\n    ...sortAttributesByPriority(related, ATTRIBUTE_VALUE_PREFIX.RELATED),\n    ...sortAttributesByPriority(unrelated, ATTRIBUTE_VALUE_PREFIX.UNRELATED),\n    ...sortAttributesByPriority(unclear, ATTRIBUTE_VALUE_PREFIX.UNCLEAR),\n  ];\n};\nexport const parseAttribute = memoize((keyVariant: string) => {\n  if (keyVariant.length === 3) {\n    return {\n      key: keyVariant,\n      className: '',\n      text: '',\n    };\n  }\n\n  const variant = keyVariant[0];\n  const key = keyVariant.slice(1, 4);\n\n  return {\n    key,\n    className: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'deterministic',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'unrelated',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'unclear',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'opposite',\n    }[variant],\n    text: {\n      [ATTRIBUTE_VALUE_PREFIX.DETERMINISTIC]: 'very',\n      [ATTRIBUTE_VALUE_PREFIX.UNRELATED]: 'not',\n      [ATTRIBUTE_VALUE_PREFIX.UNCLEAR]: 'maybe',\n      [ATTRIBUTE_VALUE_PREFIX.OPPOSITE]: 'very not',\n    }[variant],\n  };\n});\n\nexport const filterMessage = (message: string[], showUnclear: boolean, showUnrelated: boolean) => {\n  return message.filter((keyVariant) => {\n    if (!showUnclear && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNCLEAR)) {\n      return false;\n    }\n\n    if (!showUnrelated && keyVariant.includes(ATTRIBUTE_VALUE_PREFIX.UNRELATED)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n"],"names":["CopyToClipboardButton","content","shape","icon","size","buttonProps","copyToClipboard","useCopyToClipboardFunction","onClick","DataLoadingWrapper","isLoading","isIdle","error","hasResponseData","children","tip","className","message","description","type","showIcon","Sprite","id","source","width","padding","title","getUrl","useBaseUrl","data","isError","useQuery","queryKey","queryFn","async","response","fetch","text","enabled","paddedWidth","style","height","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","AlienSign","clsx","Emoji","emojiId","startsWith","getSource","memoize","str","match","numId","parseInt","glyphId","sourceId","Math","ceil","Glyph","itemId","Item","library","baseUrl","folder","process","path","join","state","useCopyToClipboard","App","useEffect","value","length","info","truncate","omission","success","includeInEpisode","episodeLevel","entryLevel","includes","isTargetKeywordInTheEpisode","cards","keyword","some","card","targetKeyword","PIZZA_DELIVERY_EPISODE","header","en","pt","iconId","level","conditional","number","filler","conditions","target","consequence","targetType","blocks","flavors","keywords","prices","price","salad","speech","PIZZA_DELIVERY_FILLERS","buildPizzaDeliveryEpisode","playerCount","filter","missionKeywords","missionCard","find","condition","forEach","push","menuBuildingBlock","secondCheapestPizza","shuffle","newMenuCard","list","map","flavor","index","priceObj","random","console","log","excludes","isKeywordInTheEpisode","e","shuffledFillers","extraCards","fillerAmount","i","String","winningCondition","bonuses","ordered","MissionCard","classNames","body","ItemCard","code","VoiceCard","TextCard","UnorderedListCard","item","Text","Typography","useTitle","episode","setEpisode","useState","jsonString","useMemo","JSON","stringify","Header","name","cols","rows","readOnly","wrap","SEARCH_THRESHOLD","RESOURCE_NAMES","ADJECTIVES","ALIEN_ITEMS","ARTE_RUIM_CARDS","ARTE_RUIM_GROUPS","ARTE_RUIM_PAIRS","CATEGORIES","CHALLENGES","CHARACTERS","CHOICES","CONCEPTS","CONTENDERS","CRIME_EVIDENCE","CRIME_TILES","CRIME_WEAPONS","DATING_CANDIDATE","DATING_CANDIDATE_BODIES","DATING_CANDIDATE_HEADS","DIAGRAM_TOPICS","DILEMMAS","DRAWING_WORDS","GROUP_QUESTIONS","ITEMS_ATTRIBUTES","MONSTER_ORIENTATION","MOVIE_REVIEWS","MOVIES","NAMING_PROMPTS","OBJECT_FEATURES","QUANTITATIVE_QUESTIONS","SCENARIOS","SPECTRUMS","SINGLE_WORDS","SPY_LOCATIONS","SPY_QUESTIONS","SUSPECTS","TESTIMONY_QUESTIONS","THEME_WORDS","THING_PROMPTS","THINGS_QUALITIES","TOPICS","TREE_WORDS","TWEETS","DUAL_LANGUAGE_RESOURCES","LANGUAGES","SEARCH_PROPERTY","adjectives","categories","challenges","characters","contenders","spectrums","topics","SPRITE_LIBRARY","keyBy","key","prefix","quantity","startAt","component","TAGS_SELECTOR_OPTIONS","label","SAMPLE_SIZE_OPTIONS","CARD_SIZE_OPTIONS","ATTRIBUTE_VALUE","OPPOSITE","UNRELATED","UNCLEAR","RELATED","DETERMINISTIC","ATTRIBUTE_VALUE_PREFIX","invert","ATTRIBUTE_GROUP_VALUES","Object","keys","toLowerCase","capitalize","stringRemoveAccents","normalize","replace","checkForDuplicates","property","unique","duplicates","values","entry","entryKey","undefined","findSimilar","similar","trim","val","entryStr","stringSimilarity","removeDuplicates","arr","Array","from","Set","downloadObjectAsFile","obj","filename","blob","Blob","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","sortJsonKeys","sortKeys","isObject","isArray","sortedKeys","concat","sort","chain","toPairs","sortBy","_","indexOf","fromPairs","deserializeFirebaseData","reduce","acc","parse","serializeFirebaseData","getCurrentDateTime","now","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getNewItem","partialItem","cloneDeep","merge","groups","attributes","getNewItemAttributeValues","partialItemAttributeValues","getItemAttributePriorityResponse","itemAttributesValues","itemAttributes","priorityOrder","orderBy","attribute","sortAttributesByPriority","attributeKeys","opposite","deterministic","related","unrelated","unclear","entries","attributeId","parseAttribute","keyVariant","variant","slice","filterMessage","showUnclear","showUnrelated"],"sourceRoot":""}