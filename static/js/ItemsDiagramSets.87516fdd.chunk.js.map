{"version":3,"file":"static/js/ItemsDiagramSets.87516fdd.chunk.js","mappings":"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","sources":["components/Common/SaveButton.tsx","hooks/useGetFirebaseDoc.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","components/Items/Diagram/ItemsDiagramFilters.tsx","components/Items/Diagram/utils.ts","components/Items/Diagram/AddItemRules.tsx","components/Items/Diagram/RulesByThing.tsx","components/Items/Diagram/ThingsByRule.tsx","components/Items/Diagram/ItemsDiagramSetsContent.tsx","pages/Items/ItemsDiagramSets.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]);\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (tdrQuery.isLoading || firebaseQuery.isLoading || mutation.isPending) return {};\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isLoading,\n    firebaseQuery.isLoading,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? ({} as Dictionary<TData>),\n    hasResponseData,\n  };\n}\n\nexport function useTDResourceNonCollection<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('resources');\n\n  const query = useQuery<TData, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as TData;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data,\n    hasResponseData,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { ClusterOutlined, TableOutlined } from '@ant-design/icons';\nimport { Divider, Flex } from 'antd';\nimport { FilterSegments } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { DailyDiagramItem } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nexport function ItemsDiagramFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n  entriesToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const { addParams, queryParams } = useQueryParams();\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(entriesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"daily-diagram-items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'rule'}\n        onChange={(mode) => addParams({ display: mode, page: 1 }, { page: 1 })}\n        options={[\n          {\n            title: 'By Rule',\n            icon: <ClusterOutlined />,\n            value: 'rule',\n          },\n          {\n            title: 'By Thing',\n            icon: <TableOutlined />,\n            value: 'thing',\n          },\n        ]}\n      />\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(quartets: Dictionary<DailyDiagramItem>) {\n  // TODO\n  return sortJsonKeys(quartets);\n}\n","import { memoize } from 'lodash';\nimport { stringRemoveAccents } from 'utils';\n\nconst LETTERS = 'abcdefghijklmnopqrstuvwxyz';\nconst CONSONANTS = 'bcdfghjklmnpqrstvwxyz';\nconst VOWELS = 'aeiou';\nconst accents = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n\nconst cleanupWord = memoize((word: string) => {\n  return stringRemoveAccents(word).toLowerCase();\n});\n\nconst countLetters = (word: string) => {\n  return cleanupWord(word).length;\n};\n\nconst countVowels = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => VOWELS.includes(letter)).length;\n};\n\nconst countConsonants = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => CONSONANTS.includes(letter)).length;\n};\n\nconst countAccents = (word: string) => {\n  return word\n    .toLowerCase()\n    .split('')\n    .filter((letter) => accents.test(letter)).length;\n};\n\nconst countWords = (text: string) => {\n  return text.split(' ').length;\n};\n\nexport const verifiers: Record<string, (word: string) => boolean> = {\n  // The first two letters are in alphabetical order\n  'ddr-7-pt': (word: string) => {\n    return LETTERS.indexOf(cleanupWord(word)[0]) < LETTERS.indexOf(cleanupWord(word)[1]);\n  },\n  // Less than 5 letters\n  'ddr-8-pt': (word: string) => countLetters(word) <= 5,\n  // Has exactly 5 letters\n  'ddr-9-pt': (word: string) => countLetters(word) === 5,\n  // Has between 4 and 6 letters\n  'ddr-10-pt': (word: string) => countLetters(word) >= 4 && countLetters(word) <= 6,\n  // Has between 6 and 8 letters\n  'ddr-11-pt': (word: string) => countLetters(word) >= 6 && countLetters(word) <= 8,\n  // Has more than 7 letters\n  'ddr-12-pt': (word: string) => countLetters(word) > 7,\n  // Has more than 1 word\n  'ddr-13-pt': (word: string) => countWords(word) > 1,\n  // Has two or more different vowels\n  'ddr-14-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size >= 2;\n  },\n  // Has 4 or less unique letters\n  'ddr-15-pt': (word: string) => new Set(cleanupWord(word).split('')).size <= 4,\n  // Has more consonants than vowels\n  'ddr-16-pt': (word: string) => countConsonants(word) > countVowels(word),\n  // Has more vowels than consonants\n  'ddr-17-pt': (word: string) => countVowels(word) > countConsonants(word),\n  // The first letter is repeated at least once\n  'ddr-18-pt': (word: string) => {\n    const firstLetter = cleanupWord(word)[0];\n    return cleanupWord(word).slice(1).includes(firstLetter);\n  },\n  // has repeated letters\n  'ddr-19-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) =>\n        cleanupWord(word)\n          .slice(index + 1)\n          .includes(letter)\n      );\n  },\n  // has repeated vowels\n  'ddr-20-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          VOWELS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has repeated consonants\n  'ddr-21-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          CONSONANTS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has consecutive vowels\n  'ddr-22-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => VOWELS.includes(letter) && VOWELS.includes(word[index + 1]));\n  },\n  // starts with letters from A to M\n  'ddr-23-pt': (word: string) => 'abcdefghijklm'.includes(cleanupWord(word)[0]),\n  // starts with letters from N to Z\n  'ddr-24-pt': (word: string) => 'nopqrstuvwxyz'.includes(cleanupWord(word)[0]),\n  // starts with a vowel\n  'ddr-25-pt': (word: string) => VOWELS.includes(cleanupWord(word)[0]),\n  // starts with a consonant\n  'ddr-26-pt': (word: string) => CONSONANTS.includes(cleanupWord(word)[0]),\n  // Double consecutive letters\n  'ddr-27-pt': (word: string) => {\n    return word.split('').some((letter, index) => letter === word[index + 1]);\n  },\n  // Has an A\n  'ddr-28-pt': (word: string) => cleanupWord(word).includes('a'),\n  // Has an R\n  'ddr-29-pt': (word: string) => cleanupWord(word).includes('r'),\n  // Has an U\n  'ddr-30-pt': (word: string) => cleanupWord(word).includes('u'),\n  // Has a Q or J\n  'ddr-31-pt': (word: string) => cleanupWord(word).includes('q') || cleanupWord(word).includes('j'),\n  // Has a C or Ç\n  'ddr-32-pt': (word: string) => cleanupWord(word).includes('c') || cleanupWord(word).includes('ç'),\n  // Has an M\n  'ddr-33-pt': (word: string) => cleanupWord(word).includes('m'),\n  // Has an H\n  'ddr-34-pt': (word: string) => cleanupWord(word).includes('h'),\n  // Has P or B\n  'ddr-35-pt': (word: string) => cleanupWord(word).includes('p') || cleanupWord(word).includes('b'),\n  // Has K, W or Y\n  'ddr-36-pt': (word: string) =>\n    cleanupWord(word).includes('k') || cleanupWord(word).includes('w') || cleanupWord(word).includes('y'),\n  // Has an accent\n  'ddr-37-pt': (word: string) => countAccents(word) > 0,\n  // Does not end with an A or O\n  'ddr-38-pt': (word: string) => !['a', 'o'].includes(cleanupWord(word).slice(-1)),\n  // Ends with a consonant\n  'ddr-39-pt': (word: string) => CONSONANTS.includes(cleanupWord(word).slice(-1)),\n  // Ends with an S\n  'ddr-40-pt': (word: string) => cleanupWord(word).slice(-1) === 's',\n  // Does not have repeated vowels\n  'ddr-41-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size === vowels.length;\n  },\n  // Does not have repeated consonants\n  'ddr-42-pt': (word: string) => {\n    const consonants = cleanupWord(word)\n      .split('')\n      .filter((letter) => CONSONANTS.includes(letter));\n    return new Set(consonants).size === consonants.length;\n  },\n};\n","import { Affix, App, Button, Flex, Form, Input, Modal, Radio, Switch } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { sample } from 'lodash';\nimport { useEffect, useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { verifiers } from './utils';\nimport { Item } from 'components/Sprites';\nimport { wait } from 'utils';\n\ntype AddItemRulesProps = {\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  width: number;\n};\n\nexport function AddItemRules({ addEntryToUpdate, availableThings, rules, width }: AddItemRulesProps) {\n  const { notification } = App.useApp();\n\n  const [activeThing, setActiveThing] = useState<ItemT | null>(null);\n\n  const onActivateThing = () => {\n    setActiveThing(sample(availableThings) ?? null);\n  };\n\n  const onAddItem = async (newItem: Record<string, boolean | string | number>) => {\n    if (!activeThing) return;\n    if (!newItem.name || !newItem.itemId) {\n      notification.error({ message: 'Name and Item ID are required' });\n    }\n\n    const { itemId, name, updatedAt, ...itemRules } = newItem;\n\n    const itemEntry: DailyDiagramItem = {\n      itemId: itemId as string,\n      name: name as string,\n      updatedAt: updatedAt as number,\n      rules: Object.keys(itemRules).filter((key) => itemRules[key] === true),\n    };\n\n    addEntryToUpdate(itemId as string, itemEntry);\n\n    console.log('COMPLETED SAVE');\n\n    setActiveThing(null);\n\n    await wait(500);\n\n    onActivateThing();\n  };\n\n  return (\n    <>\n      <Button size=\"large\" onClick={onActivateThing}>\n        Classify New Item\n      </Button>\n      {!!activeThing && (\n        <AddItemModal\n          isModalOpen={activeThing !== null}\n          onAddItem={onAddItem}\n          handleCancel={() => setActiveThing(null)}\n          item={activeThing}\n          rules={rules}\n          width={width * 0.9}\n        />\n      )}\n    </>\n  );\n}\n\nconst chooseNameThatIsASingleWord = (item: ItemT) => {\n  if (item.name.pt.split(' ').length === 1) return item.name.pt;\n\n  if (item.aliasesPt) {\n    return item.aliasesPt.find((alias) => alias.split(' ').length === 1) ?? item.name.pt;\n  }\n  return item.name.pt;\n};\n\ntype AddItemModalProps = {\n  isModalOpen: boolean;\n  onAddItem: (item: Record<string, boolean | string>) => void;\n  handleCancel: () => void;\n  item: ItemT;\n  rules: Dictionary<DailyDiagramRule>;\n  width?: number;\n};\n\nfunction AddItemModal({ isModalOpen, onAddItem, handleCancel, item, rules, width }: AddItemModalProps) {\n  const initialValues = useMemo(() => {\n    const name = chooseNameThatIsASingleWord(item);\n    return {\n      itemId: item.id,\n      name,\n      updatedAt: Date.now(),\n      ...Object.keys(rules).reduce((acc: Record<string, boolean | undefined>, ruleId) => {\n        if (verifiers[ruleId]) {\n          acc[ruleId] = verifiers[ruleId](name);\n        } else {\n          acc[ruleId] = undefined;\n        }\n\n        return acc;\n      }, {}),\n    };\n  }, [item, rules]);\n\n  const [form] = Form.useForm();\n  const values = Form.useWatch([], form);\n  const hasUndefinedValues = !values || Object.values(values ?? {}).some((value) => value === undefined);\n\n  // Automation: If name is changed, recalculates all rules\n  const nameWatch = Form.useWatch('name', form);\n  useEffect(() => {\n    console.log('Name changed', nameWatch);\n    // If initial state where name is still undefined, ignore\n    if (!nameWatch) return;\n\n    // If name changes, recalculate all rules\n    Object.keys(rules).forEach((ruleId) => {\n      if (verifiers[ruleId]) {\n        form.setFieldsValue({ [ruleId]: verifiers[ruleId](nameWatch) });\n      } else {\n        form.setFieldsValue({ [ruleId]: undefined });\n      }\n    });\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Male vs Female nouns\n  const rule1 = form.getFieldValue('ddr-1-pt');\n  useEffect(() => {\n    if (rule1 === true) {\n      form.setFieldsValue({ 'ddr-2-pt': false });\n    }\n  }, [rule1]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule2 = form.getFieldValue('ddr-2-pt');\n  useEffect(() => {\n    if (rule2 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n    }\n  }, [rule2]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: syllable count\n  const rule3 = form.getFieldValue('ddr-3-pt');\n  useEffect(() => {\n    if (rule3 === true) {\n      form.setFieldsValue({ 'ddr-4-pt': false });\n    }\n  }, [rule3]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule4 = form.getFieldValue('ddr-4-pt');\n  useEffect(() => {\n    if (rule4 === true) {\n      form.setFieldsValue({ 'ddr-3-pt': false });\n    }\n  }, [rule4]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: has hyphen\n  useEffect(() => {\n    const hasHyphen = nameWatch?.includes('-');\n    if (hasHyphen) {\n      form.setFieldsValue({ 'ddr-5-pt': true });\n    }\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFinish = (values: any) => {\n    console.log('Received values:', values);\n    onAddItem(values);\n  };\n\n  return (\n    <Modal\n      width={width}\n      title=\"Evaluate Random item\"\n      open={isModalOpen}\n      onOk={form.submit}\n      onCancel={handleCancel}\n      maskClosable={false}\n      okButtonProps={{ disabled: hasUndefinedValues, htmlType: 'submit', size: 'large' }}\n      okText=\"Add Item\"\n    >\n      <Form\n        form={form}\n        name={`new-item-${item.id}`}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        initialValues={initialValues}\n        layout=\"vertical\"\n        size=\"small\"\n        labelWrap\n      >\n        <div className=\"diagram-container\">\n          <div>\n            <Item id={item.id} width={50} />\n          </div>\n\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"itemId\" label=\"Item\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Form.Item name=\"updatedAt\" label=\"Updated At\">\n            <Input readOnly />\n          </Form.Item>\n\n          <div>\n            Options: {item.name.pt} {item.aliasesPt?.join(', ')}\n          </div>\n\n          <div>\n            <Affix offsetTop={50}>\n              <Flex justify=\"center\" align=\"center\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={hasUndefinedValues}>\n                  Add Item\n                </Button>\n              </Flex>\n            </Affix>\n          </div>\n        </div>\n        <div className=\"diagram-container\">\n          {Object.values(rules).map((rule) => {\n            if (rule.auto && verifiers[rule.id]) {\n              return (\n                <Form.Item key={rule.id} name={rule.id} label={rule.title} valuePropName=\"checked\">\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item key={rule.id} name={rule.id} label={rule.title}>\n                <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n                  <Radio value={true}>✅</Radio>\n                  <Radio value={false}>❌</Radio>\n                </Radio.Group>\n              </Form.Item>\n            );\n          })}\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n","import { Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddItemRules } from './AddItemRules';\n\ntype RulesByThingProps = {\n  data: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n};\n\nexport function RulesByThing({\n  data,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: RulesByThingProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>\n        Rules By Items (Added: {Object.keys(data).length} | {availableThings.length})\n      </Typography.Title>\n\n      <AddItemRules\n        addEntryToUpdate={addEntryToUpdate}\n        availableThings={availableThings}\n        rules={rules}\n        width={containerWidth}\n      />\n    </Space>\n  );\n}\n","import { Divider, Rate, Space, Table, TableColumnsType, Tag, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddItemRules } from './AddItemRules';\nimport { Item } from 'components/Sprites';\nimport { useMemo } from 'react';\n\ntype ThingsByRuleProps = {\n  data: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n};\n\nexport function ThingsByRule({\n  data,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: ThingsByRuleProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  const stats = useMemo(() => {\n    const quantities = Object.values(thingsByRules).map((things) => things.length);\n\n    return {\n      maxThings: Math.max(...quantities),\n      minThings: Math.min(...quantities),\n      averageThings: Math.round(\n        Object.values(thingsByRules).reduce((sum, things) => sum + things.length, 0) /\n          Object.keys(thingsByRules).length\n      ),\n    };\n  }, [thingsByRules]);\n\n  const columns: TableColumnsType<DailyDiagramRule> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => Number(a.id.split('-')[1]) - Number(b.id.split('-')[1]),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Rule',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a, b) => a.title.localeCompare(b.title),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Things',\n      dataIndex: 'id',\n      key: 'id',\n      render: (id: string) => (\n        <Space size=\"small\">\n          <Tag>{thingsByRules[id].length}</Tag>\n          <Space size=\"small\" wrap>\n            {thingsByRules[id].map((itemId) => (\n              <div key={itemId}>\n                <Item id={itemId} width={50} />\n                <Typography.Text code key={itemId}>\n                  {data[itemId].name}\n                </Typography.Text>\n              </div>\n            ))}\n          </Space>\n        </Space>\n      ),\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      sorter: (a, b) => a.level - b.level,\n      render: (level: number) => <Rate value={level} count={3} disabled />,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={4}>\n        Things By Rule (Added: {Object.keys(data).length} | {availableThings.length})\n      </Typography.Title>\n\n      <Space split={<Divider type=\"vertical\" />}>\n        <AddItemRules\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          width={containerWidth}\n        />\n\n        <Typography.Text strong>\n          Average Things: <Tag>{stats.averageThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Max Things: <Tag>{stats.maxThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Min Things: <Tag>{stats.minThings}</Tag>\n        </Typography.Text>\n      </Space>\n\n      <Table dataSource={Object.values(rules)} columns={columns} />\n    </Space>\n  );\n}\n","import { Typography } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\n\nimport { RulesByThing } from './RulesByThing';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ThingsByRule } from './ThingsByRule';\n\nexport function ItemsDiagramSetsContent({\n  data,\n  addEntryToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const tdrItemsQuery = useTDResource<ItemT>('items');\n  const tdrDiagramRulesQuery = useTDResource<DailyDiagramRule>('daily-diagram-rules');\n\n  const availableThings = useMemo(() => {\n    return Object.values(tdrItemsQuery.data ?? {}).filter((item) => {\n      if (data && data[item.id] !== undefined) return false;\n      if (item.decks?.includes('thing')) return true;\n      const isNameSingleWord = item.name.pt.split(' ').length === 1;\n\n      if (item.decks?.includes('alien') && isNameSingleWord) return true;\n      if (item.decks?.includes('manufactured') && isNameSingleWord) return true;\n\n      return false;\n    });\n  }, [data, tdrItemsQuery.data]);\n\n  const rules = useMemo(() => {\n    return tdrDiagramRulesQuery.data ?? {};\n  }, [tdrDiagramRulesQuery.data]);\n\n  const thingsByRules = useMemo(() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    Object.values(data).forEach((entry) => {\n      entry.rules.forEach((ruleId) => {\n        dict[ruleId].push(entry.itemId);\n      });\n    });\n    return dict;\n  }, [data, rules]);\n\n  const { is, queryParams } = useQueryParams();\n\n  if (tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading) {\n    return <Typography.Text>Loading...</Typography.Text>;\n  }\n\n  return (\n    <DataLoadingWrapper\n      isLoading={tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading}\n      hasResponseData={tdrItemsQuery.hasResponseData || tdrDiagramRulesQuery.hasResponseData}\n    >\n      {(is('display', 'rule') || !queryParams.has('display')) && (\n        <ThingsByRule\n          data={data}\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          thingsByRules={thingsByRules}\n        />\n      )}\n\n      {is('display', 'thing') && (\n        <RulesByThing\n          data={data}\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          thingsByRules={thingsByRules}\n        />\n      )}\n    </DataLoadingWrapper>\n  );\n}\n","import { Flex, Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsDiagramFilters } from 'components/Items/Diagram/ItemsDiagramFilters';\nimport { ItemsDiagramSetsContent } from 'components/Items/Diagram/ItemsDiagramSetsContent';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyDiagramItem } from 'types';\n\nexport function ItemsDiagramSets() {\n  const diagramData = useResourceFirebaseData<DailyDiagramItem>({\n    tdrResourceName: 'daily-diagram-items',\n    firebaseDataCollectionName: 'diagramItems',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Quartet Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsDiagramFilters {...diagramData} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={diagramData.isLoading}\n            error={diagramData.error}\n            // hasResponseData={!isEmpty(diagramData.data)}\n            hasResponseData={true}\n          >\n            <Flex vertical gap={24}>\n              <ItemsDiagramSetsContent {...diagramData} />\n            </Flex>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiagramSets;\n"],"names":["SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","onClick","disabled","loading","danger","block","getDocQueryFunction","path","docId","async","getCurrentDateTime","docRef","doc","firestore","getDoc","data","useGetFirebaseDoc","options","useQuery","queryKey","queryFn","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","value","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","Object","entries","forEach","removeParam","is","get","has","queryParams","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","App","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","success","refetchQueries","onError","error","description","useMemo","isLoading","isPending","cloneDeep","isEmpty","firebaseData","save","mutate","serializeFirebaseData","addEntryToUpdate","id","item","prev","entriesToUpdate","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","hasResponseData","useTDResourceNonCollection","updateQueryFunction","updateDoc","useMutation","mutationFn","ItemsDiagramFilters","vertical","gap","JSON","stringify","DownloadButton","prepareFileForDownload","quartets","sortJsonKeys","fileName","label","onChange","mode","display","page","title","ClusterOutlined","TableOutlined","LETTERS","CONSONANTS","VOWELS","accents","cleanupWord","memoize","word","stringRemoveAccents","toLowerCase","countLetters","length","countVowels","split","filter","letter","includes","countConsonants","verifiers","indexOf","vowels","Set","firstLetter","slice","some","index","test","countAccents","consonants","AddItemRules","availableThings","rules","width","activeThing","setActiveThing","onActivateThing","sample","AddItemModal","isModalOpen","onAddItem","newItem","name","itemId","updatedAt","itemRules","itemEntry","keys","wait","handleCancel","initialValues","pt","aliasesPt","find","alias","chooseNameThatIsASingleWord","reduce","acc","ruleId","form","Form","values","hasUndefinedValues","nameWatch","setFieldsValue","rule1","getFieldValue","rule2","rule3","rule4","open","onOk","submit","onCancel","maskClosable","okButtonProps","htmlType","okText","onFinish","autoComplete","layout","labelWrap","className","readOnly","join","offsetTop","justify","align","map","rule","auto","valuePropName","checkedChildren","unCheckedChildren","optionType","buttonStyle","RulesByThing","thingsByRules","ref","containerWidth","useMeasure","direction","level","ThingsByRule","stats","quantities","things","maxThings","Math","max","minThings","min","averageThings","round","sum","columns","dataIndex","sorter","a","b","Number","render","localeCompare","wrap","code","count","strong","dataSource","ItemsDiagramSetsContent","tdrItemsQuery","tdrDiagramRulesQuery","decks","isNameSingleWord","dict","entry","push","DataLoadingWrapper","ItemsDiagramSets","diagramData","subtitle","hasSider","PageSider"],"sourceRoot":""}