{"version":3,"file":"static/js/Resource.8ef3d248.chunk.js","mappings":"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","sources":["components/Common/LanguageFlag.tsx","components/CopyToClipboardButton.tsx","components/SearchDuplicates.tsx","hooks/useCopyToClipboardFunction.ts","components/ResourceCards/Entry.tsx","components/ResourceCards/CardEntry.tsx","components/Resource/ResourceCards.tsx","components/Resource/ResourceDisplayMode.tsx","components/Resource/ResourceJson.tsx","components/Resource/ResourceTable.tsx","pages/Resource.tsx","utils/index.ts"],"sourcesContent":["function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Button, type ButtonProps } from 'antd';\n\nimport { CopyOutlined } from '@ant-design/icons';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype CopyToClipboardButtonProps = {\n  content: string;\n} & ButtonProps;\n\nexport function CopyToClipboardButton({\n  content,\n  shape,\n  icon,\n  size,\n  ...buttonProps\n}: CopyToClipboardButtonProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  return (\n    <Button\n      shape={shape ?? 'circle'}\n      icon={icon ?? <CopyOutlined />}\n      size={size ?? 'small'}\n      onClick={() => copyToClipboard(content)}\n      {...buttonProps}\n    />\n  );\n}\n","import { Input } from 'antd';\nimport { useState } from 'react';\nimport { findSimilar, stringRemoveAccents } from '../utils';\nimport { SEARCH_THRESHOLD } from '../utils/constants';\nimport { SectionTitle } from './Common/SectionTitle';\n\ntype SearchDuplicatesProps = {\n  response: ObjectDictionary;\n  property: string;\n};\n\nexport function SearchDuplicates({ response, property }: SearchDuplicatesProps) {\n  const [searchResults, setSearchResults] = useState({});\n\n  const onSearchSimilar = (e: any) => {\n    const { value = '' } = e.target;\n    const str = stringRemoveAccents(value.trim().toLowerCase());\n\n    if (str && str.length >= SEARCH_THRESHOLD) {\n      setSearchResults(findSimilar(str, response, property));\n    } else {\n      setSearchResults({});\n    }\n  };\n\n  return (\n    <div className=\"parser-flex-column\">\n      <SectionTitle>Search Similar</SectionTitle>\n      <Input type=\"text\" onChange={onSearchSimilar} placeholder=\"Type here\" />\n      <Input.TextArea\n        name=\"search-results\"\n        id=\"\"\n        cols={10}\n        rows={10}\n        readOnly\n        value={JSON.stringify(searchResults, null, 4)}\n      />\n    </div>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { Flex, Tag } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport type { ReactNode } from 'react';\n\nimport { FireFilled } from '@ant-design/icons';\n\ntype LabelProps = {\n  children: ReactNode;\n};\n\nexport function Label({ children }: LabelProps) {\n  return <Tag>{children}</Tag>;\n}\n\nexport function Value({ children }: LabelProps) {\n  return <span>{children}</span>;\n}\n\ntype EntryProps = {\n  label: string;\n  children: ReactNode;\n};\n\nexport function Entry({ label, children }: EntryProps) {\n  return (\n    <Flex>\n      <div>\n        <Label>{label}</Label>\n      </div>\n      <Value>{children}</Value>\n    </Flex>\n  );\n}\n\nexport function EntryList({ label, children }: EntryProps) {\n  return (\n    <Flex>\n      <div>\n        <Label>{label}</Label>\n      </div>\n      <ul className=\"resource-card__list\">{children}</ul>\n    </Flex>\n  );\n}\n\nexport function EntryListItem({ children }: LabelProps) {\n  return <li>{children}</li>;\n}\n\ntype EntryDualLanguageProps = {\n  label?: string;\n  children: DualLanguageValue;\n};\n\nexport function EntryDualLanguage({ label, children }: EntryDualLanguageProps) {\n  const value = (\n    <>\n      <div>\n        <LanguageFlag language=\"en\" width=\"1em\" /> {children.en}\n      </div>\n\n      <div>\n        <LanguageFlag language=\"pt\" width=\"1em\" /> {children.pt}\n      </div>\n    </>\n  );\n\n  if (label) {\n    return (\n      <Flex>\n        <div>\n          <Label>{label}</Label>\n        </div>\n        <Value>{value}</Value>\n      </Flex>\n    );\n  }\n\n  return <Value>{value}</Value>;\n}\n\ntype EntryLanguageProps = {\n  label?: string;\n  children?: string;\n};\n\nexport function EntryLanguage({ label = 'language', children }: EntryLanguageProps) {\n  if (!children) return <></>;\n\n  return (\n    <Flex>\n      <div>\n        <Label>{label}</Label>\n      </div>\n      <Value>\n        <LanguageFlag language={children as Language} width=\"1em\" />\n      </Value>\n    </Flex>\n  );\n}\n\ntype EntryNSFWProps = {\n  value?: boolean;\n};\n\nexport function EntryNSFW({ value }: EntryNSFWProps) {\n  if (!value) return <></>;\n\n  return (\n    <Entry label=\"nsfw\">\n      <FireFilled style={{ color: 'hotpink' }} />\n    </Entry>\n  );\n}\n\ntype EntryListTextProps = {\n  label: string;\n  children?: string[];\n};\n\nexport function EntryListText({ label, children }: EntryListTextProps) {\n  if (!children) return <></>;\n\n  return <Entry label={label}>{children.join(', ')}</Entry>;\n}\n","import { Card } from 'antd';\nimport { Fragment, useMemo } from 'react';\nimport { Entry, EntryDualLanguage, EntryLanguage, EntryList, EntryListItem, EntryNSFW } from './Entry';\n\ntype CardEntryProps = {\n  entry: PlainObject & { id: string };\n  kind?: string;\n};\n\nexport function CardEntry({ entry, kind }: CardEntryProps) {\n  const keys = Object.keys(entry).filter((key) => key !== 'id');\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  const entries = useMemo(() => {\n    return keys.map((key) => {\n      // Ignore id\n      if (key === 'id') return <></>;\n\n      const value = entry[key];\n\n      // Ignore nullish values\n      if (value === null || value === undefined) return <></>;\n\n      // Prioritize nsfw\n      if (key === 'nsfw') {\n        return <EntryNSFW value={value} />;\n      }\n\n      // Render dual value\n      if (isDualLanguage(value)) {\n        return <EntryDualLanguage label={key}>{value}</EntryDualLanguage>;\n      }\n\n      // Render language\n      if (isLanguage(value)) {\n        return <EntryLanguage label={key}>{value}</EntryLanguage>;\n      }\n\n      // Render strings\n      if (isPrimitive(value)) {\n        return <Entry label={key}>{value}</Entry>;\n      }\n\n      if (isArrayOfStrings(value)) {\n        return (\n          <EntryList label={key}>\n            {value.map((text: string, index: number) => (\n              <EntryListItem key={`${entry.id}-${text}-${index}`}>{text}</EntryListItem>\n            ))}\n          </EntryList>\n        );\n      }\n\n      if (isArrayOfDualLanguage(value)) {\n        return (\n          <EntryList label={key}>\n            {Object.values(entry.values).map((text, index) => (\n              <EntryListItem key={`${entry.id}-${text}-${index}`}>\n                <EntryDualLanguage>{text as DualLanguageValue}</EntryDualLanguage>\n              </EntryListItem>\n            ))}\n          </EntryList>\n        );\n      }\n\n      console.log('Skip', key, value);\n      return <Fragment key={key}></Fragment>;\n    });\n  }, [kind]);\n\n  return (\n    <Card title={entry.id} className=\"resource-card\" size=\"small\">\n      {entries}\n    </Card>\n  );\n}\n\nconst isDualLanguage = (value: any) => {\n  return typeof value === 'object' && value.pt && value.en;\n};\n\nconst isPrimitive = (value: any) => {\n  return typeof value === 'string' || typeof value === 'number';\n};\n\nconst isArray = (value: any) => {\n  return Array.isArray(value);\n};\n\nconst isArrayOfStrings = (value: any) => {\n  return isArray(value) && typeof value[0] === 'string';\n};\n\nconst isLanguage = (value: any) => {\n  return value === 'pt' || value === 'en';\n};\n\nconst isArrayOfDualLanguage = (value: any) => {\n  return isArray(value) && isDualLanguage(value[0]);\n};\n","import { Col, Row, Typography } from 'antd';\nimport { CardEntry } from 'components/ResourceCards';\n\ntype ResourceCardsProps = {\n  response: any;\n  resourceName: string | null;\n};\n\nexport function ResourceCards({ response, resourceName }: ResourceCardsProps) {\n  const list: any[] = Object.values(response);\n\n  return (\n    <>\n      <Typography.Title level={2}>Cards ({list.length})</Typography.Title>\n\n      <Row gutter={[16, 16]}>\n        {list.map((entry) => {\n          return (\n            <Col xs={6} sm={6} md={4} lg={8} xl={6} key={entry.id}>\n              <CardEntry entry={entry} kind={resourceName ?? ''} />\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n}\n","import { AppstoreOutlined, FileTextOutlined, TableOutlined } from '@ant-design/icons';\nimport { FilterSegments } from 'components/Common';\n\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\nexport function ResourceDisplayMode() {\n  const { queryParams, addParam } = useQueryParams();\n\n  return (\n    <SiderContent>\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'json'}\n        onChange={(mode) => addParam('display', mode)}\n        options={[\n          {\n            title: 'JSON',\n            icon: <FileTextOutlined />,\n            value: 'json',\n          },\n          {\n            title: 'Table',\n            icon: <TableOutlined />,\n            value: 'table',\n          },\n          {\n            title: 'Cards',\n            icon: <AppstoreOutlined />,\n            value: 'cards',\n          },\n        ]}\n      />\n    </SiderContent>\n  );\n}\n","import { Col, Input, Row, Typography } from 'antd';\nimport { CopyToClipboardButton } from 'components/CopyToClipboardButton';\n\nimport { useMemo } from 'react';\n\nimport { SearchDuplicates } from '../SearchDuplicates';\n\nimport { SEARCH_PROPERTY } from '../../utils/constants';\n\ntype ResourceJsonProps = {\n  response: any;\n  resourceName: string | null;\n};\n\nexport function ResourceJson({ response, resourceName }: ResourceJsonProps) {\n  const property = resourceName ? SEARCH_PROPERTY[resourceName] : 'text';\n\n  const jsonString = useMemo(() => JSON.stringify(response, null, 4), [response]);\n\n  return (\n    <>\n      <Typography.Title level={2}>\n        JSON <CopyToClipboardButton content={jsonString} />\n      </Typography.Title>\n\n      <Row gutter={16}>\n        <Col span={16}>\n          <Input.TextArea name=\"output\" id=\"\" cols={15} rows={30} readOnly value={jsonString} />\n        </Col>\n        <Col span={8}>\n          <SearchDuplicates response={response} property={property} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Col, Row, Table, Typography } from 'antd';\nimport { CopyToClipboardButton } from 'components/CopyToClipboardButton';\n\nimport { useMemo } from 'react';\n\ntype ResourceCardsProps = {\n  response: any;\n  resourceName: string | null;\n};\n\nexport function ResourceTable({ response }: ResourceCardsProps) {\n  const list: any[] = Object.values(response);\n\n  const columns = useMemo(() => {\n    const keys: Record<string, boolean> = {};\n\n    list.forEach((entry) => {\n      Object.keys(entry).forEach((key) => {\n        if (keys[key] === undefined) {\n          keys[key] = true;\n        }\n      });\n    });\n\n    return Object.keys(keys).map((key) => ({\n      title: key,\n      dataIndex: key,\n      key,\n      render: (v: any) => {\n        const content = typeof v === 'string' ? v : JSON.stringify(v, null, 2);\n        return (\n          <span>\n            {content} {!!content.trim() && <CopyToClipboardButton content={content} />}\n          </span>\n        );\n      },\n    }));\n  }, [list]);\n\n  return (\n    <>\n      <Typography.Title level={2}>Table ({list.length})</Typography.Title>\n\n      <Row gutter={16}>\n        <Col span={24}>\n          <Table columns={columns} dataSource={list} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Layout } from 'antd';\nimport { ResponseState } from 'components/Common';\nimport { PageLayout } from 'components/Layout';\nimport { ResourceCards } from 'components/Resource/ResourceCards';\nimport { ResourceDisplayMode } from 'components/Resource/ResourceDisplayMode';\nimport { ResourceJson } from 'components/Resource/ResourceJson';\nimport { ResourceTable } from 'components/Resource/ResourceTable';\n\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { ResourceSelectionFilters } from 'components/Resource/ResourceSelectionFilters';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { useResourceState } from 'hooks/useResourceState';\nimport { RESOURCE_NAMES } from 'utils/constants';\n\nconst resourceNames = Object.values(RESOURCE_NAMES);\n\nfunction Resource() {\n  const {\n    resourceName = '',\n    language = '',\n    isLoading,\n    enabled,\n    error,\n    hasResponseData,\n    response,\n  } = useResourceState(resourceNames);\n\n  const { queryParams } = useQueryParams();\n  const display = queryParams.get('display') ?? 'json';\n\n  return (\n    <PageLayout\n      title=\"Resource\"\n      subtitle={resourceName && language ? `Data for ${resourceName}-${language}` : ''}\n    >\n      <Layout hasSider>\n        <PageSider>\n          <ResponseState\n            hasResponseData={hasResponseData}\n            isLoading={isLoading}\n            error={error}\n            isIdle={!enabled}\n          />\n          <ResourceSelectionFilters resourceNames={resourceNames} />\n          <ResourceDisplayMode />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={isLoading}\n            error={error}\n            hasResponseData={hasResponseData}\n            isIdle={!enabled}\n          >\n            {display === 'json' && (\n              <ResourceJson response={response ?? {}} resourceName={resourceName ?? ''} />\n            )}\n\n            {display === 'table' && (\n              <ResourceTable response={response ?? {}} resourceName={resourceName ?? ''} />\n            )}\n\n            {display === 'cards' && (\n              <ResourceCards response={response ?? {}} resourceName={resourceName ?? ''} />\n            )}\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default Resource;\n","import { chain, isNull, isObject, isUndefined, orderBy, set, transform } from 'lodash';\nimport stringSimilarity from 'string-similarity';\nimport { SEARCH_THRESHOLD } from './constants';\n\n/**\n * Removes accents from a given string.\n *\n * This function normalizes the input string to its decomposed form (NFD)\n * and then removes any combining diacritical marks (accents).\n *\n * @param str - The input string from which to remove accents.\n * @returns The input string with accents removed.\n */\nexport function stringRemoveAccents(str: string) {\n  // biome-ignore lint/suspicious/noMisleadingCharacterClass: the regex is used to remove accents\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n * Checks for duplicate entries in the provided data based on a specified property.\n *\n * @param data - The data to check for duplicates.\n * @param [property='text'] - The property to check for duplicates. Defaults to 'text'.\n * @returns An object containing the duplicates found. The keys are the normalized property values, and the values are arrays of IDs of the duplicate entries.\n *\n * @throws {Error} If the specified property does not exist in an entry.\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n * Finds and returns similar entries from a given data object based on a provided string.\n *\n * @param str - The string to compare against the data entries.\n * @param data - The data object containing entries to search through.\n * @param property - The property of the data entries to compare the string with. Defaults to 'text'.\n * @returns An object containing entries that are similar to the provided string.\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const val = typeof entry[property] === 'string' ? entry[property] : JSON.stringify(entry[property]);\n    const entryStr = stringRemoveAccents(val.toLowerCase());\n\n    if (entryStr.includes(value) || stringSimilarity.compareTwoStrings(str, entryStr) > 0.5) {\n      similar[entry.id] = val;\n    }\n  });\n\n  return similar;\n};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n\n/**\n * Remove duplicated elements from a list\n * @param arr\n * @returns\n */\nexport const removeDuplicates = <T>(arr: T[]): T[] => {\n  return Array.from(new Set(arr));\n};\n\n/**\n * Checks if an array has any duplicate elements.\n * @param arr - The array to check for duplicates.\n * @returns A boolean indicating whether the array has duplicates.\n * @template T - The type of elements in the array.\n */\nexport const hasDuplicates = <T>(arr: T[]): boolean => {\n  return new Set(arr).size !== arr.length;\n};\n\n/**\n * Converts a object into a downloadable file and prompts download\n * @param obj\n * @param filename\n */\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\n/**\n * Sorts the keys of a JSON object based on a predefined order.\n * The keys 'id', 'name', 'title', and 'type' will be placed first in the sorted object,\n * followed by the remaining keys in alphabetical order.\n *\n * @param library - The JSON object to sort.\n * @returns The sorted JSON object.\n */\nexport const sortJsonKeys = (library: PlainObject, keyOrder: string[] = []): PlainObject => {\n  function sortKeys(obj: any): any {\n    if (isObject(obj) && !Array.isArray(obj)) {\n      const sortedKeys = Object.keys(obj)\n        .filter((key) => ['id', 'name', 'title', 'type'].includes(key))\n        .filter((key) => keyOrder.includes(key))\n        .concat(\n          Object.keys(obj)\n            .filter((key) => !['id', 'name', 'title', 'type'].includes(key))\n            .sort(),\n        );\n\n      return chain(obj)\n        .toPairs()\n        .sortBy(([key, _]) => sortedKeys.indexOf(key))\n        .map(([key, value]) => [key, sortKeys(value)])\n        .fromPairs()\n        .value();\n    }\n    return obj;\n  }\n\n  return sortKeys(library);\n};\n\n/**\n * Recursively removes `undefined` values from an object or array.\n * @template T - The type of the object to clean.\n * @param {T} obj - The object to clean.\n * @returns {T} - The cleaned object with no `undefined` values.\n */\nexport const deepCleanObject = <T = unknown>(obj: T): T => {\n  if (!isObject(obj) || isNull(obj)) {\n    return obj;\n  }\n\n  // If the object is an array, filter out undefined values\n  if (Array.isArray(obj)) {\n    return obj.map((item) => deepCleanObject(item)).filter((item) => !isUndefined(item)) as unknown as T;\n  }\n\n  // Recursively process each key for objects\n  return transform(\n    obj,\n    (result, value, key) => {\n      if (isObject(value)) {\n        value = deepCleanObject(value);\n      }\n\n      // Only assign if the value is not undefined\n      if (!isUndefined(value)) {\n        set(result as Partial<T>, key, value);\n      }\n    },\n    {} as T,\n  );\n};\n\n/**\n * Deserializes the data received from Firebase into a dictionary of specified type.\n *\n * @template TData - The type of data to deserialize.\n * @param data - The data to be deserialized.\n * @returns A dictionary of deserialized data.\n */\nexport const deserializeFirebaseData = <TData, TParsedData = TData>(\n  data: Dictionary<string>,\n  entryDeserializer?: (e: TData) => TParsedData,\n): Dictionary<TParsedData> => {\n  return Object.keys(data).reduce((acc: Dictionary<TParsedData>, key) => {\n    acc[key] = entryDeserializer ? entryDeserializer(JSON.parse(data[key])) : JSON.parse(data[key]);\n    return acc;\n  }, {});\n};\n\n/**\n * Serializes the data in a dictionary to a dictionary of strings.\n *\n * @param data - The dictionary containing the data to be serialized.\n * @returns A new dictionary with the same keys as the input dictionary, but with the values serialized as strings.\n */\nexport const serializeFirebaseData = <TData, TParsedData = TData>(\n  data: Dictionary<TData>,\n  entrySerializer?: (e: TData) => TParsedData,\n): Dictionary<string> => {\n  return Object.keys(data).reduce((acc: Dictionary<string>, key) => {\n    acc[key] = JSON.stringify(entrySerializer ? entrySerializer(data[key]) : data[key]);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentDateTime = (): string => {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const day = String(now.getDate()).padStart(2, '0');\n  const hours = String(now.getHours()).padStart(2, '0');\n  const minutes = String(now.getMinutes()).padStart(2, '0');\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\n\nexport const sortItemsIds = (itemsIds: string[]) => {\n  return orderBy(itemsIds, (id) => Number(id));\n};\n\n/**\n * Pauses the execution for a specified duration.\n * @param duration - The duration to wait in milliseconds. Default is 1000ms.\n */\nexport const wait = async (duration = 1000) => {\n  await new Promise((resolve) => setTimeout(resolve, duration));\n};\n"],"names":["BrazilFlag","props","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","CopyToClipboardButton","content","shape","icon","size","buttonProps","copyToClipboard","useCopyToClipboardFunction","onClick","SearchDuplicates","response","property","searchResults","setSearchResults","useState","className","type","onChange","e","value","target","str","stringRemoveAccents","trim","toLowerCase","length","SEARCH_THRESHOLD","findSimilar","placeholder","name","id","cols","rows","readOnly","JSON","stringify","state","useCopyToClipboard","message","App","useEffect","info","truncate","omission","success","Label","children","Value","Entry","label","EntryList","EntryListItem","EntryDualLanguage","width","en","pt","EntryLanguage","EntryNSFW","FireFilled","style","color","CardEntry","entry","kind","keys","Object","filter","key","entries","useMemo","map","undefined","isDualLanguage","isLanguage","isPrimitive","isArrayOfStrings","text","index","isArrayOfDualLanguage","values","console","log","Fragment","title","isArray","Array","ResourceCards","resourceName","list","level","gutter","xs","sm","md","lg","xl","ResourceDisplayMode","queryParams","addParam","useQueryParams","get","mode","options","FileTextOutlined","TableOutlined","AppstoreOutlined","ResourceJson","SEARCH_PROPERTY","jsonString","span","ResourceTable","columns","forEach","dataIndex","render","v","dataSource","resourceNames","RESOURCE_NAMES","isLoading","enabled","error","hasResponseData","useResourceState","display","subtitle","hasSider","PageSider","isIdle","ResourceSelectionFilters","DataLoadingWrapper","normalize","replace","checkForDuplicates","data","unique","duplicates","entryKey","push","similar","val","entryStr","includes","stringSimilarity","makeArray","startAt","i","removeDuplicates","arr","from","Set","downloadObjectAsFile","obj","filename","blob","Blob","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","sortJsonKeys","library","keyOrder","sortKeys","isObject","sortedKeys","concat","sort","chain","toPairs","sortBy","_","indexOf","fromPairs","deepCleanObject","isNull","item","isUndefined","transform","result","set","deserializeFirebaseData","entryDeserializer","reduce","acc","parse","serializeFirebaseData","entrySerializer","getCurrentDateTime","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","sortItemsIds","itemsIds","orderBy","Number","wait","async","duration","Promise","resolve","setTimeout"],"sourceRoot":""}