{"version":3,"file":"static/js/ItemsGroups.5461c973.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/LanguageFlag.tsx","components/Items/ItemBuildingBlocks.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useGetFirebaseDoc.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useTDResource.ts","hooks/useUpdateFirebaseDoc.tsx","components/Items/ItemGroupsCard.tsx","components/Items/ItemsGroupsContent.tsx","components/Items/ItemsGroupsFilters.tsx","pages/Items/ItemsGroups.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Button, Input } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport { Item } from 'components/Sprites';\nimport { Item as ItemT } from 'types';\n\nimport { FireFilled, IdcardOutlined } from '@ant-design/icons';\nimport { useSearchParams } from 'react-router-dom';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype ItemBlockProps = {\n  item: ItemT;\n};\n\ntype ItemBlocksAdditionalProps = {\n  className?: string;\n  width: number;\n  language: 'en' | 'pt';\n  to: string;\n};\n\nexport function ItemSprite({\n  item,\n  width,\n  className,\n}: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'width' | 'className'>) {\n  return (\n    <Item id={item.id} width={width} title={`${item.name.en} | ${item.name.pt}`} className={className} />\n  );\n}\n\nexport function ItemId({ item }: ItemBlockProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n  return (\n    <span>\n      <Input\n        prefix={item.nsfw ? <FireFilled style={{ color: 'hotPink' }} /> : <IdcardOutlined />}\n        placeholder=\"Id\"\n        variant=\"borderless\"\n        size=\"small\"\n        value={item.id}\n        readOnly\n        style={{ width: '8ch' }}\n        onClick={() => copyToClipboard(item.id)}\n      />\n    </span>\n  );\n}\n\nexport function ItemName({ item, language }: ItemBlockProps & Pick<ItemBlocksAdditionalProps, 'language'>) {\n  return (\n    <Input\n      prefix={<LanguageFlag language={language} width=\"1em\" />}\n      placeholder={`Name in ${language.toUpperCase()}`}\n      variant=\"borderless\"\n      size=\"small\"\n      value={item.name[language]}\n      readOnly\n    />\n  );\n}\n\nexport function ItemNsfw({ item }: ItemBlockProps) {\n  return item.nsfw ? <FireFilled style={{ color: 'hotpink' }} /> : <></>;\n}\n\nexport function ItemGoTo({ item }: ItemBlockProps) {\n  const [, setSearchParams] = useSearchParams();\n  const onGoTo = () => {\n    setSearchParams({ itemId: item.id, view: 'classifier' });\n  };\n\n  return (\n    <span>\n      <Button size=\"small\" shape=\"round\" onClick={onGoTo}>\n        Go to\n      </Button>\n    </span>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport { getCurrentDateTime } from 'utils';\n\nexport function getDocQueryFunction<TQueryFnData>(path: string, docId: string) {\n  return async () => {\n    console.log(`%cQuerying ${path}/${docId} from firebase: ${getCurrentDateTime()}`, 'color: #f0f');\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as TQueryFnData;\n  };\n}\n\nexport function useGetFirebaseDoc<TQueryFnData, TData = TQueryFnData>(\n  path: string,\n  docId: string,\n  options?: Omit<UseQueryOptions<any, Error, TData, QueryKey>, 'queryKey'>\n) {\n  return useQuery<TQueryFnData, Error, TData, QueryKey>({\n    queryKey: ['firebase', path, docId],\n    queryFn: getDocQueryFunction<TQueryFnData>(path, docId),\n    ...options,\n  });\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  const queryParams = searchParams\n    .toString()\n    .split('&')\n    .reduce((qp: Record<string, string>, entry) => {\n      const [key, value] = entry.split('=');\n      if (key && value !== undefined) {\n        qp[key] = value;\n      }\n      return qp;\n    }, {});\n\n  return {\n    addParam,\n    removeParam,\n    queryParams,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'data',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('data', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'data', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (tdrQuery.isLoading || firebaseQuery.isLoading || mutation.isPending) return {};\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isLoading,\n    firebaseQuery.isLoading,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { isEmpty } from 'lodash';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\n\nexport function useTDResource<TData>(resourceName: string, enabled = true) {\n  const { getUrl } = useBaseUrl('tdr');\n\n  const query = useQuery<Dictionary<TData>, ResponseError>({\n    queryKey: [resourceName],\n    queryFn: async () => {\n      const res = await fetch(getUrl(`${resourceName}.json`));\n      return (await res.json()) as Dictionary<TData>;\n    },\n    enabled,\n  });\n  const hasResponseData = !isEmpty(query.data);\n\n  return {\n    ...query,\n    data: query.data ?? {},\n    hasResponseData,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { Card, Select, Space, Typography } from 'antd';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { Item as ItemT } from 'types';\nimport { ItemName, ItemNsfw, ItemSprite } from './ItemBuildingBlocks';\n\ntype ItemGroupsCardProps = {\n  item: ItemT;\n  itemGroups?: string[];\n  groupsTypeahead: { label: string; value: string }[];\n  onAddToGroup: (groupId: string, itemId: string) => void;\n};\n\nexport function ItemGroupsCard({ item, itemGroups, groupsTypeahead, onAddToGroup }: ItemGroupsCardProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  // const onInputKeyDown = (event: any) => {\n  //   if (event.key === 'Enter' && event.target.value) {\n  //     console.log('PRESSED ENTER', event.target.value.trim());\n  //     onAddToGroup(event.target.value.trim(), item.id);\n  //   }\n  // };\n\n  return (\n    <Card\n      title={\n        <>\n          <Typography.Text onClick={() => copyToClipboard(item.id)}>{item.id}</Typography.Text>\n          <ItemNsfw item={item} />\n        </>\n      }\n      style={{ maxWidth: 250 }}\n    >\n      <ItemSprite item={item} width={75} />\n      <Space size=\"small\" direction=\"vertical\" className=\"my-4\">\n        <ItemName item={item} language=\"en\" />\n        <ItemName item={item} language=\"pt\" />\n\n        <Select\n          mode=\"multiple\"\n          style={{ width: '100%' }}\n          placeholder=\"Select a category\"\n          defaultValue={itemGroups}\n          options={groupsTypeahead}\n          showSearch\n          size=\"small\"\n          key={String(itemGroups)}\n          onSelect={(group) => onAddToGroup(group, item.id)}\n          // onInputKeyDown={onInputKeyDown}\n        />\n      </Space>\n    </Card>\n  );\n}\n","import { Col, Flex, Pagination, Row, Table, TableProps, Typography } from 'antd';\nimport { Item } from 'components/Sprites';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { useMemo } from 'react';\nimport { Item as ItemT, ItemGroup } from 'types';\nimport { removeDuplicates } from 'utils';\nimport { ItemGroupsCard } from './ItemGroupsCard';\nimport { orderBy } from 'lodash';\n\nexport function ItemsGroupsContent({ data, addEntryToUpdate }: UseResourceFirebaseDataReturnType<ItemGroup>) {\n  const { queryParams } = useQueryParams();\n  const itemsTypeaheadQuery = useTDResource<ItemT>('items');\n\n  const grousByItem = useMemo(() => {\n    return Object.values(data ?? []).reduce((acc: Record<string, string[]>, group) => {\n      if (!group.itemsIds) {\n        console.warn('Group without items', group);\n      }\n      group.itemsIds.forEach((itemId) => {\n        if (!acc[itemId]) {\n          acc[itemId] = [];\n        }\n        acc[itemId].push(group.id);\n      });\n\n      return acc;\n    }, {});\n  }, [data]);\n\n  const groupsTypeahead = useMemo(\n    () =>\n      orderBy(\n        Object.keys(data).map((id) => ({ label: id, value: id })),\n        'label'\n      ),\n    [data]\n  );\n\n  const onAddToGroup = (groupId: string, itemId: string) => {\n    // If group exist, add item to group\n    const group = data[groupId] ?? { itemIds: [] };\n\n    addEntryToUpdate(groupId, {\n      id: groupId,\n      itemsIds: removeDuplicates([...group.itemsIds, itemId]),\n    });\n  };\n\n  return (\n    <>\n      {queryParams.display === 'group' && <ItemsGroupsByGroupTable data={data} />}\n      {queryParams.display === 'item' && (\n        <ItemsGroupsByItemTable\n          items={itemsTypeaheadQuery.data}\n          grousByItem={grousByItem}\n          groupsTypeahead={groupsTypeahead}\n          onAddToGroup={onAddToGroup}\n        />\n      )}\n    </>\n  );\n}\n\nfunction ItemsGroupsByGroupTable({ data }: Pick<UseResourceFirebaseDataReturnType<ItemGroup>, 'data'>) {\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  const columns: TableProps<ItemGroup>['columns'] = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id',\n      render: (id) => <span>{id}</span>,\n    },\n    {\n      title: 'Items',\n      dataIndex: 'itemsIds',\n      key: 'itemsIds',\n      render: (itemsIds: string[], record) => (\n        <Flex gap={6} wrap=\"wrap\" key={`items-${record.id}`}>\n          {itemsIds.map((itemId) => (\n            <Flex key={`${record.id}-${itemId}`} gap={2} vertical>\n              <Item id={itemId} width={60} />\n              <Flex justify=\"center\">\n                <Typography.Text onClick={() => copyToClipboard(itemId)}>{itemId}</Typography.Text>\n              </Flex>\n            </Flex>\n          ))}\n        </Flex>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'itemsIds',\n      key: 'count',\n      render: (itemsIds: string[]) => removeDuplicates(itemsIds).filter(Boolean).length,\n    },\n  ];\n\n  return <Table columns={columns} dataSource={Object.values(data)} className=\"my-4\" />;\n}\n\ntype ItemsGroupsByItemTableProps = {\n  items: Dictionary<ItemT>;\n  grousByItem: Record<string, string[]>;\n  groupsTypeahead: { value: string; label: string }[];\n  onAddToGroup: (groupId: string, itemId: string) => void;\n};\n\nfunction ItemsGroupsByItemTable({\n  items,\n  grousByItem,\n  groupsTypeahead,\n  onAddToGroup,\n}: ItemsGroupsByItemTableProps) {\n  const { queryParams, addParam } = useQueryParams();\n  const currentPage = Number(queryParams.page ?? '1');\n  const pageSize = Number(queryParams.pageSize ?? '64');\n  const showOnlyEmpty = queryParams.emptyOnly === 'true';\n\n  const page = useMemo(() => {\n    const start = (currentPage - 1) * pageSize;\n    const end = start + pageSize;\n    return Object.values(items)\n      .filter((v) => (showOnlyEmpty ? !grousByItem[v.id] : true))\n      .slice(start, end);\n  }, [currentPage, pageSize, items, showOnlyEmpty, grousByItem]);\n\n  const onChange = (page: number) => {\n    addParam('page', page.toString());\n  };\n  const onPageSizeChange = (_: number, size: number) => {\n    addParam('pageSize', size.toString());\n  };\n\n  const pagination = (\n    <Pagination\n      onChange={onChange}\n      current={currentPage}\n      total={Object.keys(items).length}\n      pageSizeOptions={[16, 32, 64, 128]}\n      pageSize={pageSize}\n      onShowSizeChange={onPageSizeChange}\n      className=\"fixed-pagination\"\n    />\n  );\n\n  return (\n    <>\n      <Typography.Title level={2}>Groups by Items</Typography.Title>\n\n      {pagination}\n\n      <Row gutter={[16, 16]} className=\"my-4\">\n        {page.map((item) => (\n          <Col key={item.id} xs={24} sm={24} md={12} lg={6} xl={4}>\n            <ItemGroupsCard\n              item={item}\n              itemGroups={grousByItem[item.id]}\n              groupsTypeahead={groupsTypeahead}\n              onAddToGroup={onAddToGroup}\n            />\n          </Col>\n        ))}\n      </Row>\n\n      {pagination}\n    </>\n  );\n}\n","import { Button, Divider, Flex } from 'antd';\nimport { FilterSegments, FilterSwitch } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { ItemGroup } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nimport { ClusterOutlined, TableOutlined } from '@ant-design/icons';\n\nexport function ItemsGroupsFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n}: UseResourceFirebaseDataReturnType<ItemGroup>) {\n  const { queryParams, addParam } = useQueryParams();\n\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <Button\n          block\n          danger\n          type=\"primary\"\n          loading={isSaving}\n          disabled={!isDirty}\n          onClick={save}\n          size=\"large\"\n        >\n          Save\n        </Button>\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"items-groups.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.display ?? 'group'}\n        onChange={(mode) => addParam('display', mode)}\n        options={[\n          {\n            title: 'By Groups',\n            icon: <ClusterOutlined />,\n            value: 'group',\n          },\n          {\n            title: 'By Items',\n            icon: <TableOutlined />,\n            value: 'item',\n          },\n        ]}\n      />\n\n      <FilterSwitch\n        label=\"No Groups Only\"\n        value={queryParams.emptyOnly === 'true' ? true : false}\n        onChange={(mode) => addParam('emptyOnly', mode, false)}\n      />\n    </SiderContent>\n  );\n}\nfunction prepareFileForDownload(groups: Dictionary<ItemGroup>) {\n  // TODO\n  return sortJsonKeys(groups);\n}\n","import { Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsGroupsContent } from 'components/Items/ItemsGroupsContent';\nimport { ItemsGroupsFilters } from 'components/Items/ItemsGroupsFilters';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { useTDResource } from 'hooks/useTDResource';\nimport { isEmpty } from 'lodash';\nimport { Item, ItemGroup } from 'types';\n\nexport function ItemsGroups() {\n  const groupsQuery = useResourceFirebaseData<ItemGroup>({\n    tdrResourceName: 'items-groups',\n    firebaseDataCollectionName: 'itemsGroups',\n    serialize: true,\n  });\n  const itemsTypeaheadQuery = useTDResource<Item>('items');\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Groups Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsGroupsFilters {...groupsQuery} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={groupsQuery.isLoading || itemsTypeaheadQuery.isLoading}\n            error={groupsQuery.error || itemsTypeaheadQuery.error}\n            hasResponseData={!isEmpty(groupsQuery.data) || !isEmpty(itemsTypeaheadQuery.data)}\n          >\n            <ItemsGroupsContent {...groupsQuery} />\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsGroups;\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","BrazilFlag","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","ItemSprite","item","width","className","id","title","name","en","pt","ItemId","copyToClipboard","useCopyToClipboardFunction","prefix","nsfw","style","color","placeholder","variant","size","value","readOnly","ItemName","toUpperCase","ItemNsfw","ItemGoTo","setSearchParams","useSearchParams","shape","itemId","view","state","useCopyToClipboard","message","App","useEffect","length","info","truncate","omission","success","getDocQueryFunction","path","docId","async","console","log","getCurrentDateTime","docRef","doc","firestore","getDoc","useGetFirebaseDoc","options","useQuery","queryKey","queryFn","useQueryParams","defaultParams","searchParams","addParam","key","defaultValue","undefined","delete","set","String","removeParam","Object","entries","forEach","has","queryParams","toString","split","reduce","qp","entry","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","refetchQueries","onError","error","description","useMemo","isLoading","isPending","cloneDeep","isDirty","isEmpty","firebaseData","isSaving","save","mutate","serializeFirebaseData","addEntryToUpdate","prev","entriesToUpdate","resourceName","enabled","getUrl","useBaseUrl","query","res","fetch","json","hasResponseData","updateQueryFunction","updateDoc","useMutation","mutationFn","ItemGroupsCard","itemGroups","groupsTypeahead","onAddToGroup","maxWidth","direction","mode","showSearch","onSelect","group","ItemsGroupsContent","itemsTypeaheadQuery","grousByItem","values","acc","itemsIds","warn","push","orderBy","keys","map","label","display","ItemsGroupsByGroupTable","ItemsGroupsByItemTable","items","groupId","itemIds","removeDuplicates","columns","dataIndex","render","record","gap","wrap","vertical","justify","filter","Boolean","dataSource","currentPage","Number","page","pageSize","showOnlyEmpty","emptyOnly","start","end","v","slice","pagination","onChange","current","total","pageSizeOptions","onShowSizeChange","_","level","gutter","xs","sm","md","lg","xl","ItemsGroupsFilters","block","danger","type","disabled","prepareFileForDownload","groups","sortJsonKeys","icon","ClusterOutlined","TableOutlined","ItemsGroups","groupsQuery","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}