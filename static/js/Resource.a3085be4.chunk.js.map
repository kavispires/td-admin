{"version":3,"file":"static/js/Resource.a3085be4.chunk.js","mappings":"2KAAA,SAASA,EAAWC,GAClB,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,iBAAoBF,GAApE,eACE,iBACEG,KAAK,UACLC,EAAE,8HAEJ,iBACED,KAAK,UACLC,EAAE,mIAEJ,mBAAQC,GAAG,MAAMC,GAAG,QAAQC,EAAE,OAAOJ,KAAK,aAC1C,iBACEA,KAAK,UACLC,EAAE,mtDAIT,CAED,SAASI,EAAiBR,GACxB,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,kBAAqBF,GAArE,eACE,iBACEG,KAAK,UACLC,EAAE,mJAEJ,iBACED,KAAK,UACLC,EAAE,qFAEJ,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBAAMD,KAAK,UAAUC,EAAE,2BACvB,iBAAMD,KAAK,UAAUC,EAAE,mDACvB,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBACED,KAAK,UACLC,EAAE,sFAEJ,iBAAMD,KAAK,UAAUC,EAAE,yCACvB,iBACED,KAAK,UACLC,EAAE,0IAEJ,iBACED,KAAK,UACLC,EAAE,miPAIT,CAMM,SAASK,EAAT,GAAkE,IAA5C,SAAEC,GAAyC,EAA5BV,GAA4B,YACtE,MAAoB,OAAbU,GAAoB,SAACX,GAAD,UAAgBC,KAAY,SAACQ,GAAD,UAAsBR,GAC9E,C,0GCvDM,SAASW,EAAT,GAAiE,IAA3C,SAAEC,EAAF,MAAYC,GAA8B,EAApBC,GAAoB,YACrE,OACE,SAAC,WAAD,gBAAkBD,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAAS,GAAOC,GAAzC,aACGF,IAGN,C,6NCoBYG,EAAoB,IAOF,IAPG,SAChCH,EADgC,OAEhCI,GAAS,EAFuB,YAGhCC,EAAc,GAHkB,UAIhCC,EAAY,GAJoB,UAKhCC,EAAY,SAEgB,EADzBL,GACyB,YAC5B,OACE,mCACEI,WAAWE,EAAAA,EAAAA,GACT,qBADa,8BAEUD,GACvBH,IAAWC,GAAe,8BAC1BC,IAEEJ,GAPN,aASGF,IAVL,E,2CCPK,SAASS,EAAT,GAAmG,IAAjF,UAAEC,EAAF,OAAaC,EAAb,MAAqBC,EAArB,QAA4BC,EAA5B,QAAqCC,EAArC,gBAA8CC,GAAkC,EACvG,OAAIJ,GAAe,SAAC,IAAD,0BACfD,GAAkB,SAAC,IAAD,CAAKM,MAAM,OAAX,wBAClBJ,GAASE,GAAgB,SAAC,IAAD,CAAKE,MAAM,MAAX,mBACzBH,GAAgB,SAAC,IAAD,CAAKG,MAAM,SAAX,sBAChBD,GAAwB,SAAC,IAAD,CAAKC,MAAM,QAAX,qBACrB,SAAC,IAAD,qBACR,CAEM,SAASC,EAAc7B,GAC5B,OACE,SAAC,KAAD,WACE,SAAC,SAAD,CAAW8B,MAAM,SAAjB,UACE,SAACT,GAAD,UAAcrB,OAIrB,C,2ICtCM,SAAS+B,EAAT,GAMyB,IANM,QACpCC,EADoC,MAEpCC,EAFoC,KAGpCC,EAHoC,KAIpCC,GAE6B,EAD1BC,GAC0B,YAC7B,MAAMC,GAAkBC,EAAAA,EAAAA,KAExB,OACE,SAAC,MAAD,QACEL,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAAS,SAChBC,KAAI,OAAEA,QAAF,IAAEA,EAAAA,GAAQ,SAAC,IAAD,IACdC,KAAI,OAAEA,QAAF,IAAEA,EAAAA,EAAQ,QACdI,QAAS,IAAMF,EAAgBL,IAC3BI,GAGT,C,oHChBM,SAASI,EAAT,GAAqF,IAAD,UAAlD,cAAEC,GAAgD,EACzF,MAAM,YAAEC,EAAF,SAAeC,IAAaC,EAAAA,EAAAA,MAC3BC,GAAQC,EAAAA,EAAAA,WACRC,EAAqBC,IAA0BC,EAAAA,EAAAA,UAAQ,UAACP,EAAYQ,IAAI,uBAAjB,QAAoC,IASlG,OACE,SAAC,KAAD,WACE,UAAC,IAAD,CACEC,OAAO,WACPC,SAXYC,IAChB,MAAMC,EAAyBC,EAAAA,EAAAA,SAAiCF,EAAEG,cAElEb,EAAS,WAAYW,EAAyB,KAAOD,EAAE3C,UACvDiC,EAAS,eAAgBU,EAAEG,aAA3B,EAQIrB,KAAK,QACLU,KAAMA,EACNY,cAAe,CACbD,aAAY,UAAEd,EAAYQ,IAAI,uBAAlB,QAAqC,GACjDxC,SAAQ,UAAEgC,EAAYQ,IAAI,mBAAlB,QAAiC,IAP7C,WAUE,SAAC,SAAD,CAAWpB,MAAM,WAAW4B,KAAK,eAAjC,UACE,SAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,SACnBC,MAAOnB,EAAYQ,IAAI,gBACvBY,SAAWC,GAAcf,EAAuBe,GAHlD,SAKGtB,EAAcuB,KAAKR,IAClB,SAAC,WAAD,CAAkCK,MAAOL,EAAzC,SACGA,GADiBA,UAM1B,SAAC,SAAD,CAAW1B,MAAM,WAAW4B,KAAK,WAAjC,UACE,SAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,SACnBK,SAAUV,EAAAA,EAAAA,SAAiCR,GAF7C,SAIGmB,EAAAA,GAAAA,KAAeC,IACd,SAAC,WAAD,CAA2BN,MAAOM,EAAlC,SACGA,GADiBA,UAM1B,SAAC,SAAD,WACE,SAAC,KAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,wBAOT,C,iGCzDM,SAASC,EAAT,GAA0E,IAAhD,SAAEC,EAAF,SAAYC,GAAmC,EAC9E,MAAOC,EAAeC,IAAoBzB,EAAAA,EAAAA,UAAS,CAAC,GAapD,OACE,iBAAK/B,UAAU,qBAAf,WACE,SAAC,IAAD,8BACA,SAAC,IAAD,CAAOkD,KAAK,OAAON,SAdEC,IACvB,MAAM,MAAEF,EAAQ,IAAOE,EAAEY,OACnBC,GAAMC,EAAAA,EAAAA,IAAoBhB,EAAMiB,OAAOC,eAEzCH,GAAOA,EAAII,QAAUC,EAAAA,GACvBP,GAAiBQ,EAAAA,EAAAA,IAAYN,EAAKL,EAAUC,IAE5CE,EAAiB,CAAC,EACnB,EAM+CS,YAAY,eAC1D,SAAC,aAAD,CACEzB,KAAK,iBACL0B,GAAG,GACHC,KAAM,GACNC,KAAM,GACNC,UAAQ,EACR1B,MAAO2B,KAAKC,UAAUhB,EAAe,KAAM,OAIlD,C,6EClCM,SAASnC,IACd,MAAOoD,EAAOrD,IAAmBsD,EAAAA,EAAAA,MAC3B,QAAEC,GAAYC,EAAAA,EAAAA,SAYpB,OAVAC,EAAAA,EAAAA,YAAU,KACJJ,EAAM7B,QACJ6B,EAAM7B,MAAMmB,OAAS,GACvBY,EAAQG,KAAR,gCAAqCC,EAAAA,EAAAA,UAASN,EAAM7B,MAAO,CAAEmB,OAAQ,GAAIiB,SAAU,UAEnFL,EAAQM,QAAQ,UAEnB,GACA,CAACR,EAAOE,IAEJvD,CACR,C,yDCjBM,SAASO,IAAqE,IAAtDuD,EAAqD,uDAAJ,CAAC,EAC/E,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,MAElC3D,EAAW,CAAC4D,EAAa1C,EAAgB2C,UAC/BC,IAAV5C,GAAiC,KAAVA,GAAgBA,IAAU2C,EACnDJ,EAAaM,OAAOH,GAEpBH,EAAaO,IAAIJ,EAAKK,OAAO/C,IAG/BwC,EAAgBD,EAAhB,EAGIS,EAAY,SAACC,GAAkF,IAAjDC,EAAgD,uDAAP,CAAC,EAC5FC,OAAOC,QAAQH,GAAQI,SAAQ,IAAmB,IAAjBX,EAAK1C,GAAW,EAC3CkD,EAAcR,KAAS1C,EACzBuC,EAAaM,OAAOH,GAEpBH,EAAaO,IAAIJ,EAAKK,OAAO/C,GAC9B,IAEHwC,EAAgBD,EACjB,EAEKe,EAAeZ,IACnBH,EAAaM,OAAOH,GACpBF,EAAgBD,EAAhB,EAGIgB,EAAK,SAACb,GAAD,IAAc1C,EAAd,uDAAsB,OAAtB,OAAiCuC,EAAalD,IAAIqD,KAASK,OAAO/C,EAAlE,EAUX,OARAwD,EAAAA,EAAAA,IAAc,KACZL,OAAOC,QAAQd,GAAee,SAAQ,IAAmB,IAAjBX,EAAK1C,GAAW,EACjDuC,EAAakB,IAAIf,IACpB5D,EAAS4D,EAAK1C,EACf,GAHH,IAOK,CACLlB,WACAkE,YACAM,cACAzE,YAAa0D,EACbgB,KAEH,C,8EChCM,SAASG,EAAiBC,GAAwD,IAAD,EACtF,MAAM,YAAE9E,IAAgBE,EAAAA,EAAAA,MAClB,OAAE6E,IAAWC,EAAAA,EAAAA,GAAW,aACxBlE,EAAY,UAAGd,EAAYQ,IAAI,uBAAnB,QAAsC,GAClDxC,EAAWgC,EAAYQ,IAAI,YAE3ByE,IAAYnE,GAAgBgE,EAAmBI,SAASpE,IAExD,KAAEqE,EAAF,UAAQvG,EAAR,MAAmBE,IAAUsG,EAAAA,EAAAA,GAA6B,CAC9DC,SAAU,CAAC,WAAYvE,EAAc9C,GACrCsH,QAASC,UACP,MAAMC,EACJxH,IAAa6C,EAAAA,EAAAA,SAAiCC,GAC1CiE,EAAO,GAAD,OAAIjE,EAAJ,YAAoB9C,EAApB,UACN+G,EAAO,GAAD,OAAIjE,EAAJ,UAEN2E,QAAYC,MAAMF,GAIxB,OAFeC,EAAIE,WAAaF,EAAIG,OAAS,CAAC,CAE9C,EAEFX,YAGF,MAAO,CACLnE,eACA9C,SAAWA,GAAyB,KACpC6D,SAAUsD,EACVvG,YACAqG,UACAnG,QACAG,gBAAiB4G,QAAQV,GAE5B,C,kLCzCM,SAASW,EAAT,GAA0C,IAA3B,SAAE5H,GAAwB,EAC9C,OAAO,SAAC,IAAD,UAAMA,GACd,CAEM,SAAS6H,EAAT,GAA0C,IAA3B,SAAE7H,GAAwB,EAC9C,OAAO,0BAAOA,GACf,CAOM,SAAS8H,EAAT,GAAiD,IAAlC,MAAE5G,EAAF,SAASlB,GAAwB,EACrD,OACE,UAAC,IAAD,YACE,0BACE,SAAC4H,EAAD,UAAQ1G,OAEV,SAAC2G,EAAD,UAAQ7H,MAGb,CAEM,SAAS+H,EAAT,GAAqD,IAAlC,MAAE7G,EAAF,SAASlB,GAAwB,EACzD,OACE,UAAC,IAAD,YACE,0BACE,SAAC4H,EAAD,UAAQ1G,OAEV,eAAIZ,UAAU,sBAAd,SAAqCN,MAG1C,CAEM,SAASgI,EAAT,GAAkD,IAA3B,SAAEhI,GAAwB,EACtD,OAAO,wBAAKA,GACb,CAOM,SAASiI,EAAT,GAAyE,IAA9C,MAAE/G,EAAF,SAASlB,GAAoC,EAC7E,MAAMiD,GACJ,iCACE,4BACE,SAACpD,EAAA,EAAD,CAAcC,SAAS,KAAKoI,MAAM,QADpC,IAC8ClI,EAASmI,OAGvD,4BACE,SAACtI,EAAA,EAAD,CAAcC,SAAS,KAAKoI,MAAM,QADpC,IAC8ClI,EAASoI,SAK3D,OAAIlH,GAEA,UAAC,IAAD,YACE,0BACE,SAAC0G,EAAD,UAAQ1G,OAEV,SAAC2G,EAAD,UAAQ5E,QAKP,SAAC4E,EAAD,UAAQ5E,GAChB,CAOM,SAASoF,EAAT,GAA8E,IAAvD,MAAEnH,EAAQ,WAAV,SAAsBlB,GAAgC,EAClF,OAAKA,GAGH,UAAC,IAAD,YACE,0BACE,SAAC4H,EAAD,UAAQ1G,OAEV,SAAC2G,EAAD,WACE,SAAChI,EAAA,EAAD,CAAcC,SAAUE,EAAsBkI,MAAM,cARpC,uBAYvB,CAMM,SAASI,EAAT,GAA+C,IAA5B,MAAErF,GAAyB,EACnD,OAAKA,GAGH,SAAC6E,EAAD,CAAO5G,MAAM,OAAb,UACE,SAACqH,EAAA,EAAD,CAAYxF,MAAO,CAAE/B,MAAO,gBAJb,uBAOpB,CCxGM,SAASwH,EAAT,GAAqD,IAAlC,MAAEjF,EAAF,KAASkF,GAAwB,EACzD,MAAMC,EAAOtC,OAAOsC,KAAKnF,GAAOoF,QAAQhD,GAAgB,OAARA,IAG1CU,GAAUuC,EAAAA,EAAAA,UAAQ,IACfF,EAAKtF,KAAKuC,IAEf,GAAY,OAARA,EAAc,OAAO,wBAEzB,MAAM1C,EAAQM,EAAMoC,GAGpB,OAAc,OAAV1C,QAA4B4C,IAAV5C,GAA4B,wBAGtC,SAAR0C,GACK,SAAC2C,EAAD,CAAWrF,MAAOA,IAIvB4F,EAAe5F,IACV,SAACgF,EAAD,CAAmB/G,MAAOyE,EAA1B,SAAgC1C,IAIrC6F,EAAW7F,IACN,SAACoF,EAAD,CAAenH,MAAOyE,EAAtB,SAA4B1C,IAIjC8F,EAAY9F,IACP,SAAC6E,EAAD,CAAO5G,MAAOyE,EAAd,SAAoB1C,IAGzB+F,EAAiB/F,IAEjB,SAAC8E,EAAD,CAAW7G,MAAOyE,EAAlB,SACG1C,EAAMG,KAAI,CAAC6F,EAAcC,KACxB,SAAClB,EAAD,UAAqDiB,GAArD,UAAuB1F,EAAMiB,GAA7B,YAAmCyE,EAAnC,YAA2CC,QAM/CC,EAAsBlG,IAEtB,SAAC8E,EAAD,CAAW7G,MAAOyE,EAAlB,SACGS,OAAOgD,OAAO7F,EAAM6F,QAAQhG,KAAI,CAAC6F,EAAMC,KACtC,SAAClB,EAAD,WACE,SAACC,EAAD,UAAoBgB,KADtB,UAAuB1F,EAAMiB,GAA7B,YAAmCyE,EAAnC,YAA2CC,SAQnDG,QAAQC,IAAI,OAAQ3D,EAAK1C,IAClB,SAAC,EAAAsG,SAAD,GAAe5D,GAAtB,KAED,CAAC8C,IAEJ,OACE,SAAC,IAAD,CAAMe,MAAOjG,EAAMiB,GAAIlE,UAAU,gBAAgBiB,KAAK,QAAtD,SACG8E,GAGN,CAED,MAAMwC,EAAkB5F,GACE,kBAAVA,GAAsBA,EAAMmF,IAAMnF,EAAMkF,GAGlDY,EAAe9F,GACK,kBAAVA,GAAuC,kBAAVA,EAGvCwG,EAAWxG,GACRyG,MAAMD,QAAQxG,GAGjB+F,EAAoB/F,GACjBwG,EAAQxG,IAA8B,kBAAbA,EAAM,GAGlC6F,EAAc7F,GACD,OAAVA,GAA4B,OAAVA,EAGrBkG,EAAyBlG,GACtBwG,EAAQxG,IAAU4F,EAAe5F,EAAM,IC1FzC,SAAS0G,EAAT,GAAwE,IAAjD,SAAEhG,EAAF,aAAYf,GAAoC,EAC5E,MAAMgH,EAAcxD,OAAOgD,OAAOzF,GAElC,OACE,iCACE,UAAC,UAAD,CAAkB1D,MAAO,EAAzB,oBAAoC2J,EAAKxF,OAAzC,QAEA,SAAC,IAAD,CAAKyF,OAAQ,CAAC,GAAI,IAAlB,SACGD,EAAKxG,KAAKG,IAEP,SAAC,IAAD,CAAKuG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,UACE,SAAC1B,EAAD,CAAWjF,MAAOA,EAAOkF,KAAI,OAAE7F,QAAF,IAAEA,EAAAA,EAAgB,MADJW,EAAMiB,UAQ9D,C,4CCpBM,SAAS2F,IAAuB,IAAD,EACpC,MAAM,YAAErI,EAAF,SAAeC,IAAaC,EAAAA,EAAAA,KAElC,OACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEd,MAAM,UACN+B,MAAK,UAAEnB,EAAYQ,IAAI,kBAAlB,QAAgC,OACrCY,SAAWkH,GAASrI,EAAS,UAAWqI,GACxCC,QAAS,CACP,CACEb,MAAO,OACPlI,MAAM,SAACgJ,EAAA,EAAD,IACNrH,MAAO,QAET,CACEuG,MAAO,QACPlI,MAAM,SAACiJ,EAAA,EAAD,IACNtH,MAAO,SAET,CACEuG,MAAO,QACPlI,MAAM,SAACkJ,EAAA,EAAD,IACNvH,MAAO,aAMlB,C,4CCrBM,SAASwH,EAAT,GAAsE,IAAhD,SAAE9G,EAAF,aAAYf,GAAmC,EAC1E,MAAMgB,EAAWhB,EAAe8H,EAAAA,GAAgB9H,GAAgB,OAE1D+H,GAAa/B,EAAAA,EAAAA,UAAQ,IAAMhE,KAAKC,UAAUlB,EAAU,KAAM,IAAI,CAACA,IAErE,OACE,iCACE,UAAC,UAAD,CAAkB1D,MAAO,EAAzB,mBACO,SAACkB,EAAA,EAAD,CAAuBC,QAASuJ,QAGvC,UAAC,IAAD,CAAKd,OAAQ,GAAb,WACE,SAAC,IAAD,CAAKe,KAAM,GAAX,UACE,SAAC,aAAD,CAAgB9H,KAAK,SAAS0B,GAAG,GAAGC,KAAM,GAAIC,KAAM,GAAIC,UAAQ,EAAC1B,MAAO0H,OAE1E,SAAC,IAAD,CAAKC,KAAM,EAAX,UACE,SAAClH,EAAA,EAAD,CAAkBC,SAAUA,EAAUC,SAAUA,WAKzD,C,cCzBM,SAASiH,EAAT,GAA0D,IAAnC,SAAElH,GAAgC,EAC9D,MAAMiG,EAAcxD,OAAOgD,OAAOzF,GAE5BmH,GAAUlC,EAAAA,EAAAA,UAAQ,KACtB,MAAMF,EAAgC,CAAC,EAUvC,OARAkB,EAAKtD,SAAS/C,IACZ6C,OAAOsC,KAAKnF,GAAO+C,SAASX,SACRE,IAAd6C,EAAK/C,KACP+C,EAAK/C,IAAO,EACb,GAHH,IAOKS,OAAOsC,KAAKA,GAAMtF,KAAKuC,IAAD,CAC3B6D,MAAO7D,EACPoF,UAAWpF,EACXA,MACAqF,OAASvI,IACP,MAAMrB,EAAuB,kBAANqB,EAAiBA,EAAImC,KAAKC,UAAUpC,EAAG,KAAM,GACpE,OACE,4BACGrB,EADH,MACeA,EAAQ8C,SAAU,SAAC/C,EAAA,EAAD,CAAuBC,QAASA,MAFnE,KANJ,GAaC,CAACwI,IAEJ,OACE,iCACE,UAAC,UAAD,CAAkB3J,MAAO,EAAzB,oBAAoC2J,EAAKxF,OAAzC,QAEA,SAAC,IAAD,CAAKyF,OAAQ,GAAb,UACE,SAAC,IAAD,CAAKe,KAAM,GAAX,UACE,SAAC,IAAD,CAAOE,QAASA,EAASG,WAAYrB,UAK9C,C,4CCnCD,MAAM/H,EAAgBuE,OAAOgD,OAAO8B,EAAAA,IA0DpC,QAxDA,WAAqB,IAAD,EAClB,MAAM,aACJtI,EAAe,GADX,SAEJ9C,EAAW,GAFP,UAGJY,EAHI,QAIJqG,EAJI,MAKJnG,EALI,gBAMJG,EANI,SAOJ4C,IACEgD,EAAAA,EAAAA,GAAiB9E,IAEf,YAAEC,IAAgBE,EAAAA,EAAAA,KAClBmJ,EAAO,UAAGrJ,EAAYQ,IAAI,kBAAnB,QAAiC,OAE9C,OACE,SAAC,KAAD,CACEkH,MAAM,WACN4B,SAAUxI,GAAgB9C,EAAhB,mBAAuC8C,EAAvC,YAAuD9C,GAAa,GAFhF,UAIE,UAAC,IAAD,CAAQuL,UAAQ,EAAhB,WACE,UAACC,EAAA,EAAD,YACE,SAAC,KAAD,CACEvK,gBAAiBA,EACjBL,UAAWA,EACXE,MAAOA,EACPD,QAASoG,KAEX,SAACnF,EAAA,EAAD,CAA0BC,cAAeA,KACzC,SAACsI,EAAD,QAGF,SAAC,YAAD,CAAgB7J,UAAU,UAA1B,UACE,UAACiL,EAAA,EAAD,CACE7K,UAAWA,EACXE,MAAOA,EACPG,gBAAiBA,EACjBJ,QAASoG,EAJX,UAMe,SAAZoE,IACC,SAACV,EAAD,CAAc9G,SAAQ,OAAEA,QAAF,IAAEA,EAAAA,EAAY,CAAC,EAAGf,aAAY,OAAEA,QAAF,IAAEA,EAAAA,EAAgB,KAG3D,UAAZuI,IACC,SAACN,EAAD,CAAelH,SAAQ,OAAEA,QAAF,IAAEA,EAAAA,EAAY,CAAC,EAAGf,aAAY,OAAEA,QAAF,IAAEA,EAAAA,EAAgB,KAG5D,UAAZuI,IACC,SAACxB,EAAD,CAAehG,SAAQ,OAAEA,QAAF,IAAEA,EAAAA,EAAY,CAAC,EAAGf,aAAY,OAAEA,QAAF,IAAEA,EAAAA,EAAgB,cAOpF,C","sources":["components/Common/LanguageFlag.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/ResponseState.tsx","components/CopyToClipboardButton.tsx","components/Resource/ResourceSelectionFilters.tsx","components/SearchDuplicates.tsx","hooks/useCopyToClipboardFunction.ts","hooks/useQueryParams.ts","hooks/useResourceState.ts","components/ResourceCards/Entry.tsx","components/ResourceCards/CardEntry.tsx","components/Resource/ResourceCards.tsx","components/Resource/ResourceDisplayMode.tsx","components/Resource/ResourceJson.tsx","components/Resource/ResourceTable.tsx","pages/Resource.tsx"],"sourcesContent":["function BrazilFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.4\" {...props}>\n      <path\n        fill=\"#73af00\"\n        d=\"M473.6 0H38.3A38.3 38.3 0 000 38.3v258.8a38.4 38.4 0 0038.4 38.4h435.3A38.4 38.4 0 00512 297V38.3A38.3 38.3 0 00473.6 0z\"\n      ></path>\n      <path\n        fill=\"#ffe15a\"\n        d=\"M251.4 47l-186 113.2a8.8 8.8 0 000 15l186 113.3a8.8 8.8 0 009.2 0l186-113.2a8.8 8.8 0 000-15.1l-186-113.3a8.8 8.8 0 00-9.2 0z\"\n      ></path>\n      <circle cx=\"256\" cy=\"167.7\" r=\"70.6\" fill=\"#41479b\"></circle>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M195.4 131.6a70.2 70.2 0 00-7.6 18.1c39.1-3 97 8 134 43.8a70.4 70.4 0 004.5-19.5c-38-32.1-90.7-43.5-130.9-42.4zm63.6 60.2l1.8 5.7h6a.8.8 0 01.4 1.4l-4.8 3.5 1.8 5.7a.8.8 0 01-1.2.9l-4.8-3.5-4.9 3.5a.8.8 0 01-1.2-.9l1.8-5.7-4.8-3.5a.8.8 0 01.5-1.4h6l1.8-5.7a.8.8 0 011.5 0zm23 14.6l.8 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.4a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.3.3 0 01-.5-.4l.7-2.4-2-1.5a.3.3 0 01.2-.7h2.5l.9-2.4a.3.3 0 01.6 0zm-33-25.3l.7 2.4h2.6a.3.3 0 01.2.7l-2 1.5.7 2.5a.3.3 0 01-.5.3l-2-1.5-2.2 1.5a.3.3 0 01-.5-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.5a.3.3 0 01.6 0zm-44.9-2.9l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.4a.3.3 0 01-.6-.3l.8-2.5-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.6 0zm37.5 27.4l.8 2.4h2.6a.3.3 0 01.2.6l-2 1.5.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2 1.5a.3.3 0 01-.6-.4l.7-2.5-2-1.5a.3.3 0 01.2-.6h2.5l.9-2.4a.3.3 0 01.6 0zM221 176.5l.7 2h2a.3.3 0 01.2.5l-1.7 1.2.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.2a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm62.8-41l.8 2.5h2.7a.3.3 0 01.2.6l-2.1 1.6.7 2.5a.3.3 0 01-.5.4l-2.1-1.5-2.1 1.5a.4.4 0 01-.6-.4l.8-2.5-2.1-1.6a.3.3 0 01.2-.6h2.6l.8-2.5a.3.3 0 01.7 0zM207 164.3l.7 2h2a.3.3 0 01.2.5l-1.7 1.3.7 2a.3.3 0 01-.5.3l-1.7-1.2-1.7 1.2a.3.3 0 01-.4-.3l.6-2-1.7-1.3a.3.3 0 01.2-.5h2.1l.7-2a.3.3 0 01.5 0zm10.1 28l1 3h3.2a.4.4 0 01.2.8L219 198l1 3a.4.4 0 01-.7.5l-2.5-1.9-2.6 1.9a.4.4 0 01-.7-.5l1-3-2.5-1.9a.4.4 0 01.2-.8h3.2l1-3a.4.4 0 01.7 0zm77.8 14.7l.6 2h2a.3.3 0 01.2.4l-1.6 1.2.6 1.9a.3.3 0 01-.4.3l-1.7-1.2-1.6 1.2a.3.3 0 01-.4-.3l.6-1.9-1.6-1.2a.3.3 0 01.1-.5h2l.7-1.9a.3.3 0 01.5 0zm7-14.4l.8 2.4h2.5a.3.3 0 01.3.7l-2.1 1.5.8 2.4a.3.3 0 01-.6.4l-2-1.5-2.1 1.5a.3.3 0 01-.6-.4l.8-2.4-2-1.5a.3.3 0 01.1-.6h2.6l.8-2.4a.3.3 0 01.7-.1z\"\n      ></path>\n    </svg>\n  );\n}\n\nfunction UnitedStatesFlag(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 335.45\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M473.65.01H38.35A38.34 38.34 0 000 38.35v258.76a38.35 38.35 0 0038.35 38.35h435.3A38.35 38.35 0 00512 297.11V38.35A38.34 38.34 0 00473.65.01z\"\n      ></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M2.11 25.81h507.78A38.34 38.34 0 00473.66.01H38.35a38.35 38.35 0 00-36.24 25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 103.22H512V129.02H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 51.61H512V77.41H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 171.8a8.83 8.83 0 008.83 8.83H512v-25.8H0z\"></path>\n      <path fill=\"#ff4b55\" d=\"M0 258.05H512V283.85H0z\"></path>\n      <path\n        fill=\"#ff4b55\"\n        d=\"M509.89 309.65H2.11a38.35 38.35 0 0036.24 25.8h435.3a38.35 38.35 0 0036.24-25.8z\"\n      ></path>\n      <path fill=\"#ff4b55\" d=\"M0 206.43H512V232.23000000000002H0z\"></path>\n      <path\n        fill=\"#41479b\"\n        d=\"M8.83 180.63h220.69a8.83 8.83 0 008.83-8.83V8.83A8.84 8.84 0 00229.52 0H38.35A38.36 38.36 0 000 38.35V171.8a8.83 8.83 0 008.83 8.83z\"\n      ></path>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M24.79 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.01zM24.79 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.92l1.86-5.89-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6 0zM24.79 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.6-.04zM48.58 35.3l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5 0zM48.58 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.8-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM48.58 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.5 0zM72.38 20.27l2 5.86h6.18a.83.83 0 01.44 1.6l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.55-.09zM72.38 50.92l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 81.58l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 112.23l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM72.38 142.88l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.51 0zM96.17 35.3l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.86-5.89-5.01-3.6a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.5-.07zM96.17 65.95l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l2-5.86a.83.83 0 011.49 0zM96.17 96.61l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.27-.93l1.79-5.8-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.56-.04zM96.17 127.26l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.6-5 3.6a.83.83 0 01-1.27-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 2-5.86a.83.83 0 011.49 0zM120 20.27l2 5.86h6.17a.84.84 0 01.49 1.51l-5 3.66 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.88-5-3.67a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.55 0zM120 50.92l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 81.58l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.83.83 0 011.55.05zM120 112.23l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.55 0zM120 142.88l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.18-.05 1.95-5.86a.84.84 0 011.55 0zM143.76 35.3l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 65.95l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.51 0zM143.76 96.61l2 5.86h6.18a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51.05zM143.76 127.26l2 5.86 6.18.05a.83.83 0 01.48 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.83.83 0 011.51 0zM167.55 20.27l1.95 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.66a.84.84 0 01.49-1.51h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 50.92l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 81.58l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.95-5.86a.83.83 0 011.59 0zM167.55 112.23l1.95 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.6-5 3.6a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5h6.18l1.99-5.86a.83.83 0 011.55 0zM167.55 142.88l1.95 5.85 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.27.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 1.95-5.86a.84.84 0 011.6.01zM191.34 35.3l2 5.86h6.17a.83.83 0 01.49 1.57l-5 3.67 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56-.07zM191.34 65.95l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5h6.18l1.95-5.86a.83.83 0 011.56 0zM191.34 96.61l2 5.86h6.17a.83.83 0 01.49 1.5l-5 3.76 1.87 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56-.04zM191.34 127.26l2 5.86 6.17.05a.83.83 0 01.49 1.5l-5 3.67 1.87 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.86-5.89-5-3.67a.83.83 0 01.48-1.5l6.18-.05 1.95-5.86a.83.83 0 011.56 0zM215.14 20.27l2 5.86h6.18a.84.84 0 01.49 1.51l-5 3.66 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.66a.84.84 0 01.49-1.51h6.17l2-5.86a.83.83 0 011.5 0zM215.14 50.92l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 81.58l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.83.83 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 112.23l2 5.86h6.18a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.84.84 0 01-1.28.93l-5-3.6-5 3.6a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5h6.17l2-5.86a.83.83 0 011.5 0zM215.14 142.88l2 5.86 6.18.05a.83.83 0 01.49 1.5l-5 3.67 1.86 5.89a.83.83 0 01-1.28.93l-5-3.59-5 3.59a.84.84 0 01-1.28-.93l1.87-5.89-5-3.67a.83.83 0 01.49-1.5l6.17-.05 2-5.86a.84.84 0 011.5 0z\"\n      ></path>\n    </svg>\n  );\n}\n\ntype LanguageFlagProps = {\n  language: Language;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function LanguageFlag({ language, ...props }: LanguageFlagProps) {\n  return language === 'pt' ? <BrazilFlag {...props} /> : <UnitedStatesFlag {...props} />;\n}\n","import { Typography } from 'antd';\nimport type { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { Button, type ButtonProps } from 'antd';\n\nimport { CopyOutlined } from '@ant-design/icons';\nimport { useCopyToClipboardFunction } from 'hooks/useCopyToClipboardFunction';\n\ntype CopyToClipboardButtonProps = {\n  content: string;\n} & ButtonProps;\n\nexport function CopyToClipboardButton({\n  content,\n  shape,\n  icon,\n  size,\n  ...buttonProps\n}: CopyToClipboardButtonProps) {\n  const copyToClipboard = useCopyToClipboardFunction();\n\n  return (\n    <Button\n      shape={shape ?? 'circle'}\n      icon={icon ?? <CopyOutlined />}\n      size={size ?? 'small'}\n      onClick={() => copyToClipboard(content)}\n      {...buttonProps}\n    />\n  );\n}\n","import { Button, Form, Select } from 'antd';\nimport { useState } from 'react';\n\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from '../../hooks/useQueryParams';\nimport { DUAL_LANGUAGE_RESOURCES, LANGUAGES } from '../../utils/constants';\n\ntype ResourceSelectionFiltersProps = {\n  resourceNames: string[];\n};\n\nexport function ResourceSelectionFilters({ resourceNames }: ResourceSelectionFiltersProps) {\n  const { queryParams, addParam } = useQueryParams();\n  const [form] = Form.useForm();\n  const [currentResourceName, setCurrentResourceName] = useState(queryParams.get('resourceName') ?? '');\n\n  const onFinish = (v: any) => {\n    const isDualLanguageResource = DUAL_LANGUAGE_RESOURCES.includes(v.resourceName);\n\n    addParam('language', isDualLanguageResource ? null : v.language);\n    addParam('resourceName', v.resourceName);\n  };\n\n  return (\n    <SiderContent>\n      <Form\n        layout=\"vertical\"\n        onFinish={onFinish}\n        size=\"small\"\n        form={form}\n        initialValues={{\n          resourceName: queryParams.get('resourceName') ?? '',\n          language: queryParams.get('language') ?? '',\n        }}\n      >\n        <Form.Item label=\"Resource\" name=\"resourceName\">\n          <Select\n            style={{ minWidth: '150px' }}\n            value={queryParams.get('resourceName')}\n            onChange={(e: string) => setCurrentResourceName(e)}\n          >\n            {resourceNames.map((resourceName) => (\n              <Select.Option key={resourceName} value={resourceName}>\n                {resourceName}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Language\" name=\"language\">\n          <Select\n            style={{ minWidth: '150px' }}\n            disabled={DUAL_LANGUAGE_RESOURCES.includes(currentResourceName)}\n          >\n            {LANGUAGES.map((entry) => (\n              <Select.Option key={entry} value={entry}>\n                {entry}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Load\n          </Button>\n        </Form.Item>\n      </Form>\n    </SiderContent>\n  );\n}\n","import { Input } from 'antd';\nimport { useState } from 'react';\nimport { findSimilar, stringRemoveAccents } from '../utils';\nimport { SEARCH_THRESHOLD } from '../utils/constants';\nimport { SectionTitle } from './Common/SectionTitle';\n\ntype SearchDuplicatesProps = {\n  response: ObjectDictionary;\n  property: string;\n};\n\nexport function SearchDuplicates({ response, property }: SearchDuplicatesProps) {\n  const [searchResults, setSearchResults] = useState({});\n\n  const onSearchSimilar = (e: any) => {\n    const { value = '' } = e.target;\n    const str = stringRemoveAccents(value.trim().toLowerCase());\n\n    if (str && str.length >= SEARCH_THRESHOLD) {\n      setSearchResults(findSimilar(str, response, property));\n    } else {\n      setSearchResults({});\n    }\n  };\n\n  return (\n    <div className=\"parser-flex-column\">\n      <SectionTitle>Search Similar</SectionTitle>\n      <Input type=\"text\" onChange={onSearchSimilar} placeholder=\"Type here\" />\n      <Input.TextArea\n        name=\"search-results\"\n        id=\"\"\n        cols={10}\n        rows={10}\n        readOnly\n        value={JSON.stringify(searchResults, null, 4)}\n      />\n    </div>\n  );\n}\n","import { App } from 'antd';\nimport { truncate } from 'lodash';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nexport function useCopyToClipboardFunction() {\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const { message } = App.useApp();\n\n  useEffect(() => {\n    if (state.value) {\n      if (state.value.length > 20) {\n        message.info(`Copied to clipboard: ${truncate(state.value, { length: 30, omission: '...' })}`);\n      } else {\n        message.success('Copied');\n      }\n    }\n  }, [state, message]);\n\n  return copyToClipboard;\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffectOnce } from 'react-use';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffectOnce(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  });\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { DUAL_LANGUAGE_RESOURCES } from 'utils/constants';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useBaseUrl } from './useBaseUrl';\nimport { useQueryParams } from './useQueryParams';\n\ntype ResourceState = {\n  resourceName: string | null;\n  language?: Language | null;\n  response: any;\n  isLoading: boolean;\n  error?: ResponseError | null;\n  hasResponseData: boolean;\n  enabled: boolean;\n};\n\nexport function useResourceState(availableResources: AvailableResources): ResourceState {\n  const { queryParams } = useQueryParams();\n  const { getUrl } = useBaseUrl('resources');\n  const resourceName = queryParams.get('resourceName') ?? '';\n  const language = queryParams.get('language');\n\n  const enabled = !!resourceName && availableResources.includes(resourceName);\n\n  const { data, isLoading, error } = useQuery<any, ResponseError>({\n    queryKey: ['resource', resourceName, language],\n    queryFn: async () => {\n      const url =\n        language && !DUAL_LANGUAGE_RESOURCES.includes(resourceName)\n          ? getUrl(`${resourceName}-${language}.json`)\n          : getUrl(`${resourceName}.json`);\n\n      const res = await fetch(url);\n\n      const result = res.body ? await res.json() : {};\n\n      return result;\n    },\n    enabled,\n  });\n\n  return {\n    resourceName,\n    language: (language as Language) || null,\n    response: data,\n    isLoading,\n    enabled,\n    error,\n    hasResponseData: Boolean(data),\n  };\n}\n","import { Flex, Tag } from 'antd';\nimport { LanguageFlag } from 'components/Common/LanguageFlag';\nimport type { ReactNode } from 'react';\n\nimport { FireFilled } from '@ant-design/icons';\n\ntype LabelProps = {\n  children: ReactNode;\n};\n\nexport function Label({ children }: LabelProps) {\n  return <Tag>{children}</Tag>;\n}\n\nexport function Value({ children }: LabelProps) {\n  return <span>{children}</span>;\n}\n\ntype EntryProps = {\n  label: string;\n  children: ReactNode;\n};\n\nexport function Entry({ label, children }: EntryProps) {\n  return (\n    <Flex>\n      <div>\n        <Label>{label}</Label>\n      </div>\n      <Value>{children}</Value>\n    </Flex>\n  );\n}\n\nexport function EntryList({ label, children }: EntryProps) {\n  return (\n    <Flex>\n      <div>\n        <Label>{label}</Label>\n      </div>\n      <ul className=\"resource-card__list\">{children}</ul>\n    </Flex>\n  );\n}\n\nexport function EntryListItem({ children }: LabelProps) {\n  return <li>{children}</li>;\n}\n\ntype EntryDualLanguageProps = {\n  label?: string;\n  children: DualLanguageValue;\n};\n\nexport function EntryDualLanguage({ label, children }: EntryDualLanguageProps) {\n  const value = (\n    <>\n      <div>\n        <LanguageFlag language=\"en\" width=\"1em\" /> {children.en}\n      </div>\n\n      <div>\n        <LanguageFlag language=\"pt\" width=\"1em\" /> {children.pt}\n      </div>\n    </>\n  );\n\n  if (label) {\n    return (\n      <Flex>\n        <div>\n          <Label>{label}</Label>\n        </div>\n        <Value>{value}</Value>\n      </Flex>\n    );\n  }\n\n  return <Value>{value}</Value>;\n}\n\ntype EntryLanguageProps = {\n  label?: string;\n  children?: string;\n};\n\nexport function EntryLanguage({ label = 'language', children }: EntryLanguageProps) {\n  if (!children) return <></>;\n\n  return (\n    <Flex>\n      <div>\n        <Label>{label}</Label>\n      </div>\n      <Value>\n        <LanguageFlag language={children as Language} width=\"1em\" />\n      </Value>\n    </Flex>\n  );\n}\n\ntype EntryNSFWProps = {\n  value?: boolean;\n};\n\nexport function EntryNSFW({ value }: EntryNSFWProps) {\n  if (!value) return <></>;\n\n  return (\n    <Entry label=\"nsfw\">\n      <FireFilled style={{ color: 'hotpink' }} />\n    </Entry>\n  );\n}\n\ntype EntryListTextProps = {\n  label: string;\n  children?: string[];\n};\n\nexport function EntryListText({ label, children }: EntryListTextProps) {\n  if (!children) return <></>;\n\n  return <Entry label={label}>{children.join(', ')}</Entry>;\n}\n","import { Card } from 'antd';\nimport { Fragment, useMemo } from 'react';\nimport { Entry, EntryDualLanguage, EntryLanguage, EntryList, EntryListItem, EntryNSFW } from './Entry';\n\ntype CardEntryProps = {\n  entry: PlainObject & { id: string };\n  kind?: string;\n};\n\nexport function CardEntry({ entry, kind }: CardEntryProps) {\n  const keys = Object.keys(entry).filter((key) => key !== 'id');\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  const entries = useMemo(() => {\n    return keys.map((key) => {\n      // Ignore id\n      if (key === 'id') return <></>;\n\n      const value = entry[key];\n\n      // Ignore nullish values\n      if (value === null || value === undefined) return <></>;\n\n      // Prioritize nsfw\n      if (key === 'nsfw') {\n        return <EntryNSFW value={value} />;\n      }\n\n      // Render dual value\n      if (isDualLanguage(value)) {\n        return <EntryDualLanguage label={key}>{value}</EntryDualLanguage>;\n      }\n\n      // Render language\n      if (isLanguage(value)) {\n        return <EntryLanguage label={key}>{value}</EntryLanguage>;\n      }\n\n      // Render strings\n      if (isPrimitive(value)) {\n        return <Entry label={key}>{value}</Entry>;\n      }\n\n      if (isArrayOfStrings(value)) {\n        return (\n          <EntryList label={key}>\n            {value.map((text: string, index: number) => (\n              <EntryListItem key={`${entry.id}-${text}-${index}`}>{text}</EntryListItem>\n            ))}\n          </EntryList>\n        );\n      }\n\n      if (isArrayOfDualLanguage(value)) {\n        return (\n          <EntryList label={key}>\n            {Object.values(entry.values).map((text, index) => (\n              <EntryListItem key={`${entry.id}-${text}-${index}`}>\n                <EntryDualLanguage>{text as DualLanguageValue}</EntryDualLanguage>\n              </EntryListItem>\n            ))}\n          </EntryList>\n        );\n      }\n\n      console.log('Skip', key, value);\n      return <Fragment key={key}></Fragment>;\n    });\n  }, [kind]);\n\n  return (\n    <Card title={entry.id} className=\"resource-card\" size=\"small\">\n      {entries}\n    </Card>\n  );\n}\n\nconst isDualLanguage = (value: any) => {\n  return typeof value === 'object' && value.pt && value.en;\n};\n\nconst isPrimitive = (value: any) => {\n  return typeof value === 'string' || typeof value === 'number';\n};\n\nconst isArray = (value: any) => {\n  return Array.isArray(value);\n};\n\nconst isArrayOfStrings = (value: any) => {\n  return isArray(value) && typeof value[0] === 'string';\n};\n\nconst isLanguage = (value: any) => {\n  return value === 'pt' || value === 'en';\n};\n\nconst isArrayOfDualLanguage = (value: any) => {\n  return isArray(value) && isDualLanguage(value[0]);\n};\n","import { Col, Row, Typography } from 'antd';\nimport { CardEntry } from 'components/ResourceCards';\n\ntype ResourceCardsProps = {\n  response: any;\n  resourceName: string | null;\n};\n\nexport function ResourceCards({ response, resourceName }: ResourceCardsProps) {\n  const list: any[] = Object.values(response);\n\n  return (\n    <>\n      <Typography.Title level={2}>Cards ({list.length})</Typography.Title>\n\n      <Row gutter={[16, 16]}>\n        {list.map((entry) => {\n          return (\n            <Col xs={6} sm={6} md={4} lg={8} xl={6} key={entry.id}>\n              <CardEntry entry={entry} kind={resourceName ?? ''} />\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n}\n","import { AppstoreOutlined, FileTextOutlined, TableOutlined } from '@ant-design/icons';\nimport { FilterSegments } from 'components/Common';\n\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\nexport function ResourceDisplayMode() {\n  const { queryParams, addParam } = useQueryParams();\n\n  return (\n    <SiderContent>\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'json'}\n        onChange={(mode) => addParam('display', mode)}\n        options={[\n          {\n            title: 'JSON',\n            icon: <FileTextOutlined />,\n            value: 'json',\n          },\n          {\n            title: 'Table',\n            icon: <TableOutlined />,\n            value: 'table',\n          },\n          {\n            title: 'Cards',\n            icon: <AppstoreOutlined />,\n            value: 'cards',\n          },\n        ]}\n      />\n    </SiderContent>\n  );\n}\n","import { Col, Input, Row, Typography } from 'antd';\nimport { CopyToClipboardButton } from 'components/CopyToClipboardButton';\n\nimport { useMemo } from 'react';\n\nimport { SearchDuplicates } from '../SearchDuplicates';\n\nimport { SEARCH_PROPERTY } from '../../utils/constants';\n\ntype ResourceJsonProps = {\n  response: any;\n  resourceName: string | null;\n};\n\nexport function ResourceJson({ response, resourceName }: ResourceJsonProps) {\n  const property = resourceName ? SEARCH_PROPERTY[resourceName] : 'text';\n\n  const jsonString = useMemo(() => JSON.stringify(response, null, 4), [response]);\n\n  return (\n    <>\n      <Typography.Title level={2}>\n        JSON <CopyToClipboardButton content={jsonString} />\n      </Typography.Title>\n\n      <Row gutter={16}>\n        <Col span={16}>\n          <Input.TextArea name=\"output\" id=\"\" cols={15} rows={30} readOnly value={jsonString} />\n        </Col>\n        <Col span={8}>\n          <SearchDuplicates response={response} property={property} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Col, Row, Table, Typography } from 'antd';\nimport { CopyToClipboardButton } from 'components/CopyToClipboardButton';\n\nimport { useMemo } from 'react';\n\ntype ResourceCardsProps = {\n  response: any;\n  resourceName: string | null;\n};\n\nexport function ResourceTable({ response }: ResourceCardsProps) {\n  const list: any[] = Object.values(response);\n\n  const columns = useMemo(() => {\n    const keys: Record<string, boolean> = {};\n\n    list.forEach((entry) => {\n      Object.keys(entry).forEach((key) => {\n        if (keys[key] === undefined) {\n          keys[key] = true;\n        }\n      });\n    });\n\n    return Object.keys(keys).map((key) => ({\n      title: key,\n      dataIndex: key,\n      key,\n      render: (v: any) => {\n        const content = typeof v === 'string' ? v : JSON.stringify(v, null, 2);\n        return (\n          <span>\n            {content} {!!content.trim() && <CopyToClipboardButton content={content} />}\n          </span>\n        );\n      },\n    }));\n  }, [list]);\n\n  return (\n    <>\n      <Typography.Title level={2}>Table ({list.length})</Typography.Title>\n\n      <Row gutter={16}>\n        <Col span={24}>\n          <Table columns={columns} dataSource={list} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Layout } from 'antd';\nimport { ResponseState } from 'components/Common';\nimport { PageLayout } from 'components/Layout';\nimport { ResourceCards } from 'components/Resource/ResourceCards';\nimport { ResourceDisplayMode } from 'components/Resource/ResourceDisplayMode';\nimport { ResourceJson } from 'components/Resource/ResourceJson';\nimport { ResourceTable } from 'components/Resource/ResourceTable';\n\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { ResourceSelectionFilters } from 'components/Resource/ResourceSelectionFilters';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { useResourceState } from 'hooks/useResourceState';\nimport { RESOURCE_NAMES } from 'utils/constants';\n\nconst resourceNames = Object.values(RESOURCE_NAMES);\n\nfunction Resource() {\n  const {\n    resourceName = '',\n    language = '',\n    isLoading,\n    enabled,\n    error,\n    hasResponseData,\n    response,\n  } = useResourceState(resourceNames);\n\n  const { queryParams } = useQueryParams();\n  const display = queryParams.get('display') ?? 'json';\n\n  return (\n    <PageLayout\n      title=\"Resource\"\n      subtitle={resourceName && language ? `Data for ${resourceName}-${language}` : ''}\n    >\n      <Layout hasSider>\n        <PageSider>\n          <ResponseState\n            hasResponseData={hasResponseData}\n            isLoading={isLoading}\n            error={error}\n            isIdle={!enabled}\n          />\n          <ResourceSelectionFilters resourceNames={resourceNames} />\n          <ResourceDisplayMode />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={isLoading}\n            error={error}\n            hasResponseData={hasResponseData}\n            isIdle={!enabled}\n          >\n            {display === 'json' && (\n              <ResourceJson response={response ?? {}} resourceName={resourceName ?? ''} />\n            )}\n\n            {display === 'table' && (\n              <ResourceTable response={response ?? {}} resourceName={resourceName ?? ''} />\n            )}\n\n            {display === 'cards' && (\n              <ResourceCards response={response ?? {}} resourceName={resourceName ?? ''} />\n            )}\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default Resource;\n"],"names":["BrazilFlag","props","xmlns","viewBox","fill","d","cx","cy","r","UnitedStatesFlag","LanguageFlag","language","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","TagState","isLoading","isIdle","error","isDirty","isError","hasResponseData","color","ResponseState","label","CopyToClipboardButton","content","shape","icon","size","buttonProps","copyToClipboard","useCopyToClipboardFunction","onClick","ResourceSelectionFilters","resourceNames","queryParams","addParam","useQueryParams","form","Form","currentResourceName","setCurrentResourceName","useState","get","layout","onFinish","v","isDualLanguageResource","DUAL_LANGUAGE_RESOURCES","resourceName","initialValues","name","style","minWidth","value","onChange","e","map","disabled","LANGUAGES","entry","type","htmlType","SearchDuplicates","response","property","searchResults","setSearchResults","target","str","stringRemoveAccents","trim","toLowerCase","length","SEARCH_THRESHOLD","findSimilar","placeholder","id","cols","rows","readOnly","JSON","stringify","state","useCopyToClipboard","message","App","useEffect","info","truncate","omission","success","defaultParams","searchParams","setSearchParams","useSearchParams","key","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","Object","entries","forEach","removeParam","is","useEffectOnce","has","useResourceState","availableResources","getUrl","useBaseUrl","enabled","includes","data","useQuery","queryKey","queryFn","async","url","res","fetch","body","json","Boolean","Label","Value","Entry","EntryList","EntryListItem","EntryDualLanguage","width","en","pt","EntryLanguage","EntryNSFW","FireFilled","CardEntry","kind","keys","filter","useMemo","isDualLanguage","isLanguage","isPrimitive","isArrayOfStrings","text","index","isArrayOfDualLanguage","values","console","log","Fragment","title","isArray","Array","ResourceCards","list","gutter","xs","sm","md","lg","xl","ResourceDisplayMode","mode","options","FileTextOutlined","TableOutlined","AppstoreOutlined","ResourceJson","SEARCH_PROPERTY","jsonString","span","ResourceTable","columns","dataIndex","render","dataSource","RESOURCE_NAMES","display","subtitle","hasSider","PageSider","DataLoadingWrapper"],"sourceRoot":""}