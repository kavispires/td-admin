{"version":3,"file":"static/js/ItemsDiagramSets.239f8837.chunk.js","mappings":"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","sources":["components/Common/DownloadButton.tsx","components/Common/SaveButton.tsx","components/Common/SectionTitle.tsx","components/Common/TransparentButton.tsx","components/Common/FilterEntries.tsx","components/Common/ResponseState.tsx","components/Daily/utils/games/daily-teoria-de-conjuntos.ts","components/Daily/utils/utils.ts","components/Items/Diagram/utils.ts","hooks/useQueryParams.ts","hooks/useResourceFirebaseData.ts","hooks/useUpdateFirebaseDoc.tsx","components/Items/Diagram/ItemsDiagramFilters.tsx","components/Items/Diagram/EditThingModal.tsx","components/Items/Diagram/AddNewThingFlow.tsx","components/Items/Diagram/Thing.tsx","components/Items/Diagram/DiagramGameSample.tsx","components/Items/Diagram/RulesByThing.tsx","components/Items/Diagram/ThingsByRule.tsx","components/Items/Diagram/ItemUpdateGuard.tsx","components/Items/Diagram/GameSimulator.tsx","components/Items/Diagram/ItemsDiagramSetsContent.tsx","pages/Items/ItemsDiagramSets.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\nimport { downloadObjectAsFile } from 'utils';\n\ntype DownloadButtonProps = {\n  data: PlainObject | Function;\n  fileName: string;\n} & ButtonProps;\n\n/**\n * Button to download a JSON object as a file\n */\nexport function DownloadButton({ data, fileName, loading, ...props }: DownloadButtonProps) {\n  return (\n    <Button\n      onClick={() => downloadObjectAsFile(typeof data === 'function' ? data() : data, fileName)}\n      loading={loading}\n      {...props}\n    >\n      Download JSON\n    </Button>\n  );\n}\n","import { Button, ButtonProps } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useTimeoutFn } from 'react-use';\n\nimport { SaveOutlined } from '@ant-design/icons';\nimport { useGlobalContext } from 'context/GlobalContext';\n\ntype SaveButtonProps = {\n  isDirty: boolean;\n  dirt?: string | number;\n  onSave: (args?: unknown) => void;\n  isSaving: boolean;\n  interval?: number;\n} & Omit<ButtonProps, 'icon' | 'type' | 'size' | 'danger'>;\n\nexport function SaveButton({\n  isDirty,\n  onSave,\n  isSaving,\n  dirt,\n  interval = 10 * 60 * 1000,\n  ...buttonProps\n}: SaveButtonProps) {\n  const { togglePendingSave } = useGlobalContext();\n\n  // It saves after 10 minutes of the first time of being dirty, unless 'dirt' is provided and changed\n  const [, cancel, reset] = useTimeoutFn(() => {\n    if (isDirty) {\n      onSave();\n    }\n  }, interval); // 10 minutes in milliseconds\n\n  // Reset the timeout if `isDirty` is true and dirt has\n  useEffect(() => {\n    if (isDirty) {\n      togglePendingSave(true);\n      console.log('Save Reset', moment(Date.now()).format('MM/DD/YYYY HH:mm:ss'));\n      reset(); // Start or reset the timeout if `isDirty` is true and dirt has changed\n    } else {\n      togglePendingSave(false);\n      cancel(); // Cancel the timeout if `isDirty` becomes false\n    }\n  }, [isDirty, reset, cancel, dirt]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Prevents the user from leaving the page if there are unsaved changes (browser navigation or refresh)\n  useEffect(() => {\n    const handleBeforeUnload = (event: any) => {\n      if (isDirty) {\n        const message = 'You have unsaved changes, are you sure you want to leave?';\n        // alert(message);\n        event.returnValue = message; // Standard way to set message\n        return message; // For some browsers\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  return (\n    <Button\n      type=\"primary\"\n      size=\"large\"\n      icon={<SaveOutlined />}\n      onClick={onSave}\n      disabled={!isDirty}\n      loading={isSaving}\n      danger\n      block\n      {...buttonProps}\n    >\n      Save\n    </Button>\n  );\n}\n","import { Typography } from 'antd';\nimport { TitleProps } from 'antd/lib/typography/Title';\n\nexport function SectionTitle({ children, level, ...rest }: TitleProps) {\n  return (\n    <Typography.Title level={level ?? 3} {...rest}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Checkbox, Form, InputNumber, Segmented, Select, Switch, Tooltip } from 'antd';\nimport { SegmentedValue } from 'antd/es/segmented';\nimport { ReactNode } from 'react';\n\ntype StrOrNum = string | number;\n\ntype FilterSelectProps = {\n  label: ReactNode;\n  value: string | number;\n  onChange: (value: any) => void;\n  options: { value: StrOrNum; label: StrOrNum }[] | StrOrNum[];\n  placeholder?: string;\n};\n\nexport function FilterSelect({ label, value, onChange, options, placeholder }: FilterSelectProps) {\n  return (\n    <Form.Item label={label}>\n      <Select style={{ minWidth: '150px' }} onChange={onChange} value={value}>\n        {placeholder && (\n          <Select.Option value={''} disabled>\n            placeholder\n          </Select.Option>\n        )}\n        {options.map((entry) =>\n          typeof entry === 'object' ? (\n            <Select.Option key={`${label}-${entry.value}`} value={entry.value}>\n              {entry.label}\n            </Select.Option>\n          ) : (\n            <Select.Option key={`${label}-${entry}`} value={entry}>\n              {entry}\n            </Select.Option>\n          )\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\ntype FilterNumberProps = {\n  label: ReactNode;\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nexport function FilterNumber({ label, value, onChange, min = 0, max = 100, step }: FilterNumberProps) {\n  return (\n    <Form.Item label={label}>\n      <InputNumber\n        min={min}\n        max={max}\n        value={value}\n        onChange={(v) => onChange(v ?? max)}\n        style={{ minWidth: '150px', width: '100%' }}\n        step={step}\n      />\n    </Form.Item>\n  );\n}\n\ntype FilterSwitchProps = {\n  label: ReactNode;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport function FilterSwitch({ label, value, onChange, className, disabled }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Switch checked={value} onChange={onChange} size=\"small\" disabled={disabled} />\n    </Form.Item>\n  );\n}\n\nexport function FilterCheckBox({ label, value, onChange, disabled, className }: FilterSwitchProps) {\n  return (\n    <Form.Item label={label} valuePropName=\"checked\" className={className}>\n      <Checkbox checked={value} onChange={(e) => onChange(e.target.checked)} disabled={disabled} />\n    </Form.Item>\n  );\n}\n\ntype FilterSegmentsProps = {\n  label: ReactNode;\n  value?: string;\n  onChange: (mode: SegmentedValue) => void;\n  options: { value: string; title: string; icon: ReactNode }[];\n};\n\nexport function FilterSegments({ value, label, onChange, options }: FilterSegmentsProps) {\n  return (\n    <Form.Item label={label} layout={options.length > 2 ? 'vertical' : 'horizontal'}>\n      <Segmented\n        block\n        value={value}\n        onChange={onChange}\n        options={options.map((option) => ({\n          label: (\n            <Tooltip arrow trigger=\"hover\" title={option.title}>\n              {option.icon}\n            </Tooltip>\n          ),\n          value: option.value,\n        }))}\n      />\n    </Form.Item>\n  );\n}\n","import { Form, Tag } from 'antd';\nimport { SiderContent } from 'components/Layout';\n\ntype TagStateProps = {\n  /**\n   * The data is loading\n   */\n  isLoading: boolean;\n  /**\n   * The data hasn't run a query yet\n   */\n  isIdle?: boolean;\n  /**\n   * The data has an error\n   */\n  isError?: boolean;\n  /**\n   * The data has an error\n   */\n  error?: ResponseError;\n  /**\n   * The data has been modified\n   */\n  isDirty?: boolean;\n  /**\n   * There is a response\n   */\n  hasResponseData: boolean;\n};\n\nexport function TagState({ isLoading, isIdle, error, isDirty, isError, hasResponseData }: TagStateProps) {\n  if (isIdle) return <Tag>No Data yet</Tag>;\n  if (isLoading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error || isError) return <Tag color=\"red\">Error</Tag>;\n  if (isDirty) return <Tag color=\"orange\">Modified</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\nexport function ResponseState(props: TagStateProps) {\n  return (\n    <SiderContent>\n      <Form.Item label=\"Status\">\n        <TagState {...props} />\n      </Form.Item>\n    </SiderContent>\n  );\n}\n","import { DailyTeoriaDeConjuntosEntry, ParsedDailyHistoryEntry } from '../types';\nimport { cloneDeep, difference, intersection, sample, sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from '../utils';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { getIsThingOutdated, getLatestRuleUpdate } from 'components/Items/Diagram/utils';\n\nexport const buildDailyTeoriaDeConjuntosGames = (\n  batchSize: number,\n  history: ParsedDailyHistoryEntry,\n  rules: Dictionary<DailyDiagramRule>,\n  things: Dictionary<DailyDiagramItem>\n) => {\n  console.count('Creating Teoria de Conjuntos...');\n  let lastDate = history.latestDate;\n  const used: string[] = [...history.used];\n\n  const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n  const thingsByRules = (() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    Object.values(things).forEach((entry) => {\n      // Only use things that are not outdated\n      if (!getIsThingOutdated(entry, latestRuleUpdate)) {\n        entry.rules.forEach((ruleId) => {\n          dict[ruleId].push(entry.itemId);\n        });\n      }\n    });\n    return dict;\n  })();\n\n  const entries: Dictionary<DailyTeoriaDeConjuntosEntry> = {};\n  for (let i = 0; i < batchSize; i++) {\n    const id = getNextDay(lastDate);\n\n    lastDate = id;\n    entries[id] = {\n      id,\n      type: 'teoria-de-conjuntos',\n      number: history.latestNumber + i + 1,\n      ...getRuleSet(things, thingsByRules, rules, used, latestRuleUpdate),\n    };\n  }\n  return entries;\n};\n\nfunction getRuleSet(\n  things: Dictionary<DailyDiagramItem>,\n  thingsByRules: Record<string, string[]>,\n  rules: Dictionary<DailyDiagramRule>,\n  used: string[],\n  latestRuleUpdate: number\n) {\n  const availableThingsIds = shuffle(\n    Object.keys(things).filter(\n      (id) => !used.includes(id) && !getIsThingOutdated(things[id], latestRuleUpdate)\n    )\n  );\n\n  // Get one random initial thing\n  const initialThingId = sample(availableThingsIds);\n  if (!initialThingId) throw new Error('No available things to choose from');\n  used.push(initialThingId);\n\n  const intersectingThing = {\n    id: initialThingId,\n    name: things[initialThingId].name,\n  };\n\n  // Group rules by type than get a random pair of rules of different types\n  const thingsRulesByType = things[initialThingId].rules.reduce((acc: Record<string, string[]>, ruleId) => {\n    const type = rules[ruleId].type;\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(ruleId);\n    return acc;\n  }, {});\n  // Delete any rule with less than 2 rules\n  Object.keys(thingsRulesByType).forEach((type) => {\n    if (thingsRulesByType[type].length < 2) delete thingsRulesByType[type];\n  });\n\n  const twoRandomTypes = sampleSize(Object.keys(thingsRulesByType), 2);\n\n  if (twoRandomTypes.length !== 2) throw new Error('No types found for this thing');\n  const selectedRules = [\n    sample(thingsRulesByType[twoRandomTypes[0]]),\n    sample(thingsRulesByType[twoRandomTypes[1]]),\n  ];\n  if (!selectedRules[0] || !selectedRules[1]) throw new Error('No rules found for this thing');\n\n  const ruleId = [selectedRules[0], selectedRules[1]].sort().join('-');\n  used.push(ruleId);\n\n  const level = rules[selectedRules[0]].level + rules[selectedRules[1]].level - 1;\n\n  const availableThingsByRules = cloneDeep(thingsByRules);\n  // Removed the initial thing from the available things\n  delete availableThingsByRules[initialThingId];\n\n  const itemsOnlyInRule1 = shuffle(\n    difference(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]])\n  );\n\n  const itemsOnlyInRule2 = shuffle(\n    difference(thingsByRules[selectedRules[1]], thingsByRules[selectedRules[0]])\n  );\n\n  const commonItems = shuffle(intersection(thingsByRules[selectedRules[0]], thingsByRules[selectedRules[1]]));\n\n  // Get one unique initial thing that only fits rule 1\n  const selectedInitialThingId1 = itemsOnlyInRule1.pop();\n  if (!selectedInitialThingId1) throw new Error('No only in rule 1 things to choose from');\n  const rule1 = {\n    id: selectedRules[0],\n    text: rules[selectedRules[0]].title,\n    level: rules[selectedRules[0]].level,\n    thing: {\n      id: selectedInitialThingId1,\n      name: things[selectedInitialThingId1].name,\n    },\n  };\n\n  // Get one unique initial thing that only fits rule 2\n  const selectedInitialThingId2 = itemsOnlyInRule2.pop();\n  if (!selectedInitialThingId2) throw new Error('No only in rule 2 things to choose from');\n  const rule2 = {\n    id: selectedRules[1],\n    text: rules[selectedRules[1]].title,\n    level: rules[selectedRules[1]].level,\n    thing: {\n      id: selectedInitialThingId2,\n      name: things[selectedInitialThingId2].name,\n    },\n  };\n\n  // Get up to 4 unique things that fit both rules, if possible\n  const sampleCommonThings = sampleSize(commonItems, 4);\n  const sampleRule1Things = sampleSize(itemsOnlyInRule1, 8);\n  const sampleRule2Things = sampleSize(itemsOnlyInRule2, 8);\n  const gabarito: Record<string, number> = {};\n  sampleCommonThings.forEach((id) => (gabarito[id] = 0));\n  sampleRule1Things.forEach((id) => (gabarito[id] = 1));\n  sampleRule2Things.forEach((id) => (gabarito[id] = 2));\n\n  // Sample 8 things among the options\n  const selectionIds = sampleSize([...sampleCommonThings, ...sampleRule1Things, ...sampleRule2Things], 8);\n\n  const selectedThings = selectionIds.map((id) => ({\n    id,\n    name: things[id].name,\n    rule: gabarito[id],\n  }));\n\n  // Build title\n  const TITLES: Record<string, string> = {\n    contains: 'Inclusão',\n    starts: 'Inicialização',\n    ends: 'Terminação',\n    grammar: 'Gramática',\n    order: 'Sequência',\n    count: 'Contagem',\n    comparison: 'Comparação',\n    repetition: 'Repetição',\n  };\n\n  const title = [\n    TITLES?.[rules[rule1.id].type] ?? 'Desconhecido',\n    TITLES?.[rules[rule2.id].type] ?? 'Desconhecido',\n  ].join(' vs ');\n  const setId = [rule1.id, rule2.id].sort().join('::');\n\n  // Create the DailyTeoriaDeConjuntosEntry object\n  const entry: Omit<DailyTeoriaDeConjuntosEntry, 'id' | 'type' | 'number'> = {\n    title,\n    setId,\n    level,\n    rule1,\n    rule2,\n    intersectingThing,\n    things: selectedThings,\n  };\n  return entry;\n}\n","import { sample } from 'lodash';\nimport moment from 'moment';\n\n/**\n * Returns the current date in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The current date in 'YYYY-MM-DD' format.\n */\nexport function getToday(): string {\n  return moment().format('YYYY-MM-DD');\n}\n\n/**\n * Returns the date of yesterday in the format 'YYYY-MM-DD'.\n *\n * @returns {string} The date of yesterday in 'YYYY-MM-DD' format.\n */\nexport function getYesterday(): string {\n  return moment().subtract(1, 'days').format('YYYY-MM-DD');\n}\n\n/**\n * Calculates the next day based on the given date string.\n *\n * @param dateString - The date string in the format 'YYYY-MM-DD'.\n * @returns The next day in the format 'YYYY-MM-DD'.\n */\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n\n/**\n * Checks if a given date is a Saturday or Sunday.\n *\n * @param {string} dateString - The date in 'YYYY-MM-DD' format.\n * @returns {boolean} True if the date is a Saturday or Sunday, false otherwise.\n */\nexport function checkWeekend(dateString: string): boolean {\n  const date = moment(dateString, 'YYYY-MM-DD');\n  return [6, 0].includes(date.day()); // 0 represents Sunday and 6 represents Saturday in moment.js\n}\n\nconst THRESHOLD = 500;\nexport function getWordsWithUniqueLetters(words: string[]): string[] {\n  const selectedWords: string[] = [];\n  const usedLetters: BooleanDictionary = {};\n  let tries = 0;\n\n  while (selectedWords.length < 4 && tries < THRESHOLD) {\n    const word = sample(words) ?? '';\n    const splitWord = word.split('');\n    const isGood = splitWord.every((letter) => !usedLetters[letter]);\n    if (isGood) {\n      selectedWords.push(word);\n      splitWord.forEach((letter) => {\n        usedLetters[letter] = true;\n      });\n    } else {\n      tries++;\n    }\n  }\n  if (tries > THRESHOLD || selectedWords.length < 4) {\n    console.count('Could not find 4 words with unique letters');\n    while (selectedWords.length < 4) {\n      const word = sample(words) ?? '';\n      if (!selectedWords.includes(word)) {\n        selectedWords.push(word);\n      }\n    }\n  }\n\n  if (selectedWords.length < 4) {\n    console.error('Could not find 4 words with unique letters', selectedWords);\n  }\n\n  return selectedWords;\n}\n","import { memoize } from 'lodash';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { stringRemoveAccents } from 'utils';\n\nexport const SYLLABLE_SEPARATOR = '|';\nexport const LETTERS = 'abcdefghijklmnopqrstuvwxyz';\nexport const CONSONANTS = 'bcdfghjklmnpqrstvwxyz';\nexport const VOWELS = 'aeiou';\nexport const ACCENTS = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n\nconst cleanupWord = memoize((word: string) => {\n  return stringRemoveAccents(word).toLowerCase();\n});\n\nconst countLetters = (word: string) => {\n  return cleanupWord(word).length;\n};\n\nconst countVowels = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => VOWELS.includes(letter)).length;\n};\n\nconst countConsonants = (word: string) => {\n  return cleanupWord(word)\n    .split('')\n    .filter((letter) => CONSONANTS.includes(letter)).length;\n};\n\nconst countAccents = (word: string) => {\n  return word\n    .toLowerCase()\n    .split('')\n    .filter((letter) => ACCENTS.test(letter)).length;\n};\n\nconst countWords = (text: string) => {\n  return text.split(' ').length;\n};\n\nexport const verifiers: Record<string, (word: string) => boolean> = {\n  // The first two letters are in alphabetical order\n  'ddr-7-pt': (word: string) => {\n    return LETTERS.indexOf(cleanupWord(word)[0]) < LETTERS.indexOf(cleanupWord(word)[1]);\n  },\n  // has 4 or less letters\n  'ddr-8-pt': (word: string) => countLetters(word) <= 4,\n  // Has exactly 5 letters\n  'ddr-9-pt': (word: string) => countLetters(word) === 5,\n  // Has 6 letters\n  'ddr-10-pt': (word: string) => countLetters(word) === 6,\n  // Has between 7\n  'ddr-11-pt': (word: string) => countLetters(word) === 7,\n  // Has more than 8 letters\n  'ddr-12-pt': (word: string) => countLetters(word) > 7,\n  // Has more than 1 word\n  'ddr-13-pt': (word: string) => countWords(word) > 1,\n  // Has two or more different vowels\n  'ddr-14-pt': (word: string) => {\n    const vowels = cleanupWord(word)\n      .split('')\n      .filter((letter) => VOWELS.includes(letter));\n    return new Set(vowels).size >= 2;\n  },\n  // Has 4 or less unique letters\n  'ddr-15-pt': (word: string) => new Set(cleanupWord(word).split('')).size <= 4,\n  // Has more consonants than vowels\n  'ddr-16-pt': (word: string) => countConsonants(word) > countVowels(word),\n  // Has more vowels than consonants\n  'ddr-17-pt': (word: string) => countVowels(word) > countConsonants(word),\n  // The first letter is repeated at least once\n  'ddr-18-pt': (word: string) => {\n    const firstLetter = cleanupWord(word)[0];\n    return cleanupWord(word).slice(1).includes(firstLetter);\n  },\n  // has repeated letters\n  'ddr-19-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) =>\n        cleanupWord(word)\n          .slice(index + 1)\n          .includes(letter)\n      );\n  },\n  // has repeated vowels\n  'ddr-20-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          VOWELS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has repeated consonants\n  'ddr-21-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some(\n        (letter, index) =>\n          CONSONANTS.includes(letter) &&\n          cleanupWord(word)\n            .slice(index + 1)\n            .includes(letter)\n      );\n  },\n  // has consecutive vowels\n  'ddr-22-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => VOWELS.includes(letter) && VOWELS.includes(word[index + 1]));\n  },\n  // starts with letters from A to M\n  'ddr-23-pt': (word: string) => 'abcdefghijklm'.includes(cleanupWord(word)[0]),\n  // starts with letters from N to Z\n  'ddr-24-pt': (word: string) => 'nopqrstuvwxyz'.includes(cleanupWord(word)[0]),\n  // starts with a vowel\n  'ddr-25-pt': (word: string) => VOWELS.includes(cleanupWord(word)[0]),\n  // starts with a consonant\n  'ddr-26-pt': (word: string) => CONSONANTS.includes(cleanupWord(word)[0]),\n  // Double consecutive consonants\n  'ddr-27-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => CONSONANTS.includes(letter) && word[index + 1] === letter);\n  },\n  // Has an A\n  'ddr-28-pt': (word: string) => cleanupWord(word).includes('a'),\n  // Has an E\n  'ddr-29-pt': (word: string) => cleanupWord(word).includes('e'),\n  // Has an U\n  'ddr-30-pt': (word: string) => cleanupWord(word).includes('u'),\n  // Has a Q or J\n  'ddr-31-pt': (word: string) => cleanupWord(word).includes('q') || cleanupWord(word).includes('j'),\n  // Has a C or Ç\n  'ddr-32-pt': (word: string) => cleanupWord(word).includes('c') || cleanupWord(word).includes('ç'),\n  // Has an M or N followed by a consonant\n  'ddr-33-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (['m', 'n'].includes(letter) && CONSONANTS.includes(word[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has an H\n  'ddr-34-pt': (word: string) => cleanupWord(word).includes('h'),\n  // Has H preceded by a consonant\n  'ddr-35-pt': (word: string) => {\n    return cleanupWord(word)\n      .split('')\n      .some((letter, index) => {\n        if (letter === 'h' && CONSONANTS.includes(word[index - 1])) {\n          return true;\n        }\n        return false;\n      });\n  },\n  // Has K, W or Y\n  'ddr-36-pt': (word: string) =>\n    cleanupWord(word).includes('k') || cleanupWord(word).includes('w') || cleanupWord(word).includes('y'),\n  // Has an accent\n  'ddr-37-pt': (word: string) => countAccents(word) > 0,\n  // Ends with a vowel\n  'ddr-38-pt': (word: string) => {\n    return VOWELS.includes(cleanupWord(word).slice(-1));\n  },\n  // Ends with a consonant\n  'ddr-39-pt': (word: string) => CONSONANTS.includes(cleanupWord(word).slice(-1)),\n  // Ends with an S\n  'ddr-40-pt': (word: string) => cleanupWord(word).slice(-1) === 's',\n  // Has an I\n  'ddr-47-pt': (word: string) => cleanupWord(word).includes('i'),\n  // Has an O\n  'ddr-48-pt': (word: string) => cleanupWord(word).includes('o'),\n};\n\nexport const syllableDependencyVerifier: Record<string, (syllables: string) => boolean> = {\n  // Has 2 syllables\n  'ddr-3-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 2,\n  // Has 3 syllables\n  'ddr-4-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 3,\n  // Has 4 syllables\n  'ddr-22-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 4,\n  // Has two consecutive vowels on the same syllable\n  'ddr-41-pt': (syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable) => {\n      return syllable.split('').some((letter, index) => {\n        if (VOWELS.includes(letter) && VOWELS.includes(syllable[index + 1])) {\n          return true;\n        }\n        return false;\n      });\n    });\n  },\n  // Has two consecutive vowels on different syllables\n  'ddr-42-pt': (syllables: string) => {\n    return syllables.split(SYLLABLE_SEPARATOR).some((syllable, index) => {\n      if (index === 0) {\n        return false;\n      }\n      return syllable[0] === syllables.split(SYLLABLE_SEPARATOR)[index - 1].slice(-1);\n    });\n  },\n  // Single syllable word\n  'ddr-46-pt': (syllables: string) => syllables.split(SYLLABLE_SEPARATOR).length === 1,\n};\n\nexport const stressSyllableDependencyVerifier: Record<\n  string,\n  (syllables: string, stress: number) => boolean\n> = {\n  // The stress syllable is on the last syllable (oxitona)\n  'ddr-43-pt': (_syllables: string, stress: number) => {\n    return stress === 0;\n  },\n  // The stress syllable is on the second to last syllable (paroxitona)\n  'ddr-44-pt': (_syllables: string, stress: number) => {\n    return stress === 1;\n  },\n  // The stress syllable is on the third to last syllable (proparoxitona)\n  'ddr-45-pt': (_syllables: string, stress: number) => {\n    return stress === 2;\n  },\n};\n\nexport const getLatestRuleUpdate = (rules: Dictionary<DailyDiagramRule>) => {\n  return Object.values(rules).reduce((acc, rule) => {\n    return Math.max(acc, rule.updatedAt);\n  }, 0);\n};\n\nexport const getIsThingOutdated = (thing: DailyDiagramItem, latestRuleUpdate: number) => {\n  return latestRuleUpdate > thing.updatedAt;\n};\n\nconst checkIsVowel = (char: string) => VOWELS.includes(stringRemoveAccents(char));\nconst checkIsConsonant = (char: string) => CONSONANTS.includes(stringRemoveAccents(char));\nconst LMNRS = ['s', 'r', 'l', 'm', 'n'];\nconst DOUBLE_LETTERS = [\n  'rr',\n  'ss',\n  'st',\n  'sc',\n  'lm',\n  'ld',\n  'mp',\n  'mb',\n  'rn',\n  'rm',\n  'rt',\n  'rd',\n  'lt',\n  'ld',\n  'nt',\n  'nd',\n  'sp',\n  'ls',\n];\n/**\n * Guesses the separation of syllables in a given word.\n * @param word - The word for which to guess the syllables separation.\n * @returns The guessed syllables separation as a string.\n */\nexport const guessSyllablesSeparation = (word: string): string => {\n  let syllables: string[] = [];\n  let currentSyllable = '';\n\n  const stringWithoutAccents = stringRemoveAccents(word);\n\n  for (let i = 0; i < word.length; i++) {\n    const char = stringWithoutAccents[i];\n    // Space makes a syllable\n    if (char === ' ') {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n      continue;\n    }\n\n    // Hyphen makes a syllable\n    if (char === '-') {\n      syllables.push(currentSyllable + '-');\n      currentSyllable = '';\n      continue;\n    }\n\n    if (checkIsVowel(char) && i < stringWithoutAccents.length - 2) {\n      const nextChar = stringWithoutAccents[i + 1];\n      const nextNextChar = stringWithoutAccents[i + 2];\n      // If the next character is a consonant and the next next character is a consonant, the first pair is a syllable\n      if (LMNRS.includes(nextChar) && checkIsConsonant(nextNextChar)) {\n        currentSyllable += word[i] + word[i + 1];\n        i++; // Skip the next character\n        continue;\n      }\n    }\n\n    // Handle \"c\" followed by \"h\", \"r\", or \"l\"\n    if (\n      char === 'c' &&\n      i < stringWithoutAccents.length - 2 &&\n      ['h', 'r', 'l'].includes(stringWithoutAccents[i + 1]) &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle \"l\" or \"n\" followed by \"h\"\n    if (\n      ['l', 'n'].includes(char) &&\n      i < stringWithoutAccents.length - 2 &&\n      stringWithoutAccents[i + 1] === 'h' &&\n      checkIsVowel(stringWithoutAccents[i + 2])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    // Handle consonant followed by vowel followed by consonant cluster\n    if (\n      checkIsConsonant(char) &&\n      i < stringWithoutAccents.length - 3 &&\n      checkIsVowel(stringWithoutAccents[i + 1]) &&\n      LMNRS.includes(stringWithoutAccents[i + 2]) &&\n      checkIsConsonant(stringWithoutAccents[i + 3])\n    ) {\n      currentSyllable += word[i] + word[i + 1] + word[i + 2];\n      i += 2; // Skip the next two characters\n      continue;\n    }\n\n    currentSyllable += word[i];\n\n    if (\n      checkIsVowel(char) &&\n      i < stringWithoutAccents.length - 1 &&\n      !checkIsVowel(stringWithoutAccents[i + 1]) &&\n      !['l', 'r', 'n'].includes(stringWithoutAccents[i + 1])\n    ) {\n      syllables.push(currentSyllable);\n      currentSyllable = '';\n    }\n  }\n\n  if (currentSyllable !== '') {\n    syllables.push(currentSyllable);\n  }\n\n  // As a final effort, if there are syllables with \"rr\" or \"ss\", split them but keep the characters. e.g. carro -> car:ro\n  syllables = syllables.map((syllable) => {\n    for (const doubleLetter of DOUBLE_LETTERS) {\n      if (syllable.includes(doubleLetter)) {\n        return syllable.split(doubleLetter).join(`${doubleLetter[0]}${SYLLABLE_SEPARATOR}${doubleLetter[1]}`);\n      }\n    }\n    return syllable;\n  });\n\n  return syllables.filter(Boolean).join(SYLLABLE_SEPARATOR);\n};\n\n/**\n * Separates the syllables of a given word.\n * @param word - The word to separate syllables from.\n * @returns The word with syllables separated by '|'.\n */\nexport function separateSyllables(word: string): string {\n  const syllablePattern =\n    /([^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*[aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]{1,3}[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]*)(?=[^aeiouáéíóúâêîôûàèìòùãõäëïöüAEIOUÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃÕÄËÏÖÜ]|$)/gi;\n\n  const proposed = word.replace(syllablePattern, '$1|').slice(0, -1);\n\n  return proposed.replace(/\\s/g, '');\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const addParam = (key: string, value: unknown, defaultValue?: unknown) => {\n    if (value === undefined || value === '' || value === defaultValue) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const addParams = (params: Record<string, unknown>, defaultValues: Record<string, unknown> = {}) => {\n    Object.entries(params).forEach(([key, value]) => {\n      if (defaultValues[key] === value) {\n        searchParams.delete(key);\n      } else {\n        searchParams.set(key, String(value));\n      }\n    });\n    setSearchParams(searchParams);\n  };\n\n  const removeParam = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  const is = (key: string, value = 'true') => searchParams.get(key) === String(value);\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        addParam(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return {\n    addParam,\n    addParams,\n    removeParam,\n    queryParams: searchParams,\n    is,\n  };\n}\n","import { App } from 'antd';\nimport { cloneDeep, isEmpty } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { useQueryClient } from '@tanstack/react-query';\n\nimport { useGetFirebaseDoc } from './useGetFirebaseDoc';\nimport { useTDResource } from './useTDResource';\nimport { useUpdateFirebaseDoc } from './useUpdateFirebaseDoc';\nimport { deserializeFirebaseData, serializeFirebaseData } from 'utils';\n\nexport type UseResourceFirebaseDataProps = {\n  tdrResourceName: string;\n  firebaseDataCollectionName: string;\n  serialize?: boolean;\n};\n\nexport type UseResourceFirebaseDataReturnType<TDRData> = {\n  data: Dictionary<TDRData>;\n  isLoading: boolean;\n  error: ResponseError;\n  firebaseData: Dictionary<TDRData> | undefined;\n  isSaving: boolean;\n  save: () => void;\n  addEntryToUpdate: (id: string, item: TDRData) => void;\n  entriesToUpdate: Dictionary<TDRData>;\n  isDirty: boolean;\n};\n\n/**\n * Custom hook that fetches and manages data from both TDR (The Daily Refactor) and Firebase.\n * It merges the data from both sources and provides functions to update and save the data.\n *\n * @template TDRData - The type of data fetched from TDR.\n * @template TFirebaseData - The type of data fetched from Firebase.\n *\n * The hook return object containing the merged data, loading state, error, and functions to update and save the data.\n */\nexport function useResourceFirebaseData<TDRData = PlainObject, TFirebaseData = TDRData>({\n  tdrResourceName,\n  firebaseDataCollectionName,\n  serialize,\n}: UseResourceFirebaseDataProps): UseResourceFirebaseDataReturnType<TDRData> {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const tdrQuery = useTDResource<TDRData>(tdrResourceName);\n  const firebaseQuery = useGetFirebaseDoc<Dictionary<TFirebaseData>, Dictionary<TDRData>>(\n    'tdr',\n    firebaseDataCollectionName,\n    {\n      select: serialize ? deserializeFirebaseData : undefined,\n    }\n  );\n\n  // Keeps track of items that have been modified\n  const [modifiedEntries, setModifiedEntries] = useState<Dictionary<TDRData>>({});\n\n  const mutation = useUpdateFirebaseDoc('tdr', firebaseDataCollectionName, {\n    onSuccess: () => {\n      notification.success({\n        message: `${firebaseDataCollectionName} updated`,\n      });\n      queryClient.refetchQueries({\n        queryKey: ['firebase', 'tdr', firebaseDataCollectionName],\n      });\n      setModifiedEntries({});\n    },\n    onError: (error) => {\n      notification.error({\n        message: `${firebaseDataCollectionName} update failed`,\n        description: error.message,\n      });\n    },\n  });\n\n  const data = useMemo(() => {\n    if (!tdrQuery.isSuccess || !firebaseQuery.isSuccess || mutation.isPending) return {};\n\n    console.log(`%cMerging ${tdrResourceName}+${firebaseDataCollectionName} data...`, 'color: #f0f');\n    return cloneDeep({\n      ...(tdrQuery.data ?? {}),\n      ...(firebaseQuery.data ?? {}),\n      ...modifiedEntries,\n    });\n  }, [\n    tdrResourceName,\n    firebaseDataCollectionName,\n    tdrQuery.data,\n    firebaseQuery.data,\n    tdrQuery.isSuccess,\n    firebaseQuery.isSuccess,\n    mutation.isPending,\n    modifiedEntries,\n  ]);\n\n  const isDirty = !isEmpty(modifiedEntries);\n  const addEntryToUpdate = (id: string, item: TDRData) => {\n    setModifiedEntries((prev) => ({ ...prev, [id]: item }));\n  };\n\n  const firebaseData = firebaseQuery.data;\n\n  const save = () => {\n    mutation.mutate(serialize ? serializeFirebaseData(modifiedEntries) : modifiedEntries);\n  };\n\n  return {\n    data,\n    isLoading: tdrQuery.isLoading || firebaseQuery.isLoading,\n    error: tdrQuery.error || firebaseQuery.error,\n    firebaseData,\n    isSaving: mutation.isPending,\n    save,\n    addEntryToUpdate,\n    entriesToUpdate: modifiedEntries,\n    isDirty,\n  };\n}\n","import { doc, DocumentData, updateDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\n\nimport { QueryKey, useMutation, UseMutationOptions } from '@tanstack/react-query';\n\nexport function updateQueryFunction<TData = PlainObject>(path: string, docId: string, data: TData) {\n  console.log(`%cUpdating ${path}/${docId} from firebase`, 'color: #f00');\n  const docRef = doc(firestore, `${path}/${docId}`);\n  return updateDoc(docRef, data as DocumentData);\n}\n\nexport function useUpdateFirebaseDoc<TData>(\n  path: string,\n  docId: string,\n  options: UseMutationOptions<any, Error, TData, QueryKey> = {}\n) {\n  return useMutation<any, Error, TData, QueryKey>({\n    mutationFn: async (data: TData) => updateQueryFunction<TData>(path, docId, data),\n    ...options,\n  });\n}\n","import { ClusterOutlined, TableOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Typography } from 'antd';\nimport { FilterSegments } from 'components/Common';\nimport { DownloadButton } from 'components/Common/DownloadButton';\nimport { SaveButton } from 'components/Common/SaveButton';\nimport { SiderContent } from 'components/Layout';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { cloneDeep } from 'lodash';\nimport { DailyDiagramItem } from 'types';\nimport { sortJsonKeys } from 'utils';\n\nexport function ItemsDiagramFilters({\n  data,\n  save,\n  isDirty,\n  isSaving,\n  entriesToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const { addParams, queryParams } = useQueryParams();\n  return (\n    <SiderContent>\n      <Flex vertical gap={12}>\n        <SaveButton\n          isDirty={isDirty}\n          onSave={save}\n          isSaving={isSaving}\n          dirt={JSON.stringify(entriesToUpdate)}\n        />\n\n        <DownloadButton\n          data={() => prepareFileForDownload(data)}\n          fileName=\"daily-diagram-items.json\"\n          disabled={isDirty}\n          block\n        />\n      </Flex>\n\n      <Divider />\n\n      <FilterSegments\n        label=\"Display\"\n        value={queryParams.get('display') ?? 'rule'}\n        onChange={(mode) => addParams({ display: mode, page: 1 }, { page: 1 })}\n        options={[\n          {\n            title: 'By Rule',\n            icon: <ClusterOutlined />,\n            value: 'rule',\n          },\n          {\n            title: 'By Thing',\n            icon: <TableOutlined />,\n            value: 'thing',\n          },\n        ]}\n      />\n\n      <Divider />\n\n      <Button size=\"small\" block onClick={() => addParams({ display: 'simulator' })}>\n        Simulator\n      </Button>\n\n      <Typography.Paragraph type=\"secondary\" className=\"my-6\">\n        v2.0.1\n      </Typography.Paragraph>\n    </SiderContent>\n  );\n}\n\nfunction prepareFileForDownload(diagramItems: Dictionary<DailyDiagramItem>) {\n  console.log('Preparing file for download...');\n  const copy = cloneDeep(diagramItems);\n  // Object.values(copy).forEach((item) => {\n  //   item.syllables = (item.syllables ?? '').replace(/·/g, SYLLABLE_SEPARATOR);\n  // });\n  // console.log(copy);\n\n  return sortJsonKeys(copy);\n}\n","import { Affix, Button, Flex, Form, Input, Modal, Radio, Switch } from 'antd';\nimport clsx from 'clsx';\nimport { Item } from 'components/Sprites';\nimport { orderBy } from 'lodash';\nimport { useEffect, useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\n\nimport {\n  separateSyllables,\n  stressSyllableDependencyVerifier,\n  SYLLABLE_SEPARATOR,\n  syllableDependencyVerifier,\n  verifiers,\n} from './utils';\n\nexport type ThingFormValues = Record<string, boolean | string | number>;\n\ntype EditThingModalProps = {\n  isModalOpen: boolean;\n  onSaveThing: (item: DailyDiagramItem) => void;\n  onCancel: () => void;\n  thing: DailyDiagramItem;\n  rules: Dictionary<DailyDiagramRule>;\n  width?: number;\n  itemAliases?: string[];\n  subtitle?: string;\n  okButtonText?: string;\n  onGiveAnotherThing?: () => void;\n};\n\nexport function EditThingModal({\n  isModalOpen,\n  onSaveThing,\n  onCancel,\n  thing,\n  rules,\n  width,\n  itemAliases,\n  subtitle,\n  okButtonText,\n  onGiveAnotherThing,\n}: EditThingModalProps) {\n  // Sort rules properly by type\n  const orderedRules = useMemo(() => {\n    return orderBy(Object.values(rules), [\n      // Not auto\n      (r) => {\n        const index = ['manual', 'dependency', 'auto'].indexOf(r.method);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by type\n      (r) => {\n        const index = ['grammar', 'comparison', 'order', 'count', 'contains', 'ends'].indexOf(r.type);\n        return index === -1 ? Infinity : index;\n      },\n      // Sort by partial title\n      (r) => r.title.slice(0, 7),\n      // Sort by id\n      (r) => Number(r.id.split('-')[1]),\n    ]);\n  }, [rules]);\n\n  // Build initial values\n  const [form] = Form.useForm();\n  const values = Form.useWatch([], form);\n  const hasUndefinedValues = !values || Object.values(values ?? {}).some((value) => value === undefined);\n\n  // Automation: If name is changed, recalculates all rules\n  const nameWatch = Form.useWatch('name', form);\n  useEffect(() => {\n    // If initial state where name is still undefined, ignore\n    if (!nameWatch) return;\n\n    if (thing.name && thing.syllables && nameWatch === thing.name) return;\n\n    // If name changes, recalculate all rules\n    const fields: Record<string, boolean | string | number | undefined> = {\n      syllables: separateSyllables(nameWatch),\n      stressedSyllable: thing.stressedSyllable ?? nameWatch.includes(' ') ? -1 : 0,\n    };\n    Object.keys(rules).forEach((ruleId) => {\n      if (verifiers[ruleId]) {\n        fields[ruleId] = verifiers[ruleId](nameWatch);\n      } else {\n        fields[ruleId] = thing.rules.length > 0 ? thing.rules.includes(ruleId) : undefined;\n      }\n    });\n    form.setFieldsValue(fields);\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Syllables\n  const syllables = Form.useWatch('syllables', form);\n  useEffect(() => {\n    if (syllables) {\n      const syllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (syllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = syllableDependencyVerifier[ruleId](syllables);\n        }\n        return acc;\n      }, {});\n      form.setFieldsValue({\n        ...syllableRulesUpdate,\n        stressedSyllable:\n          syllables === thing.syllables\n            ? thing.stressedSyllable\n            : thing.stressedSyllable ?? nameWatch.includes(' ')\n              ? -1\n              : undefined,\n      });\n    }\n  }, [syllables]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Stressed syllable\n  const stressedSyllable = Form.useWatch('stressedSyllable', form);\n  useEffect(() => {\n    if (stressedSyllable !== undefined) {\n      const stressSyllableRulesUpdate = Object.keys(rules).reduce((acc: Record<string, boolean>, ruleId) => {\n        if (stressSyllableDependencyVerifier[ruleId]) {\n          acc[ruleId] = stressSyllableDependencyVerifier[ruleId](syllables, stressedSyllable);\n        }\n        return acc;\n      }, {});\n\n      form.setFieldsValue({\n        ...stressSyllableRulesUpdate,\n      });\n    }\n  }, [stressedSyllable]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Automation: Male vs Female nouns\n  const rule1 = form.getFieldValue('ddr-1-pt');\n  useEffect(() => {\n    if (rule1 === true) {\n      form.setFieldsValue({ 'ddr-2-pt': false });\n    }\n  }, [rule1]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule2 = form.getFieldValue('ddr-2-pt');\n  useEffect(() => {\n    if (rule2 === true) {\n      form.setFieldsValue({ 'ddr-1-pt': false });\n    }\n  }, [rule2]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: syllable count\n  const rule3 = form.getFieldValue('ddr-3-pt');\n  useEffect(() => {\n    if (rule3 === true) {\n      form.setFieldsValue({ 'ddr-4-pt': false });\n    }\n  }, [rule3]); // eslint-disable-line react-hooks/exhaustive-deps\n  const rule4 = form.getFieldValue('ddr-4-pt');\n  useEffect(() => {\n    if (rule4 === true) {\n      form.setFieldsValue({ 'ddr-3-pt': false });\n    }\n  }, [rule4]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Automation: has hyphen\n  useEffect(() => {\n    const hasHyphen = nameWatch?.includes('-');\n    if (hasHyphen) {\n      form.setFieldsValue({ 'ddr-5-pt': true });\n    }\n  }, [nameWatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onFinish = (values: any) => {\n    const preparedThing = serializeThing(values);\n    onSaveThing(preparedThing);\n  };\n\n  const splitSyllables: string[] = useMemo(() => (syllables ?? '').split(SYLLABLE_SEPARATOR), [syllables]);\n\n  return (\n    <Modal\n      width={width}\n      title={\n        <>\n          Edit {thing.name} {subtitle && <small>{subtitle}</small>}\n        </>\n      }\n      open={isModalOpen}\n      onOk={form.submit}\n      onCancel={onCancel}\n      maskClosable={false}\n      okButtonProps={{ disabled: hasUndefinedValues, htmlType: 'submit', size: 'large' }}\n      okText={okButtonText ?? 'Add Item'}\n    >\n      <Form\n        form={form}\n        name={`new-item-${thing.itemId}`}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n        initialValues={deserializeThing(thing, rules)}\n        layout=\"vertical\"\n        size=\"small\"\n        labelWrap\n      >\n        <div className=\"diagram-container\">\n          <div>\n            <Item id={thing.itemId} width={50} />\n          </div>\n\n          <Form.Item name=\"name\" label=\"Name\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"itemId\" label=\"Item\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Form.Item name=\"syllables\" label=\"Syllables\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item name=\"stressedSyllable\" label=\"Stressed Syllable\">\n            <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n              {splitSyllables.map((syllable, index) => (\n                <Radio key={index} value={splitSyllables.length - index - 1}>\n                  {syllable}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item name=\"updatedAt\" label=\"Updated At\">\n            <Input value={new Date(thing.updatedAt).toLocaleString()} readOnly />\n          </Form.Item>\n\n          {(itemAliases || onGiveAnotherThing) && (\n            <div>\n              {itemAliases && <span>Options: {itemAliases?.join(', ')}</span>}\n              {onGiveAnotherThing && (\n                <Button size=\"small\" onClick={onGiveAnotherThing} type=\"dashed\" className=\"mt-2\">\n                  Give me another thing\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div>\n            <Affix offsetTop={50}>\n              <Flex justify=\"center\" align=\"center\">\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={hasUndefinedValues}>\n                  {okButtonText ?? 'Add Item'}\n                </Button>\n              </Flex>\n            </Affix>\n          </div>\n        </div>\n        <div className=\"diagram-container\">\n          {orderedRules.map((rule) => {\n            if (rule.method === 'auto' && verifiers[rule.id]) {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            if (rule.method === 'dependency') {\n              return (\n                <Form.Item\n                  key={rule.id}\n                  name={rule.id}\n                  label={rule.title}\n                  valuePropName=\"checked\"\n                  className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n                >\n                  <Switch checkedChildren=\"✅\" unCheckedChildren=\"❌\" disabled />\n                </Form.Item>\n              );\n            }\n\n            return (\n              <Form.Item\n                key={rule.id}\n                name={rule.id}\n                label={rule.title}\n                className={clsx(thing.updatedAt < rule.updatedAt && 'diagram-container__outdated-rule')}\n              >\n                <Radio.Group optionType=\"button\" buttonStyle=\"solid\">\n                  <Radio value={true}>✅</Radio>\n                  <Radio value={false}>❌</Radio>\n                </Radio.Group>\n              </Form.Item>\n            );\n          })}\n        </div>\n      </Form>\n    </Modal>\n  );\n}\n\nconst deserializeThing = (\n  thing: DailyDiagramItem,\n  rules: Dictionary<DailyDiagramRule>\n): Record<string, boolean | string | number> => {\n  let wasAnyRuleUpdated = false;\n  return {\n    name: thing.name,\n    itemId: thing.itemId,\n    syllables: thing.syllables ?? separateSyllables(thing.name),\n    stressedSyllable: thing.stressedSyllable ?? 0,\n\n    ...Object.keys(rules).reduce((acc: Record<string, boolean | undefined>, ruleId) => {\n      // Only re-verify if rule is older than the last update\n      if (thing.updatedAt < rules[ruleId].updatedAt) {\n        if (verifiers[ruleId]) {\n          const reVerify = verifiers[ruleId](thing.name);\n          if (reVerify && thing.rules.includes(ruleId)) {\n            wasAnyRuleUpdated = true;\n          }\n          acc[ruleId] = reVerify;\n        } else {\n          acc[ruleId] = undefined;\n        }\n      } else {\n        acc[ruleId] = thing.rules.includes(ruleId);\n      }\n\n      return acc;\n    }, {}),\n    updatedAt: wasAnyRuleUpdated ? Date.now() : thing.updatedAt,\n  };\n};\n\nconst serializeThing = (values: Record<string, boolean | string | number>): DailyDiagramItem => {\n  const { itemId, name, updatedAt, syllables, stressedSyllable, ...thingRules } = values;\n\n  return {\n    itemId: itemId as string,\n    name: name as string,\n    updatedAt: Date.now(),\n    syllables: syllables as string,\n    stressedSyllable: stressedSyllable as number,\n    rules: Object.keys(thingRules).filter((key) => thingRules[key] === true),\n  };\n};\n","import { App, Button } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { sample } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { wait } from 'utils';\nimport { EditThingModal } from './EditThingModal';\n\ntype AddNewThingFlowProps = {\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  width: number;\n};\n\nexport function AddNewThingFlow({ addEntryToUpdate, availableThings, rules, width }: AddNewThingFlowProps) {\n  const { notification } = App.useApp();\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  const onActivateThing = () => {\n    const randomItem = sample(availableThings);\n    if (randomItem) {\n      setActiveThing({\n        itemId: randomItem.id,\n        name: chooseNameThatIsASingleWord(randomItem),\n        updatedAt: Date.now(),\n        syllables: '',\n        stressedSyllable: 0,\n        rules: [],\n      });\n    } else {\n      setActiveThing(null);\n    }\n  };\n\n  const aliases = useMemo(() => {\n    if (!activeThing) return [];\n    const item = availableThings.find((thing) => thing.id === activeThing.itemId);\n    return [item?.name.pt, ...(item?.aliasesPt ?? [])].filter(Boolean);\n  }, [activeThing, availableThings]);\n\n  const onAddItem = async (newThing: DailyDiagramItem) => {\n    if (!activeThing) return;\n    if (!newThing.name || !newThing.itemId) {\n      notification.error({ message: 'Name and Item ID are required' });\n    }\n\n    addEntryToUpdate(newThing.itemId, newThing);\n\n    console.log('COMPLETED SAVE');\n\n    setActiveThing(null);\n\n    await wait(250);\n\n    onActivateThing();\n  };\n\n  const onGiveAnotherThing = async () => {\n    setActiveThing(null);\n    await wait(100);\n    onActivateThing();\n  };\n\n  return (\n    <>\n      <Button size=\"large\" onClick={onActivateThing}>\n        Classify New Item\n      </Button>\n      {!!activeThing && (\n        <EditThingModal\n          isModalOpen={activeThing !== null}\n          onSaveThing={onAddItem}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          width={width * 0.9}\n          itemAliases={aliases as string[]}\n          onGiveAnotherThing={onGiveAnotherThing}\n        />\n      )}\n    </>\n  );\n}\n\nconst chooseNameThatIsASingleWord = (item: ItemT) => {\n  if (item.name.pt.split(' ').length === 1) return item.name.pt;\n\n  if (item.aliasesPt) {\n    return item.aliasesPt.find((alias) => alias.split(' ').length === 1) ?? item.name.pt;\n  }\n  return item.name.pt;\n};\n","import { Flex, Typography } from 'antd';\nimport { TransparentButton } from 'components/Common';\nimport { Item } from 'components/Sprites';\nimport { DailyDiagramItem } from 'types';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n};\n\nexport function Thing({ itemId, name, width = 50 }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\">\n      <Item id={itemId} width={width} />\n      <Typography.Text code key={itemId}>\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n\ntype ThingButtonProps = {\n  thing: DailyDiagramItem;\n  onActivateThing: (thing: DailyDiagramItem) => void;\n  width?: number;\n};\n\nexport function ThingButton({ thing, width = 50, onActivateThing }: ThingButtonProps) {\n  return (\n    <TransparentButton onClick={() => onActivateThing(thing)}>\n      <Thing itemId={thing.itemId} name={thing.name} width={width} />\n    </TransparentButton>\n  );\n}\n","import { Collapse, Rate, Space, Typography } from 'antd';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { Thing } from './Thing';\nimport { ReactNode, useState } from 'react';\nimport { TransparentButton } from 'components/Common';\n\ntype DiagramGameSampleProps = {\n  game: DailyTeoriaDeConjuntosEntry;\n};\n\ntype TThing = {\n  id: string;\n  name: string;\n  rule: number;\n};\n\nexport function DiagramGameSample({ game }: DiagramGameSampleProps) {\n  const [leftRing, setLeftRing] = useState<TThing[]>([\n    {\n      id: game.rule1.thing.id,\n      name: game.rule1.thing.name,\n      rule: 1,\n    },\n  ]);\n  const [rightRing, setRightRing] = useState<TThing[]>([\n    {\n      id: game.rule2.thing.id,\n      name: game.rule2.thing.name,\n      rule: 2,\n    },\n  ]);\n  const [intersection, setIntersection] = useState<TThing[]>([\n    {\n      id: game.intersectingThing.id,\n      name: game.intersectingThing.name,\n      rule: 0,\n    },\n  ]);\n\n  const [playerOptions, setPlayerOptions] = useState<TThing[]>(game.things.slice(0, 4));\n\n  const [selectedThing, setSelectedThing] = useState<TThing | null>(game.things[0]);\n\n  // const\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Typography.Title level={4}>Game Sample</Typography.Title>\n      <Typography.Title level={5}>\"{game.title}\"</Typography.Title>\n      <Rate value={game.level} count={game.level} disabled />\n      <Typography.Paragraph style={{ maxWidth: '500px' }}>\n        O círculo amarelo tem uma regra gramatical secreta e o circulo vermelho tem outra regra gramatical\n        secreta. O quadrado do meio representa a interseção entre a regra amarela e a regra vermelha.\n      </Typography.Paragraph>\n\n      <Space>\n        <VennDiagram\n          width={600}\n          leftCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {leftRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          rightCircleChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {rightRing.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n          intersectionChildren={\n            <TransparentButton style={{ width: '100%', height: '100%' }}>\n              {intersection.map((thing, index, arr) => (\n                <Thing\n                  key={thing.id}\n                  itemId={thing.id}\n                  name={thing.name}\n                  width={index === arr.length - 1 ? 80 : 60}\n                />\n              ))}\n            </TransparentButton>\n          }\n        />\n      </Space>\n      <Typography.Text>Coloque os objetos nos círculos corretos:</Typography.Text>\n      <Space className=\"space--center\">\n        {playerOptions.map((thing) => (\n          <TransparentButton\n            style={thing.id === selectedThing?.id ? { outline: '3px solid hotPink' } : {}}\n            onClick={() => setSelectedThing(thing)}\n          >\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} />\n          </TransparentButton>\n        ))}\n      </Space>\n\n      <Collapse\n        items={[\n          {\n            key: '1',\n            label: 'Resposta',\n            children: (\n              <Space direction=\"vertical\">\n                <Typography.Text strong>Regra Amarela</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule1.text}</Typography.Text>\n                  </li>\n                </ul>\n\n                <Typography.Text strong>Regra Vermelha</Typography.Text>\n                <ul>\n                  <li>\n                    <Typography.Text>{game.rule2.text}</Typography.Text>\n                  </li>\n                </ul>\n              </Space>\n            ),\n          },\n        ]}\n      />\n\n      <div style={{ height: '200px' }}></div>\n    </Space>\n  );\n}\n\ntype VennDiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nfunction VennDiagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: VennDiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        fill=\"#535353\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import { Button, Divider, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\n\ntype RulesByThingProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n  setActiveThing: React.Dispatch<React.SetStateAction<DailyDiagramItem | null>>;\n};\n\nexport function RulesByThing({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n}: RulesByThingProps) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>\n        Rules By Items (Added: {Object.keys(things).length} | {availableThings.length})\n      </Typography.Title>\n\n      <AddNewThingFlow\n        addEntryToUpdate={addEntryToUpdate}\n        availableThings={availableThings}\n        rules={rules}\n        width={containerWidth}\n      />\n\n      <Divider />\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} />}\n    </Space>\n  );\n}\n","import { Divider, Rate, Space, Switch, Table, TableColumnsType, Tag, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\n\nimport { AddNewThingFlow } from './AddNewThingFlow';\nimport { ThingButton } from './Thing';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\ntype ThingsByRuleProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n  thingsByRules: Record<string, string[]>;\n  setActiveThing: React.Dispatch<React.SetStateAction<DailyDiagramItem | null>>;\n  containerWidth: number;\n};\n\nexport function ThingsByRule({\n  things,\n  addEntryToUpdate,\n  availableThings,\n  rules,\n  thingsByRules,\n  setActiveThing,\n  containerWidth,\n}: ThingsByRuleProps) {\n  const { is, addParam } = useQueryParams();\n\n  const rows = useMemo(\n    () =>\n      Object.values(rules).map((r) => ({\n        ...r,\n        thingsCount: thingsByRules[r.id].length,\n      })),\n    [rules, thingsByRules]\n  );\n\n  const stats = useMemo(() => {\n    const quantities = Object.values(thingsByRules).map((things) => things.length);\n\n    return {\n      maxThings: Math.max(...quantities),\n      minThings: Math.min(...quantities),\n      averageThings: Math.round(\n        Object.values(thingsByRules).reduce((sum, things) => sum + things.length, 0) /\n          Object.keys(thingsByRules).length\n      ),\n    };\n  }, [thingsByRules]);\n\n  const columns: TableColumnsType<DailyDiagramRule & { thingsCount: number }> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => Number(a.id.split('-')[1]) - Number(b.id.split('-')[1]),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Rule',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a, b) => a.title.localeCompare(b.title),\n      render: (title: string) => <Typography.Text>{title}</Typography.Text>,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: (a, b) => a.type.localeCompare(b.type),\n    },\n    {\n      title: 'Method',\n      dataIndex: 'method',\n      key: 'method',\n      sorter: (a, b) => a.method.localeCompare(b.method),\n    },\n    {\n      title: 'Things',\n      dataIndex: 'thingsCount',\n      key: 'thingsCount',\n      render: (thingsCount: number, record) => (\n        <Space size=\"small\">\n          <Tag>{thingsCount}</Tag>\n          {is('showThings') ? (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 20).map((itemId) => (\n                <ThingButton\n                  key={`${record.id}-${itemId}`}\n                  thing={things[itemId]}\n                  onActivateThing={setActiveThing}\n                />\n              ))}\n              {thingsByRules[record.id].length > 20 && (\n                <Typography.Text>+{thingsCount - 20} more</Typography.Text>\n              )}\n            </Space>\n          ) : (\n            <Space size=\"small\" wrap>\n              {thingsByRules[record.id].slice(0, 5).map((itemId) => (\n                <ThingButton\n                  key={`${record.id}-${itemId}`}\n                  thing={things[itemId]}\n                  onActivateThing={setActiveThing}\n                />\n              ))}\n              {thingsByRules[record.id].length > 5 && (\n                <Typography.Text>+{thingsCount - 5} more</Typography.Text>\n              )}\n            </Space>\n          )}\n        </Space>\n      ),\n      sorter: (a, b) => a.thingsCount - b.thingsCount,\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      sorter: (a, b) => a.level - b.level,\n      render: (level: number) => <Rate value={level} count={3} disabled />,\n    },\n  ];\n\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Title level={4}>\n        Things By Rule (Added: {Object.keys(things).length} | {availableThings.length}){' '}\n      </Typography.Title>\n\n      <Space split={<Divider type=\"vertical\" />} wrap>\n        <AddNewThingFlow\n          addEntryToUpdate={addEntryToUpdate}\n          availableThings={availableThings}\n          rules={rules}\n          width={containerWidth}\n        />\n\n        <Typography.Text strong>\n          Average Things: <Tag>{stats.averageThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Max Things: <Tag>{stats.maxThings}</Tag>\n        </Typography.Text>\n\n        <Typography.Text strong>\n          Min Things: <Tag>{stats.minThings}</Tag>\n        </Typography.Text>\n\n        <Switch\n          checked={is('showThings')}\n          onChange={(e) => addParam('showThings', e)}\n          checkedChildren=\"Hide things\"\n          unCheckedChildren=\"Show things\"\n        />\n      </Space>\n\n      <Table dataSource={rows} columns={columns} />\n    </Space>\n  );\n}\n","import { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule } from 'types';\nimport { EditThingModal } from './EditThingModal';\nimport { wait } from 'utils';\nimport { getLatestRuleUpdate, SYLLABLE_SEPARATOR } from './utils';\n\ntype ItemUpdateGuardProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  rules: Dictionary<DailyDiagramRule>;\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  children: ReactNode;\n};\n\nexport function ItemUpdateGuard({ children, things, rules, addEntryToUpdate }: ItemUpdateGuardProps) {\n  // If any rules has been added or updated AFTER the last time the user has updated the item, the user will be warned to update the item\n  const toUpdateThings = useMemo(() => {\n    const latestRuleUpdate = getLatestRuleUpdate(rules);\n\n    return Object.values(things).filter((item) => {\n      const latestThingUpdate = item.updatedAt;\n\n      // Prevent updating items that have the syllables field but it's not correct\n      if (\n        item.syllables &&\n        item.syllables.split(SYLLABLE_SEPARATOR).join('') !== item.name.replace(/\\s/g, '')\n      ) {\n        console.log('❗️ Name and syllables do not match', item.name, item.syllables);\n        return true;\n      }\n\n      // if (item.syllables.endsWith('ie') && item.updatedAt < 1724527674296) {\n      //   return true;\n      // }\n\n      return latestRuleUpdate > latestThingUpdate;\n    });\n  }, [things, rules]);\n\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  useEffect(() => {\n    const updateThings = async (i: DailyDiagramItem) => {\n      console.log('Found things that need to update...');\n      setActiveThing(null);\n\n      // Await the wait function here\n      await wait(250);\n\n      if (toUpdateThings.length > 0) {\n        setActiveThing(toUpdateThings[0]);\n      }\n    };\n\n    console.count('Checking for things that need to update...');\n    if (toUpdateThings.length > 0) {\n      updateThings(toUpdateThings[0]);\n    }\n  }, [toUpdateThings]);\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <>\n      {activeThing && (\n        <EditThingModal\n          subtitle={`(${toUpdateThings.length} left to update)`}\n          isModalOpen={activeThing !== null}\n          onSaveThing={onUpdateThing}\n          onCancel={() => setActiveThing(null)}\n          thing={activeThing}\n          rules={rules}\n          okButtonText=\"Update\"\n        />\n      )}\n      <>{children}</>\n    </>\n  );\n}\n","import { Button, Space, Typography } from 'antd';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMeasure } from 'react-use';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { DailyTeoriaDeConjuntosEntry } from 'components/Daily/utils/types';\nimport { useState } from 'react';\nimport { buildDailyTeoriaDeConjuntosGames } from 'components/Daily/utils/games/daily-teoria-de-conjuntos';\nimport { DiagramGameSample } from './DiagramGameSample';\nimport './GameSimulator.scss';\n\ntype GameSimulatorProps = {\n  things: UseResourceFirebaseDataReturnType<DailyDiagramItem>['data'];\n  addEntryToUpdate: UseResourceFirebaseDataReturnType<DailyDiagramItem>['addEntryToUpdate'];\n  availableThings: ItemT[];\n  rules: Dictionary<DailyDiagramRule>;\n};\n\nexport function GameSimulator({ things, rules }: GameSimulatorProps) {\n  const [ref] = useMeasure<HTMLDivElement>();\n\n  const [simulation, setSimulation] = useState<DailyTeoriaDeConjuntosEntry | null>(null);\n\n  const onSimulate = () => {\n    setSimulation(\n      Object.values(\n        buildDailyTeoriaDeConjuntosGames(\n          1,\n          {\n            latestDate: '2023/01/01',\n            latestNumber: 0,\n            used: [],\n          },\n          rules,\n          things\n        )\n      )[0]\n    );\n  };\n\n  const onGenerateDemoGames = () => {\n    let demos: any = null;\n    try {\n      demos = buildDailyTeoriaDeConjuntosGames(\n        25,\n        {\n          latestDate: '2023/01/01',\n          latestNumber: 0,\n          used: [],\n        },\n        rules,\n        things\n      );\n\n      console.log(demos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Space direction=\"vertical\" ref={ref}>\n      <Typography.Title level={5}>Game Simulator</Typography.Title>\n\n      <Button size=\"large\" onClick={onSimulate}>\n        Simulate\n      </Button>\n\n      <Button size=\"large\" onClick={onGenerateDemoGames}>\n        Generate Demos (log)\n      </Button>\n\n      {simulation && <DiagramGameSample game={simulation} key={JSON.stringify(simulation)} />}\n    </Space>\n  );\n}\n","import { Typography } from 'antd';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { UseResourceFirebaseDataReturnType } from 'hooks/useResourceFirebaseData';\nimport { useMemo, useState } from 'react';\nimport { DailyDiagramItem, DailyDiagramRule, Item as ItemT } from 'types';\nimport { useTDResource } from 'hooks/useTDResource';\n\nimport { RulesByThing } from './RulesByThing';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ThingsByRule } from './ThingsByRule';\nimport { orderBy } from 'lodash';\nimport { ItemUpdateGuard } from './ItemUpdateGuard';\nimport { GameSimulator } from './GameSimulator';\nimport { EditThingModal } from './EditThingModal';\nimport { useMeasure } from 'react-use';\n\nexport function ItemsDiagramSetsContent({\n  data,\n  addEntryToUpdate,\n}: UseResourceFirebaseDataReturnType<DailyDiagramItem>) {\n  const [ref, { width: containerWidth }] = useMeasure<HTMLDivElement>();\n  const tdrItemsQuery = useTDResource<ItemT>('items');\n  const tdrDiagramRulesQuery = useTDResource<DailyDiagramRule>('daily-diagram-rules');\n\n  const availableThings = useMemo(() => {\n    return Object.values(tdrItemsQuery.data ?? {}).filter((item) => {\n      if (data && data[item.id] !== undefined) return false;\n      if (item.nsfw) return false;\n      const isNameSingleWord = item.name.pt.split(' ').length === 1;\n\n      if (item.decks?.includes('thing')) return true;\n      if (item.decks?.includes('alien') && isNameSingleWord) return true;\n      if (item.decks?.includes('manufactured') && isNameSingleWord) return true;\n\n      return false;\n    });\n  }, [data, tdrItemsQuery.data]);\n\n  const rules = useMemo(() => {\n    return tdrDiagramRulesQuery.data ?? {};\n  }, [tdrDiagramRulesQuery.data]);\n\n  const thingsByRules = useMemo(() => {\n    const dict = Object.values(rules).reduce((acc: Record<string, string[]>, rule) => {\n      acc[rule.id] = [];\n      return acc;\n    }, {});\n\n    orderBy(Object.values(data), ['updatedAt'], ['desc']).forEach((entry) => {\n      entry.rules.forEach((ruleId) => {\n        dict[ruleId].push(entry.itemId);\n      });\n    });\n    return dict;\n  }, [data, rules]);\n\n  const { is, queryParams } = useQueryParams();\n  const [activeThing, setActiveThing] = useState<DailyDiagramItem | null>(null);\n\n  if (tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading) {\n    return <Typography.Text>Loading...</Typography.Text>;\n  }\n\n  const onUpdateThing = (newThing: DailyDiagramItem) => {\n    addEntryToUpdate(newThing.itemId, newThing);\n  };\n\n  return (\n    <DataLoadingWrapper\n      isLoading={tdrItemsQuery.isLoading || tdrDiagramRulesQuery.isLoading}\n      hasResponseData={tdrItemsQuery.hasResponseData || tdrDiagramRulesQuery.hasResponseData}\n    >\n      <div ref={ref}>\n        <ItemUpdateGuard things={data} rules={rules} addEntryToUpdate={addEntryToUpdate}>\n          {activeThing && (\n            <EditThingModal\n              isModalOpen={activeThing !== null}\n              onSaveThing={(at) => {\n                onUpdateThing(at);\n                setActiveThing(null);\n              }}\n              onCancel={() => setActiveThing(null)}\n              thing={activeThing}\n              rules={rules}\n              okButtonText=\"Update\"\n              width={containerWidth}\n            />\n          )}\n\n          {(is('display', 'rule') || !queryParams.has('display')) && (\n            <ThingsByRule\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n              thingsByRules={thingsByRules}\n              setActiveThing={setActiveThing}\n              containerWidth={containerWidth}\n            />\n          )}\n\n          {is('display', 'thing') && (\n            <RulesByThing\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n              thingsByRules={thingsByRules}\n              setActiveThing={setActiveThing}\n            />\n          )}\n\n          {is('display', 'simulator') && (\n            <GameSimulator\n              things={data}\n              addEntryToUpdate={addEntryToUpdate}\n              availableThings={availableThings}\n              rules={rules}\n            />\n          )}\n        </ItemUpdateGuard>\n      </div>\n    </DataLoadingWrapper>\n  );\n}\n","import { Flex, Layout } from 'antd';\nimport { DataLoadingWrapper } from 'components/DataLoadingWrapper';\nimport { ItemsDiagramFilters } from 'components/Items/Diagram/ItemsDiagramFilters';\nimport { ItemsDiagramSetsContent } from 'components/Items/Diagram/ItemsDiagramSetsContent';\nimport { PageLayout } from 'components/Layout';\nimport { PageSider } from 'components/Layout/PageSider';\nimport { useResourceFirebaseData } from 'hooks/useResourceFirebaseData';\nimport { isEmpty } from 'lodash';\nimport { DailyDiagramItem } from 'types';\n\nexport function ItemsDiagramSets() {\n  const diagramData = useResourceFirebaseData<DailyDiagramItem>({\n    tdrResourceName: 'daily-diagram-items',\n    firebaseDataCollectionName: 'diagramItems',\n    serialize: true,\n  });\n\n  return (\n    <PageLayout title=\"Items\" subtitle=\"Diagram Sets\">\n      <Layout hasSider>\n        <PageSider>\n          <ItemsDiagramFilters {...diagramData} />\n        </PageSider>\n\n        <Layout.Content className=\"content\">\n          <DataLoadingWrapper\n            isLoading={diagramData.isLoading || diagramData.isSaving}\n            error={diagramData.error}\n            hasResponseData={!isEmpty(diagramData.data)}\n          >\n            <Flex vertical gap={24}>\n              <ItemsDiagramSetsContent {...diagramData} />\n            </Flex>\n          </DataLoadingWrapper>\n        </Layout.Content>\n      </Layout>\n    </PageLayout>\n  );\n}\n\nexport default ItemsDiagramSets;\n"],"names":["DownloadButton","data","fileName","loading","props","onClick","downloadObjectAsFile","SaveButton","isDirty","onSave","isSaving","dirt","interval","buttonProps","togglePendingSave","useGlobalContext","cancel","reset","useTimeoutFn","useEffect","console","log","moment","Date","now","format","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","type","size","icon","disabled","danger","block","SectionTitle","children","level","rest","TransparentButton","active","activeClass","className","hoverType","clsx","FilterSelect","label","value","onChange","options","placeholder","style","minWidth","map","entry","FilterNumber","min","max","step","v","width","FilterSwitch","valuePropName","checked","FilterCheckBox","e","target","FilterSegments","layout","length","option","arrow","trigger","title","TagState","isLoading","isIdle","error","isError","hasResponseData","color","ResponseState","buildDailyTeoriaDeConjuntosGames","batchSize","history","rules","things","count","lastDate","latestDate","used","latestRuleUpdate","getLatestRuleUpdate","thingsByRules","dict","Object","values","reduce","acc","rule","id","forEach","getIsThingOutdated","ruleId","push","itemId","entries","i","getNextDay","number","latestNumber","getRuleSet","availableThingsIds","shuffle","keys","filter","includes","initialThingId","sample","Error","intersectingThing","name","thingsRulesByType","twoRandomTypes","sampleSize","selectedRules","sort","join","cloneDeep","itemsOnlyInRule1","difference","itemsOnlyInRule2","commonItems","intersection","selectedInitialThingId1","pop","rule1","text","thing","selectedInitialThingId2","rule2","sampleCommonThings","sampleRule1Things","sampleRule2Things","gabarito","selectedThings","TITLES","contains","starts","ends","grammar","order","comparison","repetition","setId","getYesterday","subtract","dateString","add","checkWeekend","date","day","SYLLABLE_SEPARATOR","LETTERS","CONSONANTS","VOWELS","ACCENTS","cleanupWord","memoize","word","stringRemoveAccents","toLowerCase","countLetters","countVowels","split","letter","countConsonants","verifiers","indexOf","vowels","Set","firstLetter","slice","some","index","test","countAccents","syllableDependencyVerifier","syllables","syllable","stressSyllableDependencyVerifier","_syllables","stress","Math","updatedAt","separateSyllables","replace","useQueryParams","defaultParams","searchParams","setSearchParams","useSearchParams","addParam","key","defaultValue","undefined","delete","set","String","addParams","params","defaultValues","removeParam","is","get","has","queryParams","useResourceFirebaseData","tdrResourceName","firebaseDataCollectionName","serialize","notification","App","queryClient","useQueryClient","tdrQuery","useTDResource","firebaseQuery","useGetFirebaseDoc","select","deserializeFirebaseData","modifiedEntries","setModifiedEntries","useState","mutation","useUpdateFirebaseDoc","onSuccess","success","refetchQueries","queryKey","onError","description","useMemo","isSuccess","isPending","isEmpty","firebaseData","save","mutate","serializeFirebaseData","addEntryToUpdate","item","prev","entriesToUpdate","updateQueryFunction","path","docId","docRef","doc","firestore","updateDoc","useMutation","mutationFn","async","ItemsDiagramFilters","vertical","gap","JSON","stringify","diagramItems","copy","sortJsonKeys","prepareFileForDownload","mode","display","page","ClusterOutlined","TableOutlined","EditThingModal","isModalOpen","onSaveThing","onCancel","itemAliases","subtitle","okButtonText","onGiveAnotherThing","orderedRules","orderBy","r","method","Infinity","Number","form","Form","hasUndefinedValues","nameWatch","fields","stressedSyllable","setFieldsValue","syllableRulesUpdate","stressSyllableRulesUpdate","getFieldValue","rule3","rule4","splitSyllables","open","onOk","submit","maskClosable","okButtonProps","htmlType","okText","onFinish","preparedThing","serializeThing","autoComplete","initialValues","deserializeThing","labelWrap","readOnly","optionType","buttonStyle","toLocaleString","offsetTop","justify","align","checkedChildren","unCheckedChildren","wasAnyRuleUpdated","reVerify","thingRules","AddNewThingFlow","availableThings","activeThing","setActiveThing","onActivateThing","randomItem","chooseNameThatIsASingleWord","aliases","find","pt","aliasesPt","Boolean","newThing","wait","alias","Thing","code","ThingButton","DiagramGameSample","game","leftRing","setLeftRing","rightRing","setRightRing","setIntersection","playerOptions","setPlayerOptions","selectedThing","setSelectedThing","direction","maxWidth","VennDiagram","leftCircleChildren","height","arr","rightCircleChildren","intersectionChildren","outline","items","strong","xmlns","viewBox","fill","stroke","strokeMiterlimit","strokeWidth","d","x","y","RulesByThing","ref","containerWidth","useMeasure","simulation","setSimulation","ThingsByRule","rows","thingsCount","stats","quantities","maxThings","minThings","averageThings","round","sum","columns","dataIndex","sorter","a","b","render","localeCompare","record","wrap","dataSource","ItemUpdateGuard","toUpdateThings","latestThingUpdate","updateThings","GameSimulator","demos","ItemsDiagramSetsContent","tdrItemsQuery","tdrDiagramRulesQuery","nsfw","isNameSingleWord","decks","DataLoadingWrapper","at","ItemsDiagramSets","diagramData","hasSider","PageSider"],"sourceRoot":""}