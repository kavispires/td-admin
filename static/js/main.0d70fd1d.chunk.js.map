{"version":3,"sources":["assets/images/logo.svg","components/Menu.tsx","routes/Home.tsx","components/ArteRuimLevels.tsx","components/DataLoadingWrapper.tsx","hooks/useQueryParams.ts","utils/constants.ts","components/ResourceSelectionBar.tsx","utils/index.ts","components/SearchDuplicates.tsx","hooks/useResourceState.ts","routes/arte-ruim/Parser.tsx","routes/arte-ruim/Level4.tsx","routes/Other.jsx","routes/Resource.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","ghost","location","useLocation","to","disabled","pathname","type","Home","useState","count","setCount","showMenu","setShowMenu","useEffect","styles","minHeight","className","style","onClick","src","logo","alt","preview","ArteRuimLevels","data","useMemo","Object","values","reduce","acc","entry","level","total","level0","level1","level2","level3","level4","Title","DataLoadingWrapper","loading","error","hasResponseData","children","tip","Content","message","description","useQueryParams","paramsState","updateFunction","navigate","useNavigate","params","setParams","search","qp","URLSearchParams","currentParams","entries","pair","resourceName","language","updateQueryParams","newParams","forEach","key","value","append","toString","RESOURCE_NAMES","LANGUAGES","TagState","color","ResourceSelectionBar","title","resourceNames","updateState","initialValues","tags","onBack","extra","layout","onFinish","v","size","Item","label","name","minWidth","map","rn","Option","lng","htmlType","stringRemoveAccents","str","normalize","replace","SearchDuplicates","response","property","searchResults","setSearchResults","onChange","e","target","trim","toLowerCase","length","similar","includes","id","findSimilar","placeholder","TextArea","cols","rows","readOnly","JSON","stringify","useResourceState","availableResources","initialState","setResourceName","setLanguage","setResponse","useAsync","a","process","fetch","res","body","json","result","updateResource","obj","Boolean","Text","Typography","Parser","useTitle","output","setOutput","duplicates","setDuplicates","unique","console","entryKey","undefined","push","checkForDuplicates","parsedInput","split","dataArray","lastId","Number","text","index","newId","Level4","used","setUsed","unused","setUnused","duplicated","setDuplicated","themes","setThemes","cards","groups","loadingLevel4","errorLevel4","theme","sort","group","keys","entryId","card","parseData","header","bordered","dataSource","renderItem","item","mark","Other","cache","resArr","rawData","raw","warn","b","localeCompare","uniqueSingleWords","log","Resource","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d70fd1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ca29fdd8.svg\";","import { Button, Space } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nexport function Menu({ ghost = false }) {\n  const location = useLocation();\n\n  return (\n    <Space>\n      <Link to=\"/arte-ruim/parser\">\n        <Button disabled={location.pathname === '/arte-ruim/parser'} type=\"link\" ghost={ghost}>\n          ARPD Parser\n        </Button>\n      </Link>\n      <Link to=\"/arte-ruim/level4\">\n        <Button disabled={location.pathname === '/arte-ruim/level4'} type=\"link\" ghost={ghost}>\n          ARPD Level 4\n        </Button>\n      </Link>\n      <Link to=\"/resource\">\n        <Button disabled={location.pathname === '/resource'} type=\"link\" ghost={ghost}>\n          Resource\n        </Button>\n      </Link>\n      <Link to=\"/other\">\n        <Button disabled={location.pathname === '/other'} type=\"link\" ghost={ghost}>\n          Other\n        </Button>\n      </Link>\n    </Space>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport logo from 'assets/images/logo.svg';\n\nimport { Menu } from '../components/Menu';\nimport { Image } from 'antd';\n\nfunction Home() {\n  const [count, setCount] = useState(0);\n  const [showMenu, setShowMenu] = useState(false);\n\n  const increaseCount = () => {\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    if (count === 6) {\n      setShowMenu(true);\n    }\n  }, [count]);\n\n  const styles = showMenu\n    ? {\n        minHeight: '94vh',\n      }\n    : {};\n\n  return (\n    <div className=\"home\">\n      <header className=\"home-header\" style={styles} onClick={increaseCount}>\n        <Image src={logo} className=\"home-logo\" alt=\"logo\" preview={false} />\n        {showMenu && <Menu />}\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import { Typography } from 'antd';\nimport { useMemo } from 'react';\n\ntype ArteRuimLevelsProps = {\n  data: PlainObject;\n};\n\nexport function ArteRuimLevels({ data }: ArteRuimLevelsProps) {\n  const { level0, level1, level2, level3, level4, total } = useMemo(\n    () =>\n      Object.values(data).reduce(\n        (acc, entry) => {\n          acc[`level${entry.level}`] += 1;\n          acc.total += 1;\n          return acc;\n        },\n        {\n          level0: 0,\n          level1: 0,\n          level2: 0,\n          level3: 0,\n          level4: 0,\n          total: 0,\n        }\n      ),\n    [data]\n  );\n\n  return (\n    <div className=\"\">\n      <Typography.Title level={3}>Levels ({total})</Typography.Title>\n      <div>Level 0: {level0}</div>\n      <div>Level 1: {level1}</div>\n      <div>Level 2: {level2}</div>\n      <div>Level 3: {level3}</div>\n      <div>Level 4: {level4}</div>\n    </div>\n  );\n}\n","import { Alert, Empty, Layout, Spin } from 'antd';\n\ntype DataLoadingWrapperProps = {\n  loading: boolean;\n  error?:\n    | {\n        message: string;\n      }\n    | undefined;\n  hasResponseData: boolean;\n  children: any;\n};\n\nexport function DataLoadingWrapper({ loading, error, hasResponseData, children }: DataLoadingWrapperProps) {\n  if (loading) {\n    return <Spin tip=\"Loading\">{children}</Spin>;\n  }\n\n  if (error) {\n    return (\n      <Layout.Content className=\"content\">\n        <Alert message=\"Error\" description={error.message} type=\"error\" />\n      </Layout.Content>\n    );\n  }\n\n  if (hasResponseData === false) {\n    return (\n      <Layout.Content className=\"content\">\n        <Empty />\n      </Layout.Content>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function useQueryParams(paramsState?: PlainObject, updateFunction?: Function) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [params, setParams] = useState({});\n  // const [prevParams, setPrevParams] = useState({});\n\n  useEffect(() => {\n    if (location.search && updateFunction) {\n      const qp = new URLSearchParams(location.search);\n      const currentParams: PlainObject = {};\n      for (let pair of qp.entries()) {\n        currentParams[pair[0]] = pair[1];\n      }\n\n      if (\n        currentParams.resourceName !== paramsState?.resourceName ||\n        currentParams.language !== paramsState?.language\n      ) {\n        updateFunction(currentParams);\n        setParams(currentParams);\n      }\n    }\n  }, [location.search, paramsState, updateFunction]);\n\n  const updateQueryParams = (newParams: PlainObject) => {\n    const qp = new URLSearchParams();\n    Object.entries(newParams).forEach(([key, value]) => {\n      qp.append(key, value);\n    });\n    setParams(newParams);\n\n    navigate(`${location.pathname}?${qp.toString()}`);\n  };\n\n  return {\n    params,\n    updateQueryParams,\n  };\n}\n","export const SEARCH_THRESHOLD: number = 2;\n\nexport const LOCALHOST_RESOURCE_URL: string = 'http://localhost:3000/tdr/resources';\n\nexport const RESOURCE_NAMES: string[] = [\n  'arte-ruim',\n  'arte-ruim-extra',\n  'linhas-cruzadas',\n  'mente-coletiva',\n  'onda-telepatica',\n  'polemica-da-vez',\n  'single-word',\n  'testemunha-ocular',\n  'themes',\n  'ue-so-isso',\n];\n\nexport const LANGUAGES: Language[] = ['pt', 'en'];\n\nexport const DEFAULT_LANGUAGE: Language = 'pt';\n","import { Button, Form, PageHeader, Select, Tag } from 'antd';\nimport { ReactElement } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useQueryParams } from '../hooks/useQueryParams';\nimport { LANGUAGES } from '../utils/constants';\nimport { Menu } from './Menu';\n\ntype TagStateProps = {\n  loading: boolean;\n  error?:\n    | {\n        message: string;\n      }\n    | undefined;\n  hasResponseData: boolean;\n};\nfunction TagState({ loading, error, hasResponseData }: TagStateProps) {\n  if (loading) return <Tag color=\"blue\">Loading...</Tag>;\n  if (error) return <Tag color=\"red\">Error</Tag>;\n  if (hasResponseData) return <Tag color=\"green\">Loaded</Tag>;\n  return <Tag>No Data</Tag>;\n}\n\ntype ResourceSelectionBarProps = {\n  title: ReactElement | string;\n  resourceNames: string[];\n  updateState: Function;\n  initialValues?: PlainObject;\n  loading: boolean;\n  error?:\n    | {\n        message: string;\n      }\n    | undefined;\n  hasResponseData: boolean;\n  values?: PlainObject;\n};\n\nexport function ResourceSelectionBar({\n  title,\n  resourceNames,\n  updateState,\n  initialValues = {},\n  loading,\n  error,\n  hasResponseData,\n  values = {},\n}: ResourceSelectionBarProps) {\n  const navigate = useNavigate();\n  const { updateQueryParams } = useQueryParams();\n\n  const onFinish = (v: any) => {\n    updateState({\n      ...v,\n    });\n    updateQueryParams({ ...v });\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={title}\n        tags={<TagState loading={loading} error={error} hasResponseData={hasResponseData} />}\n        onBack={() => navigate(-1)}\n        extra={<Menu />}\n      />\n      <Form layout=\"inline\" onFinish={onFinish} size=\"small\" initialValues={{ ...initialValues, ...values }}>\n        <Form.Item label=\"Resource\" name=\"resourceName\">\n          <Select style={{ minWidth: '150px' }} value={values.resourceName}>\n            {resourceNames.map((rn) => (\n              <Select.Option key={rn} value={rn}>\n                {rn}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Language\" name=\"language\">\n          <Select style={{ minWidth: '50px' }}>\n            {LANGUAGES.map((lng) => (\n              <Select.Option key={lng} value={lng}>\n                {lng}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Load\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n}\n","import { SEARCH_THRESHOLD } from './constants';\n\n/**\n *\n * @param str\n * @returns\n */\nexport function stringRemoveAccents(str: string) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\n/**\n *\n * @param data\n * @param property\n * @returns\n */\nexport const checkForDuplicates = (data: PlainObject, property = 'text') => {\n  const unique: PlainObject = {};\n  const duplicates: PlainObject = {};\n\n  Object.values(data).forEach((entry) => {\n    if (!entry[property]) {\n      console.error(`Property ${property} does not exist in ${entry}`);\n    }\n\n    const entryKey = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (unique[entryKey]) {\n      if (duplicates[entryKey] === undefined) {\n        duplicates[entryKey] = [unique[entryKey].id];\n      }\n      duplicates[entryKey].push(entry.id);\n    } else {\n      unique[entryKey] = entry;\n    }\n  });\n\n  return duplicates;\n};\n\n/**\n *\n * @param str\n * @param data\n * @param property\n * @returns\n */\nexport const findSimilar = (str: string, data: PlainObject, property = 'text') => {\n  const similar: PlainObject = {};\n  const value = stringRemoveAccents(str.trim().toLowerCase());\n  if (!value || value.length < SEARCH_THRESHOLD) return {};\n\n  Object.values(data).forEach((entry) => {\n    const entryStr = stringRemoveAccents(entry[property].toLowerCase());\n\n    if (entryStr.includes(value)) {\n      similar[entry.id] = entry[property];\n    }\n  });\n\n  return similar;\n};\n","import { Input, Typography } from 'antd';\nimport { useState } from 'react';\nimport { findSimilar, stringRemoveAccents } from '../utils';\nimport { SEARCH_THRESHOLD } from '../utils/constants';\n\ntype SearchDuplicatesProps = {\n  response: ObjectDictionary;\n  property: string;\n};\n\nexport function SearchDuplicates({ response, property }: SearchDuplicatesProps) {\n  const [searchResults, setSearchResults] = useState({});\n\n  const onSearchSimilar = (e: any) => {\n    const { value = '' } = e.target;\n    const str = stringRemoveAccents(value.trim().toLowerCase());\n\n    if (str && str.length >= SEARCH_THRESHOLD) {\n      setSearchResults(findSimilar(str, response, property));\n    } else {\n      setSearchResults({});\n    }\n  };\n\n  return (\n    <div className=\"parser-flex-column\">\n      <Typography.Title level={2}>Search Similar</Typography.Title>\n      <Input type=\"text\" onChange={onSearchSimilar} placeholder=\"Type here\" />\n      <Input.TextArea\n        name=\"search-results\"\n        id=\"\"\n        cols={10}\n        rows={10}\n        readOnly\n        value={JSON.stringify(searchResults, null, 4)}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { LOCALHOST_RESOURCE_URL } from '../utils/constants';\n\ntype InitialState = {\n  resourceName?: string;\n  language?: Language;\n  [key: string]: any;\n};\n\ntype ResourceState = {\n  resourceName: string | null;\n  setResourceName: Function;\n  language: Language;\n  setLanguage: Function;\n  response: any;\n  loading: boolean;\n  error?: {\n    message: string;\n  };\n  hasResponseData: boolean;\n  updateResource: Function;\n};\n\nexport function useResourceState(\n  availableResources: AvailableResources,\n  initialState: InitialState = {}\n): ResourceState {\n  const [resourceName, setResourceName] = useState(initialState?.resourceName ?? null);\n  const [language, setLanguage] = useState(initialState.language ?? 'pt');\n  const [response, setResponse] = useState({});\n\n  const { value, loading, error } = useAsync(async () => {\n    if (availableResources && resourceName && language) {\n      const url = process.env.NODE_ENV === 'development' ? LOCALHOST_RESOURCE_URL : process.env.PUBLIC_URL;\n      const res = await fetch(`${url}/${resourceName}-${language}.json`);\n      const result = res.body ? await res.json() : {};\n      setResponse(result);\n      return result;\n    }\n  }, [resourceName, language]);\n\n  const updateResource = (obj: InitialState) => {\n    if (obj.language && obj.language !== language) setLanguage(obj.language);\n    if (obj.resourceName && obj.resourceName !== resourceName) setResourceName(obj.resourceName);\n  };\n\n  return {\n    resourceName,\n    setResourceName,\n    language,\n    setLanguage,\n    response,\n    loading,\n    error,\n    hasResponseData: Boolean(value),\n    updateResource,\n  };\n}\n","import { Divider, Input, Layout, Typography } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useTitle } from 'react-use';\n\nimport { ArteRuimLevels } from '../../components/ArteRuimLevels';\nimport { DataLoadingWrapper } from '../../components/DataLoadingWrapper';\nimport { ResourceSelectionBar } from '../../components/ResourceSelectionBar';\nimport { SearchDuplicates } from '../../components/SearchDuplicates';\nimport { useResourceState } from '../../hooks/useResourceState';\nimport { checkForDuplicates } from '../../utils';\nimport { DEFAULT_LANGUAGE } from '../../utils/constants';\n\nconst { Text, Title } = Typography;\n\nfunction Parser() {\n  useTitle('Arte Ruim - Parser');\n\n  const availableResources = ['arte-ruim'];\n  const initialState = { language: DEFAULT_LANGUAGE, resourceName: availableResources[0] };\n\n  const [output, setOutput] = useState({});\n  const [duplicates, setDuplicates] = useState({});\n  const property = 'text';\n\n  const { resourceName, language, loading, error, updateResource, hasResponseData, response } =\n    useResourceState(availableResources, initialState);\n\n  useEffect(() => {\n    if (response) {\n      setDuplicates(checkForDuplicates(response, property));\n      setOutput(response);\n    }\n  }, [response]);\n\n  const onInputChange = (e: any) => {\n    const { value } = e.target;\n    const parsedInput = value.split('\\n');\n\n    const dataArray: any[] = Object.values(response ?? {});\n    const lastId = Number(dataArray[dataArray.length - 1].id.split('-')[1]) || 1;\n\n    const result = parsedInput.reduce(\n      (acc: Record<CardId, ArteRuimCard>, text: string, index: number) => {\n        if (text) {\n          const newId = `${resourceName![0]}-${lastId + index + 1}-${language}`;\n          acc[newId] = {\n            id: newId,\n            text,\n            level: 0,\n          };\n        }\n        return acc;\n      },\n      { ...response }\n    );\n\n    setOutput(result);\n  };\n\n  return (\n    <Layout>\n      <ResourceSelectionBar\n        title=\"Arte Ruim Parser\"\n        resourceNames={['arte-ruim']}\n        initialValues={initialState}\n        updateState={updateResource}\n        hasResponseData={hasResponseData}\n        loading={loading}\n        error={error}\n      />\n\n      <Layout.Content className=\"content\">\n        <DataLoadingWrapper loading={loading} error={error} hasResponseData={hasResponseData}>\n          <div className=\"parser-container\">\n            <div className=\"parser-main\">\n              <Title level={2}>Adding Data</Title>\n              <Text>Input</Text>\n              <Input.TextArea name=\"input\" id=\"\" cols={15} rows={5} onChange={onInputChange} />\n              <Text>Output</Text>\n              <Input.TextArea\n                name=\"output\"\n                id=\"\"\n                cols={15}\n                rows={15}\n                readOnly\n                value={JSON.stringify(output, null, 4)}\n              />\n              <Text>Duplicates</Text>\n\n              <Input.TextArea\n                name=\"duplicates\"\n                id=\"\"\n                cols={15}\n                rows={3}\n                readOnly\n                value={JSON.stringify(duplicates)}\n              />\n            </div>\n\n            <aside className=\"parser-controls\">\n              <ArteRuimLevels data={response} />\n              <Divider />\n\n              <SearchDuplicates response={response} property={property} />\n            </aside>\n          </div>\n        </DataLoadingWrapper>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Parser;\n","import { Input, Layout, List, Typography } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useAsync, useTitle } from 'react-use';\n\nimport { DataLoadingWrapper } from '../../components/DataLoadingWrapper';\nimport { ResourceSelectionBar } from '../../components/ResourceSelectionBar';\nimport { useResourceState } from '../../hooks/useResourceState';\nimport { DEFAULT_LANGUAGE, LOCALHOST_RESOURCE_URL } from '../../utils/constants';\n\nconst { Text, Title } = Typography;\n\nconst parseData = (cards: Record<CardId, ArteRuimCard>, groups: Record<string, ArteRuimGroup>) => {\n  const themes = Object.values(groups)\n    .map((entry) => entry.theme)\n    .sort();\n\n  const used: StringDictionary = {};\n  const unused: StringDictionary = {};\n  const duplicated: StringDictionary = {};\n  // Get used and unused\n  Object.values(groups).forEach((group) => {\n    Object.keys(group.cards).forEach((entryId) => {\n      if (used[entryId]) {\n        duplicated[entryId] = cards[entryId].text;\n      } else {\n        used[entryId] = cards[entryId].text;\n      }\n    });\n  });\n\n  Object.values(cards).forEach((card) => {\n    if (used[card.id] === undefined) {\n      unused[card.id] = card.text;\n    }\n  });\n\n  return { themes, used, unused, duplicated };\n};\n\nfunction Level4() {\n  useTitle('Arte Ruim - Level 4');\n\n  const availableResources = ['arte-ruim'];\n  const initialState = { language: DEFAULT_LANGUAGE, resourceName: availableResources[0] };\n\n  const [used, setUsed] = useState({});\n  const [unused, setUnused] = useState({});\n  const [duplicated, setDuplicated] = useState({});\n  const [themes, setThemes] = useState<string[]>([]);\n\n  const {\n    resourceName,\n    language,\n    loading,\n    error,\n    updateResource,\n    hasResponseData,\n    response: cards,\n  } = useResourceState(availableResources, initialState);\n\n  const {\n    value: groups,\n    loading: loadingLevel4,\n    error: errorLevel4,\n  } = useAsync(async () => {\n    const response = await fetch(`${LOCALHOST_RESOURCE_URL}/${resourceName}-group-${language}.json`);\n    const result = await response.json();\n\n    return result;\n  }, [language]);\n\n  useEffect(() => {\n    if (!loading && !loadingLevel4 && cards && groups) {\n      const result = parseData(cards, groups);\n      setThemes(result.themes);\n      setUsed(result.used);\n      setUnused(result.unused);\n      setDuplicated(result.duplicated);\n    }\n  }, [cards, groups, loading, loadingLevel4]);\n\n  return (\n    <Layout>\n      <ResourceSelectionBar\n        title=\"Arte Ruim Level 4\"\n        resourceNames={['arte-ruim']}\n        initialValues={initialState}\n        updateState={updateResource}\n        hasResponseData={hasResponseData && Boolean(groups)}\n        loading={loading || loadingLevel4}\n        error={error || errorLevel4}\n      />\n\n      <Layout.Content className=\"content\">\n        <DataLoadingWrapper\n          loading={loading || loadingLevel4}\n          error={error || errorLevel4}\n          hasResponseData={hasResponseData && Boolean(groups)}\n        >\n          <div className=\"parser-container\">\n            <div className=\"parser-main\">\n              <Title level={2}>Used in Groups ({Object.keys(used).length})</Title>\n              <Input.TextArea\n                name=\"output\"\n                id=\"\"\n                cols={15}\n                rows={10}\n                readOnly\n                value={JSON.stringify(used, null, 4)}\n              />\n              <Title level={2}>Unused in Groups ({Object.keys(unused).length})</Title>\n              <Input.TextArea\n                name=\"output\"\n                id=\"\"\n                cols={15}\n                rows={10}\n                readOnly\n                value={JSON.stringify(unused, null, 4)}\n              />\n              <Title level={2}>In More than One Group ({Object.keys(duplicated).length})</Title>\n              <Input.TextArea\n                name=\"duplicates\"\n                id=\"\"\n                cols={15}\n                rows={5}\n                readOnly\n                value={JSON.stringify(duplicated, null, 4)}\n              />\n            </div>\n\n            <aside className=\"parser-controls\">\n              <List\n                header={<Title level={2}>Themes</Title>}\n                bordered\n                dataSource={themes}\n                size=\"small\"\n                renderItem={(item) => (\n                  <List.Item>\n                    <Text mark></Text> {item}\n                  </List.Item>\n                )}\n              />\n            </aside>\n          </div>\n        </DataLoadingWrapper>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Level4;\n","/* eslint-disable no-unused-vars */\nimport { Alert, Divider, Input, Layout, PageHeader, Typography } from 'antd';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { useAsync, useTitle } from 'react-use';\nimport { LOCALHOST_RESOURCE_URL } from '../utils/constants';\nimport { DataLoadingWrapper } from '../components/DataLoadingWrapper';\nimport { checkForDuplicates, findSimilar, stringRemoveAccents } from '../utils';\nimport { SEARCH_THRESHOLD } from '../utils/constants';\n\nconst { Text, Title } = Typography;\n\nfunction Other() {\n  useTitle('Arte Ruim - Other');\n\n  // const result = Array(50)\n  //   .fill(1)\n  //   .reduce((acc, e, index) => {\n  //     const num = e + index;\n  //     const idNum = num < 10 ? `00${num}` : num < 100 ? `0${num}` : `${num}`;\n  //     const id = `md-rb-${idNum}`;\n\n  //     acc[id] = {\n  //       id,\n  //       orientation: 'vertical',\n  //     };\n\n  //     return acc;\n  //   }, {});\n\n  // const result = Object.entries(data).reduce((acc, [id, value]) => {\n  //   acc[id] = {\n  //     id: value.id,\n  //     name: {\n  //       pt: value.pt,\n  //       en: value.en,\n  //     },\n  //     gender: value.gender,\n  //   };\n  //   return acc;\n  // }, {});\n\n  // const result = Object.entries(SUSPECTS_NAMES).reduce((acc, [id, value]) => {\n  //   if (!value.gender) throw Error(`a, id ${id}`);\n  //   acc[id] = {\n  //     id,\n  //     ...value,\n  //   };\n\n  //   return acc;\n  // }, {});\n\n  const makeCrimesHediondosEnries = (quantity, startingId = 0, type) => {\n    return Array(quantity)\n      .fill(startingId)\n      .reduce((acc, e, index) => {\n        const num = e + index;\n        const idNum = num < 10 ? `00${num}` : num < 100 ? `0${num}` : `${num}`;\n        const id = `dmhk-${type}-${idNum}`;\n\n        acc[id] = {\n          id,\n          type: type === 'wp' ? 'weapon' : 'evidence',\n          name: {\n            en: '',\n            pt: '',\n          },\n        };\n\n        return acc;\n      }, {});\n  };\n\n  // const result = makeCrimesHediondosEnries(200, 66, 'ev');\n\n  const convertCsvJsonSceneTiles = (d) => {\n    return d.map((e) => {\n      const entry = {\n        title: {},\n        values: [],\n      };\n\n      Object.entries(e).forEach(([key, value]) => {\n        const [category, language] = key.split('-');\n\n        if (!language) {\n          entry[key] = value;\n          return;\n        }\n\n        if (category === 'title') {\n          entry.title[language] = value;\n          return;\n        }\n\n        if (category.startsWith('value')) {\n          const index = Number(category.substring(5));\n          if (entry.values[index] === undefined) {\n            entry.values[index] = {};\n          }\n          entry.values[index][language] = value;\n          return;\n        }\n\n        console.log({ [key]: value });\n      });\n\n      return entry;\n    });\n  };\n\n  const convertToDualLanguage = (d) => {\n    return Object.values(d).reduce((acc, entry) => {\n      acc[entry.id] = {\n        id: entry.id,\n        type: entry.type,\n        name: {\n          en: entry.en,\n          pt: entry.pt,\n        },\n      };\n      return acc;\n    }, {});\n  };\n  // const result = convertToDualLanguage(data);\n\n  const parseEspiao = () => {\n    const cache = {};\n\n    db.forEach((entry) => {\n      if (cache[entry.location] === undefined) {\n        cache[entry.location] = [];\n      }\n      cache[entry.location].push(entry.role);\n    });\n\n    return Object.entries(cache).reduce((acc, [location, roles], index) => {\n      const idNum = index + 1 < 10 ? `0${index + 1}` : index + 1;\n      const id = `e-${idNum}-en`;\n      acc[id] = {\n        id,\n        name: location,\n        roles: roles,\n      };\n\n      return acc;\n    }, {});\n  };\n\n  // const result = parseEspiao();\n\n  const parseLinhasCruzadas = () => {\n    return db.reduce((acc, entry, index) => {\n      const id = `lc-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry.text,\n      };\n      return acc;\n    }, {});\n  };\n\n  // const result = parseLinhasCruzadas();\n\n  const parseGaleriaDeSonhos = () => {\n    return rawData.reduce((acc, entry, index) => {\n      const id = `gs-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry.text,\n      };\n      return acc;\n    }, {});\n  };\n\n  // const result = parseGaleriaDeSonhos();\n\n  const parseCategories = () => {\n    return rawData.reduce((acc, entry, index) => {\n      const id = `ct-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry.category,\n      };\n      return acc;\n    }, {});\n  };\n\n  // const result = parseCategories();\n\n  // const parseInspirations = () => {\n  //   return rawData.reduce((acc, entry, index) => {\n  //     const id = `mui-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       text: entry.text,\n  //       level: entry.level,\n  //       set: entry.set,\n  //     };\n  //     return acc;\n  //   }, {});\n  // };\n\n  // const result = parseInspirations();\n\n  // const parseAdjectives = () => {\n  //   return rawData.reduce((acc, entry, index) => {\n  //     const id = `adj-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       text: entry.texto,\n  //     };\n  //     return acc;\n  //   }, {});\n  // };\n\n  // const result = parseAdjectives();\n\n  // const parsePairs = () => {\n  //   return rawData.reduce((acc, entry, index) => {\n  //     const id = `ap-${index + 1}-pt`;\n  //     acc[id] = {\n  //       id,\n  //       values: [entry.CARD_1, entry.CARD_2],\n  //     };\n  //     return acc;\n  //   }, {});\n  // };\n\n  // const result = parsePairs();\n\n  const cache = {};\n  const duplicated = {};\n  const uniqueSingleWords = () => {\n    const resArr = [];\n\n    Object.values(rawData).forEach((entry) => {\n      const raw = stringRemoveAccents(entry.text).toLowerCase();\n\n      if (raw.includes(' ')) {\n        console.warn('SPACE IN', raw);\n      }\n\n      if (cache[raw]) {\n        duplicated[raw] = true;\n      } else {\n        cache[raw] = true;\n        resArr.push(entry.text.toLowerCase());\n      }\n    });\n\n    const sortedArr = resArr.sort((a, b) => a.localeCompare(b));\n\n    return sortedArr.reduce((acc, entry, index) => {\n      const id = `sw-${index + 1}-pt`;\n      acc[id] = {\n        id,\n        text: entry,\n      };\n\n      return acc;\n    }, {});\n  };\n  const result = uniqueSingleWords();\n  console.log(duplicated);\n\n  return (\n    <Layout>\n      <PageHeader title=\"Other\" onBack={() => {}} />\n\n      <Divider />\n\n      <Layout.Content className=\"content\">\n        <div className=\"a\">\n          <Input.TextArea\n            name=\"search-results\"\n            id=\"\"\n            cols=\"10\"\n            rows=\"10\"\n            readOnly\n            value={JSON.stringify(result, null, 4)}\n          />\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Other;\n\nfunction parse(a) {\n  return a.map((v) => {\n    if (v.FIELD2) return `${v.question}, ${v.FIELD2}`;\n    return v.question;\n  });\n}\n\nconst db = [];\n\nconst rawData = {};\n","import { Input, Layout, Typography } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useTitle } from 'react-use';\n\nimport { DataLoadingWrapper } from '../components/DataLoadingWrapper';\nimport { ResourceSelectionBar } from '../components/ResourceSelectionBar';\nimport { SearchDuplicates } from '../components/SearchDuplicates';\nimport { useQueryParams } from '../hooks/useQueryParams';\nimport { useResourceState } from '../hooks/useResourceState';\nimport { RESOURCE_NAMES } from '../utils/constants';\n\nconst { Text, Title } = Typography;\n\nfunction Resource() {\n  useTitle('Resource');\n\n  const [output, setOutput] = useState({});\n  const property = 'text';\n\n  const { resourceName, language, loading, error, updateResource, hasResponseData, response } =\n    useResourceState(RESOURCE_NAMES, {});\n\n  const { params } = useQueryParams({ resourceName, language }, updateResource);\n\n  useEffect(() => {\n    if (response) {\n      setOutput(response);\n    }\n  }, [response]);\n\n  return (\n    <Layout>\n      <ResourceSelectionBar\n        title={`Data for ${resourceName}-${language}`}\n        resourceNames={RESOURCE_NAMES}\n        values={params}\n        updateState={updateResource}\n        hasResponseData={hasResponseData}\n        loading={loading}\n        error={error}\n      />\n\n      <Layout.Content className=\"content\">\n        <DataLoadingWrapper loading={loading} error={error} hasResponseData={hasResponseData}>\n          <div className=\"parser-container\">\n            <div className=\"parser-main\">\n              <Title level={2}>Data</Title>\n              <Text>Output</Text>\n              <Input.TextArea\n                name=\"output\"\n                id=\"\"\n                cols={15}\n                rows={15}\n                readOnly\n                value={JSON.stringify(output, null, 4)}\n              />\n            </div>\n\n            <aside className=\"parser-controls\">\n              <SearchDuplicates response={response} property={property} />\n            </aside>\n          </div>\n        </DataLoadingWrapper>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Resource;\n","import { HashRouter, Route, Routes } from 'react-router-dom';\n\nimport Home from './routes/Home';\nimport Parser from './routes/arte-ruim/Parser';\nimport Level4 from './routes/arte-ruim/Level4';\nimport Other from './routes/Other';\nimport Resource from './routes/Resource';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/arte-ruim/parser\" element={<Parser />} />\n          <Route path=\"/arte-ruim/level4\" element={<Level4 />} />\n          <Route path=\"/resource\" element={<Resource />} />\n          <Route path=\"/other\" element={<Other />} />\n        </Routes>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}