import{l as n}from"./lodash-Czkt6pVA.js";import{X as Q,W as $,r as g}from"./index-B-CB-hmC.js";import{e as h,g as v}from"./index-lGkeVY1X.js";import{u as x}from"./useGetFirebaseDoc-CmSt-g-E.js";import{u as L}from"./useTDResource-VDQIHIMH.js";import{u as M}from"./useUpdateFirebaseDoc-vKfuE25D.js";function z({tdrResourceName:o,firebaseDataCollectionName:s,serialize:d}){const{notification:u}=Q.useApp(),m=$(),r=L(o),e=x("tdr",s,{select:d?h:void 0}),[t,c]=g.useState({}),i=M("tdr",s,{onSuccess:()=>{u.success({message:`${s} updated`}),m.refetchQueries({queryKey:["firebase","tdr",s]}),c({})},onError:a=>{u.error({message:`${s} update failed`,description:a.message})}}),f=g.useMemo(()=>!r.isSuccess||!e.isSuccess||i.isPending?{}:(console.log(`%cMerging ${o}+${s} data...`,"color: #f0f"),n.cloneDeep({...r.data??{},...e.data??{},...t})),[o,s,r.data,e.data,r.isSuccess,e.isSuccess,i.isPending,t]),y=!n.isEmpty(t),E=(a,F)=>{c(D=>({...D,[a]:F}))},p=e.data,S=()=>{i.mutate(d?v(t):t)};return{data:f,isLoading:r.isLoading||e.isLoading,error:r.error||e.error,firebaseData:p,hasFirestoreData:!n.isEmpty(p),isSaving:i.isPending,save:S,addEntryToUpdate:E,entriesToUpdate:t,isDirty:y}}export{z as u};
