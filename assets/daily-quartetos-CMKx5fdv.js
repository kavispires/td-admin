import{u as x,D as T,a as k}from"./constants-D1QS-T8p.js";import{u as G}from"./useTDResource-idwmPnrO.js";import{l as h}from"./useBaseUrl-Bgww8MYZ.js";import{aQ as q,aR as z,r as P}from"./index-CD2lQx4f.js";import{g as U}from"./constants-DFs3AddX.js";const Q=new z({}),j=(c,u)=>{Q.setState(m=>({...m,[c]:u}))},F=()=>{Q.setState(()=>({}))},J=()=>q(Q,()=>Q.state),V=(c,u,m,I)=>{const[p]=x(T.QUARTETOS,I),r=G("daily-quartet-sets",c),i=G("items-groups",c);return{entries:P.useMemo(()=>!c||r.isLoading||i.isLoading||!p?{}:W(m,p,u,r.data,i.data),[c,u,p,m,r.dataUpdatedAt,i.dataUpdatedAt]),isLoading:r.isLoading||i.isLoading}},W=(c,u,m,I,p)=>{console.count("Creating Quartetos...");let r=Object.values(I).filter(f=>f.itemsIds.length>=4&&!u.used.includes(f.id)&&!f.flagged),i=u.latestDate;const t={};return Array.from({length:c}).forEach((f,S)=>{const e=[],a={};let y=h.cloneDeep(r);const N=y.filter(s=>s.itemsIds.length===4);if(N.length===0)return j("quartet","No perfect sets found for Quartetos game"),t;let A=0;for(;e.length<3&&A<1e3;){A++;const s=h.sample(N);if(console.log({referenceSet:s}),!s)return j("quartet","No reference set found for Quartetos game"),t;const o=_(s.itemsIds,I);if(console.log({relatedSets:o}),o[0].length===0&&o[1].length===0&&o[2].length===0&&o[3].length===0){console.log(`No related sets found for reference set ${s.id}`);continue}y=y.filter(d=>d.id!==s.id);for(let d=0;d<o.length;d++){console.log(`Processing related sets for item ${d+1} of 4`);const l=s.itemsIds[d];a[l]=!0;const $=o[d];for(let n=0;n<$.length-1;n++){const g=$[n];if(!g){console.log(`No related set found for item ${l} [${n}]`);continue}const v=g.itemsIds.filter(b=>b!==l);let D=0;const M=v.filter(b=>a[b]?(D++,!1):!0);if(M.length<3||D>2){console.log(`Not enough available items or too many collisions for item ${l} [${n}]`);continue}g.itemsIds.forEach(b=>{a[b]=!0}),console.log(`Adding set ${g.id} for item ${l} [${n}]`),e.push({id:g.id,title:g.title,itemsIds:[l,...h.sampleSize(M,3)],level:g.level??1});break}if(e.length>=3)break;if(e.length<3)for(;e.length<3&&o[o.length-1].length>0;){const n=o[o.length-1].pop();if(!n){console.log(`No none set found for item position ${e.length}`);continue}const g=n.itemsIds.filter(v=>!a[v]);if(g.length<3){console.log(`Not enough available items left for item position ${e.length}`);continue}n.itemsIds.forEach(v=>{a[v]=!0}),e.push({id:n.id,title:n.title,itemsIds:h.sampleSize(g,4),level:n.level??1})}}}if(e.length===3){const s=e.map(l=>l.id);r=r.filter(l=>!s.includes(l.id));const o=Object.values(p).filter(l=>l.itemsIds.some($=>!a[$])&&l.itemsIds.length>=4&&l.nsfw!==!0),d=h.sample(o);if(!d)throw Error("No eligible group found for Quartetos game");e.push({id:d.id,title:`${h.capitalize(d.name[m])}*`,itemsIds:h.sampleSize(d.itemsIds,4),level:1})}const w=Math.ceil(e.reduce((s,o)=>s+o.level,0)/e.length),O=h.orderBy(e,["level"],["asc"]).map((s,o)=>(s.level=o,s)),R=e.map(s=>s.id).join(U),L=h.shuffle(e.flatMap(s=>s.itemsIds)),E=k(i);i=E,t[E]={id:E,number:u.latestNumber+S+1,setId:R,type:"quartetos",grid:L,difficulty:w,sets:O}}),t};function _(c,u){const[m,I,p,r]=c,i={[m]:[],[I]:[],[p]:[],[r]:[],none:[]};return Object.values(u).forEach(t=>{if(t.itemsIds.length<4||t.flagged)return;const f=t.itemsIds.includes(m),S=t.itemsIds.includes(I),e=t.itemsIds.includes(p),a=t.itemsIds.includes(r);f&&!S&&!e&&!a?i[m].push(t):S&&!f&&!e&&!a?i[I].push(t):e&&!f&&!S&&!a?i[p].push(t):a&&!f&&!S&&!e?i[r].push(t):!f&&!S&&!e&&!a&&t.itemsIds.length>=4&&i.none.push(t)}),Object.values(i).map(t=>h.shuffle(t))}export{j as a,J as b,F as c,V as u};
