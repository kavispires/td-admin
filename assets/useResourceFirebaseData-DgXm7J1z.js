import{l as n}from"./lodash-Cne9hxq2.js";import{N as M,M as Q,r as g}from"./index-DVQc80aL.js";import{e as $,g as h}from"./index-BnFUJhch.js";import{u as v}from"./useGetFirebaseDoc-DBDY5cQa.js";import{u as x}from"./useTDResource-CjZRhN2T.js";import{u as L}from"./useUpdateFirebaseDoc-DHL8Sbzz.js";function z({tdrResourceName:o,firebaseDataCollectionName:s,serialize:d}){const{notification:u}=M.useApp(),m=Q(),r=x(o),e=v("tdr",s,{select:d?$:void 0}),[t,c]=g.useState({}),i=L("tdr",s,{onSuccess:()=>{u.success({message:`${s} updated`}),m.refetchQueries({queryKey:["firebase","tdr",s]}),c({})},onError:a=>{u.error({message:`${s} update failed`,description:a.message})}}),f=g.useMemo(()=>!r.isSuccess||!e.isSuccess||i.isPending?{}:(console.log(`%cMerging ${o}+${s} data...`,"color: #f0f"),n.cloneDeep({...r.data??{},...e.data??{},...t})),[o,s,r.data,e.data,r.isSuccess,e.isSuccess,i.isPending,t]),y=!n.isEmpty(t),E=(a,F)=>{c(D=>({...D,[a]:F}))},p=e.data,S=()=>{i.mutate(d?h(t):t)};return{data:f,isLoading:r.isLoading||e.isLoading,error:r.error||e.error,firebaseData:p,hasFirestoreData:!n.isEmpty(p),isSaving:i.isPending,save:S,addEntryToUpdate:E,entriesToUpdate:t,isDirty:y}}export{z as u};
