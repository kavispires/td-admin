import{r as v,j as m,A as C,u as G,L as A,H as T,D as H}from"./index-DyB2iw-j.js";import{u as R,D as q,g as L,a as P}from"./constants-Bt_4tZjm.js";import{u as S}from"./useTDResource-kIzAJGU0.js";import{l as g,c as _}from"./useBaseUrl-Cs5WxjUA.js";import{R as B}from"./main-CaWV8vYm.js";import{I as M}from"./ImageCard-EUvrFvV0.js";import{g as U}from"./utils-DDpIN-B2.js";import{F as z}from"./index-dctUwvzp.js";import{S as Q}from"./index-BfeWLvxY.js";import{B as W}from"./index-Dwyhp9v4.js";import"./moment-C5S46NFB.js";import"./gapSize-U1swVQyS.js";const O=9,Y=(c,e,s,n)=>{const[i]=R(q.ESPIONAGEM,n),t=S("suspects",c),o=S(`testimony-questions-${e}`,c),a=S("testimony-answers",c);return{entries:v.useMemo(()=>{if(!i||!t.isSuccess||!o.isSuccess||!a.isSuccess)return{};const u=X(a.data),d=Z(t.data);return J(s,i,t.data,o.data,u,d)},[c,i,t,o,a,s]),isLoading:t.isLoading||o.isLoading||a.isLoading}},J=(c,e,s,n,i,t)=>{console.count("Creating Espionagem...");let o=e.latestDate;const a=[],r={};for(let u=0;u<c;u++){const d=L(o);o=d;let l=null,f=0;for(;!l&&f<100;){f++;const p=V(s,n,i,t,a);if(se(p.statements)){l=p,console.log(`Generated valid game for ${d} after ${f} attempts`);break}}if(!l)throw new Error(`Failed to generate valid game for ${d} after 100 attempts`);a.push(l.culpritId),r[d]={id:d,type:"espionagem",number:e.latestNumber+u+1,...l}}return r};function V(c,e,s,n,i){let t=[];const o=[],a={},r=g.sample(Object.keys(s));if(!r)throw new Error("No selected testimony ID found");const u=Object.keys(s[r]).filter(h=>!i.includes(h)),d=u.length>0?u:Object.keys(s[r]),l=g.sample(d);if(!l)throw new Error("No selected culprit ID found");const f=g.sampleSize(Object.keys(s[r]).filter(h=>h!==l),O-1);for(t.push(...f);t.length<8;){const h=g.sampleSize(Object.keys(c).filter(x=>!t.includes(x)&&x!==l),O-t.length-1);t.push(...h)}const p={};Object.keys(n).forEach(h=>{if(n[h][l]===void 0){const x=Object.keys(n[h]).filter(y=>t.includes(y));if(x.length>0){const y={};x.forEach(N=>{t.includes(N)&&(y[N]=!0)}),p[h]=y}}});const I=e[r];o.push(K(l,t,I,s[r])),b(a,o[0].excludes);const j=k(l,t,p);o.push(j),b(a,j.excludes),t=g.shuffle([...t,l]);const E=k(l,t,p,[j.key],"worst");o.push(E),b(a,E.excludes);const D=k(l,t,p,[E.key],"worst");o.push(D),b(a,D.excludes);const F=ee(l,t,o);o.push(F),b(a,F.excludes);const $=[o[0],o[1],o[2],o[4],o[3]];return{isNsfw:I.nsfw??!1,culpritId:l,statements:$,suspectsIds:t}}const X=c=>{const e={};for(const s of Object.keys(c)){const n=c[s];for(const i of Object.keys(n)){const t=n[i];if(t.length<3)continue;e[s]===void 0&&(e[s]={});const o=g.uniq(t);if(o.length===1){e[s][i]=o[0]===1;continue}const a=t.filter(u=>u===0).length,r=t.filter(u=>u===1).length;if(a>=3){e[s][i]=!1;continue}if(r>=3){e[s][i]=!0;continue}console.log("⁉️ Ignoring testimony with insufficient answers")}}return Object.keys(e).forEach(s=>{g.isEmpty(e[s])&&delete e[s]}),Object.keys(e).forEach(s=>{Object.keys(e[s]).length<3&&(console.log("⁉️ Removing testimonies with less than 3 answers"),delete e[s])}),Object.keys(e).forEach(s=>{g.uniq(Object.values(e[s])).length===1&&(console.log("⁉️ Removing testimonies with the same answer"),delete e[s])}),e},Z=c=>{const e={};for(const n of Object.keys(c)){const{gender:i,ethnicity:t,age:o,build:a,height:r,features:u}=c[n];if(!a){console.log("⁉️ Ignoring suspect with missing build",n);continue}if(!r){console.log("⁉️ Ignoring suspect with missing height",n);continue}if(!u||u.length===0){console.log("⁉️ Ignoring suspect with missing features",n);continue}e[i]===void 0&&(e[i]={}),e[i][n]=!0,e[t]===void 0&&(e[t]={}),e[t][n]=!0,e[o]===void 0&&(e[o]={}),e[o][n]=!0,e[a]===void 0&&(e[a]={}),e[a][n]=!0,e[r]===void 0&&(e[r]={}),e[r][n]=!0,u.forEach(d=>{e[d]===void 0&&(e[d]={}),e[d][n]=!0})}return e.young=g.cloneDeep(e["18-21"]),e.adult=g.cloneDeep({...e["21-30"],...e["30-40"],...e["40-50"]}),e.senior=g.cloneDeep({...e["50-60"],...e["60-70"],...e["70-80"],...e["80-90"]}),["18-21","21-30","30-40","40-50","50-60","60-70","70-80","80-90","average","medium","mixed","adult","tall"].forEach(n=>{delete e[n]}),e},b=(c,e)=>{e.forEach(s=>{c[s]===void 0&&(c[s]=0),c[s]++})},K=(c,e,s,n)=>{const i=n[c],t=e.filter(a=>n[a]!==void 0&&n[a]!==i),o=s.answer.charAt(0).toLowerCase()+s.answer.slice(1);return{key:`testimony.${s.id}`,text:`O(a) suspeito(a) ${i?"":"não "}${o}`,excludes:t}},w={row1:{indexes:[0,1,2],text:"na primeira linha"},row2:{indexes:[3,4,5],text:"na segunda linha"},row3:{indexes:[6,7,8],text:"na terceira linha"},column1:{indexes:[0,3,6],text:"na primeira coluna"},column2:{indexes:[1,4,7],text:"na segunda coluna"},column3:{indexes:[2,5,8],text:"na terceira coluna"},corners:{indexes:[0,2,6,8],text:"nos cantos"}},ee=(c,e,s)=>{const n=e.indexOf(c),i={};for(const r of Object.keys(w)){const{indexes:u}=w[r];u.includes(n)||(i[r]=u.reduce((d,l)=>s.some(f=>f.excludes.includes(e[l]))?d+1:d,0))}const o=Object.keys(i).sort((r,u)=>i[r]-i[u])[0],a=w[o].indexes.map(r=>e[r]);return{key:`not.grid.${o}`,text:`O(a) suspeito(a) não está ${w[o].text}`,excludes:a}},k=(c,e,s,n=[],i="best")=>{const t=g.difference(e,[c]),o=n.map(l=>l.replace("not.feature.","")),a=Object.keys(s).filter(l=>Object.keys(s[l]).length<=6&&!o.includes(l)).sort((l,f)=>Object.keys(s[f]).length-Object.keys(s[l]).length),r=i==="best"?a[0]:g.sample(a.slice(2,5))??a[2];if(!r)throw Error(`No suitable feature found for ${i} selection`);const u=t.filter(l=>s[r][l]),d=te[r];return d||console.warn(`Feature ${r} not found in translations`),{key:`not.feature.${r}`,text:`O(a) suspeito(a) não ${d||r}`,excludes:u}},te={male:"é homem",female:"é mulher",black:"é negro",white:"é branco",asian:"é asiático",latino:"é latino",thin:"é magro",fat:"é gordo",tall:"é alto",short:"é baixo",young:"é jovem",adult:"é adulto",senior:"é idoso",average:"é médio",medium:"é médio",mixed:"é mestiço",hat:"está usando um chapéu",tie:"está usando uma gravata",glasses:"está usando óculos",brownHair:"tem cabelo castanho",shortHair:"tem cabelo curto",beard:"tem barba",caucasian:"é caucasiano",scarf:"está usando um cachecol",blondeHair:"tem cabelo loiro",longHair:"tem cabelo longo",greyHair:"tem cabelo grisalho",bald:"é careca",mustache:"tem bigode",goatee:"tem cavanhaque",muscular:"é musculoso",blackHair:"tem cabelo preto",hoodie:"está usando um moletom",earrings:"está usando brincos",lipstick:"está usando batom",necklace:"está usando um colar",mediumHair:"tem cabelo médio","middle-eastern":"é do Oriente Médio",headscarf:"está usando um lenço na cabeça",redHair:"tem cabelo ruivo",large:"é grande",piercings:"tem piercings",coloredHair:"tem cabelo colorido",indian:"é indiano","native-american":"é nativo-americano"},se=c=>{const e=c.slice(0,3);return new Set(e.flatMap(n=>n.excludes)).size===O-1};function oe(){const{entries:c}=Y(!0,"pt",3,{}),[e,s]=v.useState(!1),n=P(),i=c[n];return v.useMemo(()=>i?i.statements.reduce((t,o)=>{const{excludes:a}=o;return a.forEach(r=>{t[r]?t[r]++:t[r]=1}),t},{}):{},[i]),m.jsxs("div",{className:"full-width grid grid-2",children:[m.jsx(B,{src:c??{},theme:"twilight",collapsed:3}),i&&m.jsxs(z,{gap:18,className:"p-4",children:[m.jsx("div",{children:m.jsx("div",{style:{width:`${105*3}px`,display:"grid",gap:"6px",gridTemplateColumns:"repeat(3, 1fr)"},children:i.suspectsIds.map(t=>m.jsx(M,{id:U(t,"gb"),width:96,className:_(e&&t===i.culpritId&&"red-border")},t))})}),m.jsxs("div",{children:[m.jsx("div",{children:m.jsx(Q,{checkedChildren:"Show culprit",unCheckedChildren:"Hide culprit",checked:e,onChange:s})}),i.statements.map((t,o)=>m.jsx(W,{count:t.excludes.length,color:"cyan",children:m.jsx(C,{message:t.text,banner:!0,type:o<3?"info":"error"},t.key)},t.key))]})]})]})}function pe(){return G("Playground"),m.jsxs(A,{children:[m.jsx(T,{title:"Playground"}),m.jsx(H,{}),m.jsx(A.Content,{className:"content",children:m.jsx(oe,{})})]})}export{pe as default};
