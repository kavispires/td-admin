import{l as c}from"./lodash-CRtbtrxq.js";import{Q as $,O as v,r as p}from"./index-JWAGMJpb.js";import{e as x,g as D}from"./index-IknmYcnY.js";import{u as L}from"./useGetFirebaseDoc--1sFOsL1.js";import{u as M}from"./useTDResource-C1Vu1dm2.js";import{u as P}from"./useUpdateFirebaseDoc-C7ftN37z.js";function z({tdrResourceName:o,firebaseDataCollectionName:s,serialize:n}){const{notification:d}=$.useApp(),g=v(),r=M(o),e=L("tdr",s,{select:n?x:void 0}),[t,u]=p.useState({}),i=P("tdr",s,{onSuccess:()=>{d.success({message:`${s} updated`}),g.refetchQueries({queryKey:["firebase","tdr",s]}),u({})},onError:a=>{d.error({message:`${s} update failed`,description:a.message})}}),f=p.useMemo(()=>!r.isSuccess||!e.isSuccess||i.isPending?{}:(console.log(`%cMerging ${o}+${s} data...`,"color: #f0f"),c.cloneDeep({...r.data??{},...e.data??{},...t})),[o,s,r.data,e.data,r.isSuccess,e.isSuccess,i.isPending,t]),m=!c.isEmpty(t),y=(a,F)=>{u(Q=>({...Q,[a]:F}))},E=e.data,S=()=>{i.mutate(n?D(t):t)};return{data:f,isLoading:r.isLoading||e.isLoading,error:r.error||e.error,firebaseData:E,isSaving:i.isPending,save:S,addEntryToUpdate:y,entriesToUpdate:t,isDirty:m}}export{z as u};
