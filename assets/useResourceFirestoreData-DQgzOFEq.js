import{Y as Q,X as $,r as g}from"./index-DKldGYC9.js";import{l as n}from"./useBaseUrl-CzvQiwMK.js";import{e as h,g as v}from"./index-CS8tCY7i.js";import{u as x}from"./useGetFirestoreDoc-C17LBNOx.js";import{u as L}from"./useTDResource-DZouQedq.js";import{u as M}from"./useUpdateFirestoreDoc-Du_MLqGh.js";function G({tdrResourceName:o,firestoreDataCollectionName:s,serialize:d}){const{notification:u}=Q.useApp(),m=$(),r=L(o),e=x("tdr",s,{select:d?h:void 0}),[t,c]=g.useState({}),i=M("tdr",s,{onSuccess:()=>{u.success({message:`${s} updated`}),m.refetchQueries({queryKey:["firestore","tdr",s]}),c({})},onError:a=>{u.error({message:`${s} update failed`,description:a.message})}}),f=g.useMemo(()=>!r.isSuccess||!e.isSuccess||i.isPending?{}:(console.log(`%cMerging ${o}+${s} data...`,"color: #f0f"),n.cloneDeep({...r.data??{},...e.data??{},...t})),[o,s,r.data,e.data,r.isSuccess,e.isSuccess,i.isPending,t]),y=!n.isEmpty(t),E=(a,F)=>{c(D=>({...D,[a]:F}))},p=e.data,S=()=>{i.mutate(d?v(t):t)};return{data:f,isLoading:r.isLoading||e.isLoading,error:r.error||e.error,firestoreData:p,hasFirestoreData:!n.isEmpty(p),isSaving:i.isPending,save:S,addEntryToUpdate:E,entriesToUpdate:t,isDirty:y}}export{G as u};
